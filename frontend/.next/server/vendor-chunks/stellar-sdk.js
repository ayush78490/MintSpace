"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/stellar-sdk";
exports.ids = ["vendor-chunks/stellar-sdk"];
exports.modules = {

/***/ "(ssr)/./node_modules/stellar-sdk/lib/config.js":
/*!************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/config.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Config = void 0;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar defaultConfig = {\n  allowHttp: false,\n  timeout: 0\n};\nvar config = _objectSpread({}, defaultConfig);\nvar Config = exports.Config = function () {\n  function Config() {\n    _classCallCheck(this, Config);\n  }\n  return _createClass(Config, null, [{\n    key: \"setAllowHttp\",\n    value: function setAllowHttp(value) {\n      config.allowHttp = value;\n    }\n  }, {\n    key: \"setTimeout\",\n    value: function setTimeout(value) {\n      config.timeout = value;\n    }\n  }, {\n    key: \"isAllowHttp\",\n    value: function isAllowHttp() {\n      return config.allowHttp;\n    }\n  }, {\n    key: \"getTimeout\",\n    value: function getTimeout() {\n      return config.timeout;\n    }\n  }, {\n    key: \"setDefault\",\n    value: function setDefault() {\n      config = _objectSpread({}, defaultConfig);\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixjQUFjO0FBQ2Qsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsaUNBQWlDO0FBQ2pDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLHlCQUF5Qix3QkFBd0Isb0NBQW9DLHlDQUF5QyxrQ0FBa0MsMERBQTBELDBCQUEwQjtBQUNwUCw0QkFBNEIsZ0JBQWdCLHNCQUFzQixPQUFPLGtEQUFrRCxzREFBc0QsOEJBQThCLG1KQUFtSixxRUFBcUUsS0FBSztBQUM1YSxvQ0FBb0Msb0VBQW9FLDBEQUEwRDtBQUNsSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3UTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9jb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkNvbmZpZyA9IHZvaWQgMDtcbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkoZSwgciwgdCkgeyByZXR1cm4gKHIgPSBfdG9Qcm9wZXJ0eUtleShyKSkgaW4gZSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCB7IHZhbHVlOiB0LCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pIDogZVtyXSA9IHQsIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG52YXIgZGVmYXVsdENvbmZpZyA9IHtcbiAgYWxsb3dIdHRwOiBmYWxzZSxcbiAgdGltZW91dDogMFxufTtcbnZhciBjb25maWcgPSBfb2JqZWN0U3ByZWFkKHt9LCBkZWZhdWx0Q29uZmlnKTtcbnZhciBDb25maWcgPSBleHBvcnRzLkNvbmZpZyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ29uZmlnKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb25maWcpO1xuICB9XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoQ29uZmlnLCBudWxsLCBbe1xuICAgIGtleTogXCJzZXRBbGxvd0h0dHBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0QWxsb3dIdHRwKHZhbHVlKSB7XG4gICAgICBjb25maWcuYWxsb3dIdHRwID0gdmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldFRpbWVvdXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0VGltZW91dCh2YWx1ZSkge1xuICAgICAgY29uZmlnLnRpbWVvdXQgPSB2YWx1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNBbGxvd0h0dHBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNBbGxvd0h0dHAoKSB7XG4gICAgICByZXR1cm4gY29uZmlnLmFsbG93SHR0cDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0VGltZW91dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUaW1lb3V0KCkge1xuICAgICAgcmV0dXJuIGNvbmZpZy50aW1lb3V0O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXREZWZhdWx0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldERlZmF1bHQoKSB7XG4gICAgICBjb25maWcgPSBfb2JqZWN0U3ByZWFkKHt9LCBkZWZhdWx0Q29uZmlnKTtcbiAgICB9XG4gIH1dKTtcbn0oKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/assembled_transaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AssembledTransaction = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _rpc = __webpack_require__(/*! ../rpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\");\nvar _api = __webpack_require__(/*! ../rpc/api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _transaction = __webpack_require__(/*! ../rpc/transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\");\nvar _rust_result = __webpack_require__(/*! ./rust_result */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nvar _sent_transaction = __webpack_require__(/*! ./sent_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js\");\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar AssembledTransaction = exports.AssembledTransaction = function () {\n  function AssembledTransaction(options) {\n    var _this = this,\n      _this$options$simulat,\n      _this$options$allowHt;\n    _classCallCheck(this, AssembledTransaction);\n    _defineProperty(this, \"simulate\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {\n      var _ref2,\n        restore,\n        account,\n        result,\n        _this$options$fee,\n        _this$options$args,\n        _this$options$timeout,\n        contract,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, restore = _ref2.restore;\n            if (_this.built) {\n              _context.next = 5;\n              break;\n            }\n            if (_this.raw) {\n              _context.next = 4;\n              break;\n            }\n            throw new Error(\"Transaction has not yet been assembled; \" + \"call `AssembledTransaction.build` first.\");\n          case 4:\n            _this.built = _this.raw.build();\n          case 5:\n            restore = restore !== null && restore !== void 0 ? restore : _this.options.restore;\n            delete _this.simulationResult;\n            delete _this.simulationTransactionData;\n            _context.next = 10;\n            return _this.server.simulateTransaction(_this.built);\n          case 10:\n            _this.simulation = _context.sent;\n            if (!(restore && _api.Api.isSimulationRestore(_this.simulation))) {\n              _context.next = 25;\n              break;\n            }\n            _context.next = 14;\n            return (0, _utils.getAccount)(_this.options, _this.server);\n          case 14:\n            account = _context.sent;\n            _context.next = 17;\n            return _this.restoreFootprint(_this.simulation.restorePreamble, account);\n          case 17:\n            result = _context.sent;\n            if (!(result.status === _api.Api.GetTransactionStatus.SUCCESS)) {\n              _context.next = 24;\n              break;\n            }\n            contract = new _stellarBase.Contract(_this.options.contractId);\n            _this.raw = new _stellarBase.TransactionBuilder(account, {\n              fee: (_this$options$fee = _this.options.fee) !== null && _this$options$fee !== void 0 ? _this$options$fee : _stellarBase.BASE_FEE,\n              networkPassphrase: _this.options.networkPassphrase\n            }).addOperation(contract.call.apply(contract, [_this.options.method].concat(_toConsumableArray((_this$options$args = _this.options.args) !== null && _this$options$args !== void 0 ? _this$options$args : [])))).setTimeout((_this$options$timeout = _this.options.timeoutInSeconds) !== null && _this$options$timeout !== void 0 ? _this$options$timeout : _types.DEFAULT_TIMEOUT);\n            _context.next = 23;\n            return _this.simulate();\n          case 23:\n            return _context.abrupt(\"return\", _this);\n          case 24:\n            throw new AssembledTransaction.Errors.RestorationFailure(\"Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:\\n\".concat(JSON.stringify(result)));\n          case 25:\n            if (_api.Api.isSimulationSuccess(_this.simulation)) {\n              _this.built = (0, _transaction.assembleTransaction)(_this.built, _this.simulation).build();\n            }\n            return _context.abrupt(\"return\", _this);\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    _defineProperty(this, \"sign\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n      var _this$options$timeout2;\n      var _ref4,\n        _ref4$force,\n        force,\n        _ref4$signTransaction,\n        signTransaction,\n        sigsNeeded,\n        timeoutInSeconds,\n        signOpts,\n        _yield$signTransactio,\n        signature,\n        error,\n        _args2 = arguments;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref4 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, _ref4$force = _ref4.force, force = _ref4$force === void 0 ? false : _ref4$force, _ref4$signTransaction = _ref4.signTransaction, signTransaction = _ref4$signTransaction === void 0 ? _this.options.signTransaction : _ref4$signTransaction;\n            if (_this.built) {\n              _context2.next = 3;\n              break;\n            }\n            throw new Error(\"Transaction has not yet been simulated\");\n          case 3:\n            if (!(!force && _this.isReadCall)) {\n              _context2.next = 5;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSignatureNeeded(\"This is a read call. It requires no signature or sending. \" + \"Use `force: true` to sign and send anyway.\");\n          case 5:\n            if (signTransaction) {\n              _context2.next = 7;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSigner(\"You must provide a signTransaction function, either when calling \" + \"`signAndSend` or when initializing your Client\");\n          case 7:\n            sigsNeeded = _this.needsNonInvokerSigningBy().filter(function (id) {\n              return !id.startsWith('C');\n            });\n            if (!sigsNeeded.length) {\n              _context2.next = 10;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NeedsMoreSignatures(\"Transaction requires signatures from \".concat(sigsNeeded, \". \") + \"See `needsNonInvokerSigningBy` for details.\");\n          case 10:\n            timeoutInSeconds = (_this$options$timeout2 = _this.options.timeoutInSeconds) !== null && _this$options$timeout2 !== void 0 ? _this$options$timeout2 : _types.DEFAULT_TIMEOUT;\n            _this.built = _stellarBase.TransactionBuilder.cloneFrom(_this.built, {\n              fee: _this.built.fee,\n              timebounds: undefined,\n              sorobanData: _this.simulationData.transactionData\n            }).setTimeout(timeoutInSeconds).build();\n            signOpts = {\n              networkPassphrase: _this.options.networkPassphrase\n            };\n            if (_this.options.address) signOpts.address = _this.options.address;\n            if (_this.options.submit !== undefined) signOpts.submit = _this.options.submit;\n            if (_this.options.submitUrl) signOpts.submitUrl = _this.options.submitUrl;\n            _context2.next = 18;\n            return signTransaction(_this.built.toXDR(), signOpts);\n          case 18:\n            _yield$signTransactio = _context2.sent;\n            signature = _yield$signTransactio.signedTxXdr;\n            error = _yield$signTransactio.error;\n            _this.handleWalletError(error);\n            _this.signed = _stellarBase.TransactionBuilder.fromXDR(signature, _this.options.networkPassphrase);\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    })));\n    _defineProperty(this, \"signAndSend\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {\n      var _ref6,\n        _ref6$force,\n        force,\n        _ref6$signTransaction,\n        signTransaction,\n        originalSubmit,\n        _args3 = arguments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _ref6 = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {}, _ref6$force = _ref6.force, force = _ref6$force === void 0 ? false : _ref6$force, _ref6$signTransaction = _ref6.signTransaction, signTransaction = _ref6$signTransaction === void 0 ? _this.options.signTransaction : _ref6$signTransaction;\n            if (_this.signed) {\n              _context3.next = 10;\n              break;\n            }\n            originalSubmit = _this.options.submit;\n            if (_this.options.submit) {\n              _this.options.submit = false;\n            }\n            _context3.prev = 4;\n            _context3.next = 7;\n            return _this.sign({\n              force: force,\n              signTransaction: signTransaction\n            });\n          case 7:\n            _context3.prev = 7;\n            _this.options.submit = originalSubmit;\n            return _context3.finish(7);\n          case 10:\n            return _context3.abrupt(\"return\", _this.send());\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[4,, 7, 10]]);\n    })));\n    _defineProperty(this, \"needsNonInvokerSigningBy\", function () {\n      var _rawInvokeHostFunctio;\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref7$includeAlreadyS = _ref7.includeAlreadySigned,\n        includeAlreadySigned = _ref7$includeAlreadyS === void 0 ? false : _ref7$includeAlreadyS;\n      if (!_this.built) {\n        throw new Error(\"Transaction has not yet been simulated\");\n      }\n      if (!(\"operations\" in _this.built)) {\n        throw new Error(\"Unexpected Transaction type; no operations: \".concat(JSON.stringify(_this.built)));\n      }\n      var rawInvokeHostFunctionOp = _this.built.operations[0];\n      return _toConsumableArray(new Set(((_rawInvokeHostFunctio = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio !== void 0 ? _rawInvokeHostFunctio : []).filter(function (entry) {\n        return entry.credentials().switch() === _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (includeAlreadySigned || entry.credentials().address().signature().switch().name === \"scvVoid\");\n      }).map(function (entry) {\n        return _stellarBase.Address.fromScAddress(entry.credentials().address().address()).toString();\n      })));\n    });\n    _defineProperty(this, \"signAuthEntries\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {\n      var _rawInvokeHostFunctio2;\n      var _ref9,\n        _ref9$expiration,\n        expiration,\n        _ref9$signAuthEntry,\n        signAuthEntry,\n        _ref9$address,\n        address,\n        _ref9$authorizeEntry,\n        authorizeEntry,\n        needsNonInvokerSigningBy,\n        rawInvokeHostFunctionOp,\n        authEntries,\n        _iterator,\n        _step,\n        _loop,\n        _ret,\n        _args7 = arguments;\n      return _regeneratorRuntime().wrap(function _callee6$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _ref9 = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {}, _ref9$expiration = _ref9.expiration, expiration = _ref9$expiration === void 0 ? _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return _this.server.getLatestLedger();\n                  case 2:\n                    _context4.t0 = _context4.sent.sequence;\n                    return _context4.abrupt(\"return\", _context4.t0 + 100);\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4);\n            }))() : _ref9$expiration, _ref9$signAuthEntry = _ref9.signAuthEntry, signAuthEntry = _ref9$signAuthEntry === void 0 ? _this.options.signAuthEntry : _ref9$signAuthEntry, _ref9$address = _ref9.address, address = _ref9$address === void 0 ? _this.options.publicKey : _ref9$address, _ref9$authorizeEntry = _ref9.authorizeEntry, authorizeEntry = _ref9$authorizeEntry === void 0 ? _stellarBase.authorizeEntry : _ref9$authorizeEntry;\n            if (_this.built) {\n              _context7.next = 3;\n              break;\n            }\n            throw new Error(\"Transaction has not yet been assembled or simulated\");\n          case 3:\n            if (!(authorizeEntry === _stellarBase.authorizeEntry)) {\n              _context7.next = 11;\n              break;\n            }\n            needsNonInvokerSigningBy = _this.needsNonInvokerSigningBy();\n            if (!(needsNonInvokerSigningBy.length === 0)) {\n              _context7.next = 7;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoUnsignedNonInvokerAuthEntries(\"No unsigned non-invoker auth entries; maybe you already signed?\");\n          case 7:\n            if (!(needsNonInvokerSigningBy.indexOf(address !== null && address !== void 0 ? address : \"\") === -1)) {\n              _context7.next = 9;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSignatureNeeded(\"No auth entries for public key \\\"\".concat(address, \"\\\"\"));\n          case 9:\n            if (signAuthEntry) {\n              _context7.next = 11;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSigner(\"You must provide `signAuthEntry` or a custom `authorizeEntry`\");\n          case 11:\n            rawInvokeHostFunctionOp = _this.built.operations[0];\n            authEntries = (_rawInvokeHostFunctio2 = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio2 !== void 0 ? _rawInvokeHostFunctio2 : [];\n            _iterator = _createForOfIteratorHelper(authEntries.entries());\n            _context7.prev = 14;\n            _loop = _regeneratorRuntime().mark(function _loop() {\n              var _step$value, i, entry, credentials, authEntryAddress, sign;\n              return _regeneratorRuntime().wrap(function _loop$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _step$value = _slicedToArray(_step.value, 2), i = _step$value[0], entry = _step$value[1];\n                    credentials = _stellarBase.xdr.SorobanCredentials.fromXDR(entry.credentials().toXDR());\n                    if (!(credentials.switch() !== _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress())) {\n                      _context6.next = 4;\n                      break;\n                    }\n                    return _context6.abrupt(\"return\", 0);\n                  case 4:\n                    authEntryAddress = _stellarBase.Address.fromScAddress(credentials.address().address()).toString();\n                    if (!(authEntryAddress !== address)) {\n                      _context6.next = 7;\n                      break;\n                    }\n                    return _context6.abrupt(\"return\", 0);\n                  case 7:\n                    sign = signAuthEntry !== null && signAuthEntry !== void 0 ? signAuthEntry : Promise.resolve;\n                    _context6.t0 = authorizeEntry;\n                    _context6.t1 = entry;\n                    _context6.t2 = function () {\n                      var _ref11 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(preimage) {\n                        var _yield$sign, signedAuthEntry, error;\n                        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                          while (1) switch (_context5.prev = _context5.next) {\n                            case 0:\n                              _context5.next = 2;\n                              return sign(preimage.toXDR(\"base64\"), {\n                                address: address\n                              });\n                            case 2:\n                              _yield$sign = _context5.sent;\n                              signedAuthEntry = _yield$sign.signedAuthEntry;\n                              error = _yield$sign.error;\n                              _this.handleWalletError(error);\n                              return _context5.abrupt(\"return\", Buffer.from(signedAuthEntry, \"base64\"));\n                            case 7:\n                            case \"end\":\n                              return _context5.stop();\n                          }\n                        }, _callee5);\n                      }));\n                      return function (_x) {\n                        return _ref11.apply(this, arguments);\n                      };\n                    }();\n                    _context6.next = 13;\n                    return expiration;\n                  case 13:\n                    _context6.t3 = _context6.sent;\n                    _context6.t4 = _this.options.networkPassphrase;\n                    _context6.next = 17;\n                    return (0, _context6.t0)(_context6.t1, _context6.t2, _context6.t3, _context6.t4);\n                  case 17:\n                    authEntries[i] = _context6.sent;\n                  case 18:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _loop);\n            });\n            _iterator.s();\n          case 17:\n            if ((_step = _iterator.n()).done) {\n              _context7.next = 24;\n              break;\n            }\n            return _context7.delegateYield(_loop(), \"t0\", 19);\n          case 19:\n            _ret = _context7.t0;\n            if (!(_ret === 0)) {\n              _context7.next = 22;\n              break;\n            }\n            return _context7.abrupt(\"continue\", 22);\n          case 22:\n            _context7.next = 17;\n            break;\n          case 24:\n            _context7.next = 29;\n            break;\n          case 26:\n            _context7.prev = 26;\n            _context7.t1 = _context7[\"catch\"](14);\n            _iterator.e(_context7.t1);\n          case 29:\n            _context7.prev = 29;\n            _iterator.f();\n            return _context7.finish(29);\n          case 32:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee6, null, [[14, 26, 29, 32]]);\n    })));\n    this.options = options;\n    this.options.simulate = (_this$options$simulat = this.options.simulate) !== null && _this$options$simulat !== void 0 ? _this$options$simulat : true;\n    this.server = new _rpc.Server(this.options.rpcUrl, {\n      allowHttp: (_this$options$allowHt = this.options.allowHttp) !== null && _this$options$allowHt !== void 0 ? _this$options$allowHt : false\n    });\n  }\n  return _createClass(AssembledTransaction, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _this$built;\n      return JSON.stringify({\n        method: this.options.method,\n        tx: (_this$built = this.built) === null || _this$built === void 0 ? void 0 : _this$built.toXDR(),\n        simulationResult: {\n          auth: this.simulationData.result.auth.map(function (a) {\n            return a.toXDR(\"base64\");\n          }),\n          retval: this.simulationData.result.retval.toXDR(\"base64\")\n        },\n        simulationTransactionData: this.simulationData.transactionData.toXDR(\"base64\")\n      });\n    }\n  }, {\n    key: \"toXDR\",\n    value: function toXDR() {\n      var _this$built2;\n      if (!this.built) throw new Error(\"Transaction has not yet been simulated; \" + \"call `AssembledTransaction.simulate` first.\");\n      return (_this$built2 = this.built) === null || _this$built2 === void 0 ? void 0 : _this$built2.toEnvelope().toXDR('base64');\n    }\n  }, {\n    key: \"handleWalletError\",\n    value: function handleWalletError(error) {\n      if (!error) return;\n      var message = error.message,\n        code = error.code;\n      var fullMessage = \"\".concat(message).concat(error.ext ? \" (\".concat(error.ext.join(', '), \")\") : '');\n      switch (code) {\n        case -1:\n          throw new AssembledTransaction.Errors.InternalWalletError(fullMessage);\n        case -2:\n          throw new AssembledTransaction.Errors.ExternalServiceError(fullMessage);\n        case -3:\n          throw new AssembledTransaction.Errors.InvalidClientRequest(fullMessage);\n        case -4:\n          throw new AssembledTransaction.Errors.UserRejected(fullMessage);\n        default:\n          throw new Error(\"Unhandled error: \".concat(fullMessage));\n      }\n    }\n  }, {\n    key: \"simulationData\",\n    get: function get() {\n      var _simulation$result;\n      if (this.simulationResult && this.simulationTransactionData) {\n        return {\n          result: this.simulationResult,\n          transactionData: this.simulationTransactionData\n        };\n      }\n      var simulation = this.simulation;\n      if (!simulation) {\n        throw new AssembledTransaction.Errors.NotYetSimulated(\"Transaction has not yet been simulated\");\n      }\n      if (_api.Api.isSimulationError(simulation)) {\n        throw new AssembledTransaction.Errors.SimulationFailed(\"Transaction simulation failed: \\\"\".concat(simulation.error, \"\\\"\"));\n      }\n      if (_api.Api.isSimulationRestore(simulation)) {\n        throw new AssembledTransaction.Errors.ExpiredState(\"You need to restore some contract state before you can invoke this method.\\n\" + 'You can set `restore` to true in the method options in order to ' + 'automatically restore the contract state when needed.');\n      }\n      this.simulationResult = (_simulation$result = simulation.result) !== null && _simulation$result !== void 0 ? _simulation$result : {\n        auth: [],\n        retval: _stellarBase.xdr.ScVal.scvVoid()\n      };\n      this.simulationTransactionData = simulation.transactionData.build();\n      return {\n        result: this.simulationResult,\n        transactionData: this.simulationTransactionData\n      };\n    }\n  }, {\n    key: \"result\",\n    get: function get() {\n      try {\n        if (!this.simulationData.result) {\n          throw new Error(\"No simulation result!\");\n        }\n        return this.options.parseResultXdr(this.simulationData.result.retval);\n      } catch (e) {\n        if (!(0, _utils.implementsToString)(e)) throw e;\n        var err = this.parseError(e.toString());\n        if (err) return err;\n        throw e;\n      }\n    }\n  }, {\n    key: \"parseError\",\n    value: function parseError(errorMessage) {\n      if (!this.options.errorTypes) return undefined;\n      var match = errorMessage.match(_utils.contractErrorPattern);\n      if (!match) return undefined;\n      var i = parseInt(match[1], 10);\n      var err = this.options.errorTypes[i];\n      if (!err) return undefined;\n      return new _rust_result.Err(err);\n    }\n  }, {\n    key: \"send\",\n    value: (function () {\n      var _send = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {\n        var sent;\n        return _regeneratorRuntime().wrap(function _callee7$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (this.signed) {\n                _context8.next = 2;\n                break;\n              }\n              throw new Error(\"The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.\");\n            case 2:\n              _context8.next = 4;\n              return _sent_transaction.SentTransaction.init(this);\n            case 4:\n              sent = _context8.sent;\n              return _context8.abrupt(\"return\", sent);\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee7, this);\n      }));\n      function send() {\n        return _send.apply(this, arguments);\n      }\n      return send;\n    }())\n  }, {\n    key: \"isReadCall\",\n    get: function get() {\n      var authsCount = this.simulationData.result.auth.length;\n      var writeLength = this.simulationData.transactionData.resources().footprint().readWrite().length;\n      return authsCount === 0 && writeLength === 0;\n    }\n  }, {\n    key: \"restoreFootprint\",\n    value: (function () {\n      var _restoreFootprint = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(restorePreamble, account) {\n        var restoreTx, sentTransaction;\n        return _regeneratorRuntime().wrap(function _callee8$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (this.options.signTransaction) {\n                _context9.next = 2;\n                break;\n              }\n              throw new Error(\"For automatic restore to work you must provide a signTransaction function when initializing your Client\");\n            case 2:\n              if (!(account !== null && account !== void 0)) {\n                _context9.next = 6;\n                break;\n              }\n              _context9.t0 = account;\n              _context9.next = 9;\n              break;\n            case 6:\n              _context9.next = 8;\n              return (0, _utils.getAccount)(this.options, this.server);\n            case 8:\n              _context9.t0 = _context9.sent;\n            case 9:\n              account = _context9.t0;\n              _context9.next = 12;\n              return AssembledTransaction.buildFootprintRestoreTransaction(_objectSpread({}, this.options), restorePreamble.transactionData, account, restorePreamble.minResourceFee);\n            case 12:\n              restoreTx = _context9.sent;\n              _context9.next = 15;\n              return restoreTx.signAndSend();\n            case 15:\n              sentTransaction = _context9.sent;\n              if (sentTransaction.getTransactionResponse) {\n                _context9.next = 18;\n                break;\n              }\n              throw new AssembledTransaction.Errors.RestorationFailure(\"The attempt at automatic restore failed. \\n\".concat(JSON.stringify(sentTransaction)));\n            case 18:\n              return _context9.abrupt(\"return\", sentTransaction.getTransactionResponse);\n            case 19:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee8, this);\n      }));\n      function restoreFootprint(_x2, _x3) {\n        return _restoreFootprint.apply(this, arguments);\n      }\n      return restoreFootprint;\n    }())\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(options, _ref12) {\n      var tx = _ref12.tx,\n        simulationResult = _ref12.simulationResult,\n        simulationTransactionData = _ref12.simulationTransactionData;\n      var txn = new AssembledTransaction(options);\n      txn.built = _stellarBase.TransactionBuilder.fromXDR(tx, options.networkPassphrase);\n      txn.simulationResult = {\n        auth: simulationResult.auth.map(function (a) {\n          return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(a, \"base64\");\n        }),\n        retval: _stellarBase.xdr.ScVal.fromXDR(simulationResult.retval, \"base64\")\n      };\n      txn.simulationTransactionData = _stellarBase.xdr.SorobanTransactionData.fromXDR(simulationTransactionData, \"base64\");\n      return txn;\n    }\n  }, {\n    key: \"fromXDR\",\n    value: function fromXDR(options, encodedXDR, spec) {\n      var _operation$func;\n      var envelope = _stellarBase.xdr.TransactionEnvelope.fromXDR(encodedXDR, \"base64\");\n      var built = _stellarBase.TransactionBuilder.fromXDR(envelope, options.networkPassphrase);\n      var operation = built.operations[0];\n      if (!(operation !== null && operation !== void 0 && (_operation$func = operation.func) !== null && _operation$func !== void 0 && _operation$func.value) || typeof operation.func.value !== 'function') {\n        throw new Error(\"Could not extract the method from the transaction envelope.\");\n      }\n      var invokeContractArgs = operation.func.value();\n      if (!(invokeContractArgs !== null && invokeContractArgs !== void 0 && invokeContractArgs.functionName)) {\n        throw new Error(\"Could not extract the method name from the transaction envelope.\");\n      }\n      var method = invokeContractArgs.functionName().toString('utf-8');\n      var txn = new AssembledTransaction(_objectSpread(_objectSpread({}, options), {}, {\n        method: method,\n        parseResultXdr: function parseResultXdr(result) {\n          return spec.funcResToNative(method, result);\n        }\n      }));\n      txn.built = built;\n      return txn;\n    }\n  }, {\n    key: \"build\",\n    value: function build(options) {\n      var _options$args;\n      var contract = new _stellarBase.Contract(options.contractId);\n      return AssembledTransaction.buildWithOp(contract.call.apply(contract, [options.method].concat(_toConsumableArray((_options$args = options.args) !== null && _options$args !== void 0 ? _options$args : []))), options);\n    }\n  }, {\n    key: \"buildWithOp\",\n    value: (function () {\n      var _buildWithOp = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(operation, options) {\n        var _options$fee, _options$timeoutInSec;\n        var tx, account;\n        return _regeneratorRuntime().wrap(function _callee9$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              tx = new AssembledTransaction(options);\n              _context10.next = 3;\n              return (0, _utils.getAccount)(options, tx.server);\n            case 3:\n              account = _context10.sent;\n              tx.raw = new _stellarBase.TransactionBuilder(account, {\n                fee: (_options$fee = options.fee) !== null && _options$fee !== void 0 ? _options$fee : _stellarBase.BASE_FEE,\n                networkPassphrase: options.networkPassphrase\n              }).setTimeout((_options$timeoutInSec = options.timeoutInSeconds) !== null && _options$timeoutInSec !== void 0 ? _options$timeoutInSec : _types.DEFAULT_TIMEOUT).addOperation(operation);\n              if (!options.simulate) {\n                _context10.next = 8;\n                break;\n              }\n              _context10.next = 8;\n              return tx.simulate();\n            case 8:\n              return _context10.abrupt(\"return\", tx);\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee9);\n      }));\n      function buildWithOp(_x4, _x5) {\n        return _buildWithOp.apply(this, arguments);\n      }\n      return buildWithOp;\n    }())\n  }, {\n    key: \"buildFootprintRestoreTransaction\",\n    value: function () {\n      var _buildFootprintRestoreTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(options, sorobanData, account, fee) {\n        var _options$timeoutInSec2;\n        var tx;\n        return _regeneratorRuntime().wrap(function _callee10$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              tx = new AssembledTransaction(options);\n              tx.raw = new _stellarBase.TransactionBuilder(account, {\n                fee: fee,\n                networkPassphrase: options.networkPassphrase\n              }).setSorobanData(sorobanData instanceof _stellarBase.SorobanDataBuilder ? sorobanData.build() : sorobanData).addOperation(_stellarBase.Operation.restoreFootprint({})).setTimeout((_options$timeoutInSec2 = options.timeoutInSeconds) !== null && _options$timeoutInSec2 !== void 0 ? _options$timeoutInSec2 : _types.DEFAULT_TIMEOUT);\n              _context11.next = 4;\n              return tx.simulate({\n                restore: false\n              });\n            case 4:\n              return _context11.abrupt(\"return\", tx);\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee10);\n      }));\n      function buildFootprintRestoreTransaction(_x6, _x7, _x8, _x9) {\n        return _buildFootprintRestoreTransaction.apply(this, arguments);\n      }\n      return buildFootprintRestoreTransaction;\n    }()\n  }]);\n}();\n_defineProperty(AssembledTransaction, \"Errors\", {\n  ExpiredState: function (_Error) {\n    function ExpiredStateError() {\n      _classCallCheck(this, ExpiredStateError);\n      return _callSuper(this, ExpiredStateError, arguments);\n    }\n    _inherits(ExpiredStateError, _Error);\n    return _createClass(ExpiredStateError);\n  }(_wrapNativeSuper(Error)),\n  RestorationFailure: function (_Error2) {\n    function RestoreFailureError() {\n      _classCallCheck(this, RestoreFailureError);\n      return _callSuper(this, RestoreFailureError, arguments);\n    }\n    _inherits(RestoreFailureError, _Error2);\n    return _createClass(RestoreFailureError);\n  }(_wrapNativeSuper(Error)),\n  NeedsMoreSignatures: function (_Error3) {\n    function NeedsMoreSignaturesError() {\n      _classCallCheck(this, NeedsMoreSignaturesError);\n      return _callSuper(this, NeedsMoreSignaturesError, arguments);\n    }\n    _inherits(NeedsMoreSignaturesError, _Error3);\n    return _createClass(NeedsMoreSignaturesError);\n  }(_wrapNativeSuper(Error)),\n  NoSignatureNeeded: function (_Error4) {\n    function NoSignatureNeededError() {\n      _classCallCheck(this, NoSignatureNeededError);\n      return _callSuper(this, NoSignatureNeededError, arguments);\n    }\n    _inherits(NoSignatureNeededError, _Error4);\n    return _createClass(NoSignatureNeededError);\n  }(_wrapNativeSuper(Error)),\n  NoUnsignedNonInvokerAuthEntries: function (_Error5) {\n    function NoUnsignedNonInvokerAuthEntriesError() {\n      _classCallCheck(this, NoUnsignedNonInvokerAuthEntriesError);\n      return _callSuper(this, NoUnsignedNonInvokerAuthEntriesError, arguments);\n    }\n    _inherits(NoUnsignedNonInvokerAuthEntriesError, _Error5);\n    return _createClass(NoUnsignedNonInvokerAuthEntriesError);\n  }(_wrapNativeSuper(Error)),\n  NoSigner: function (_Error6) {\n    function NoSignerError() {\n      _classCallCheck(this, NoSignerError);\n      return _callSuper(this, NoSignerError, arguments);\n    }\n    _inherits(NoSignerError, _Error6);\n    return _createClass(NoSignerError);\n  }(_wrapNativeSuper(Error)),\n  NotYetSimulated: function (_Error7) {\n    function NotYetSimulatedError() {\n      _classCallCheck(this, NotYetSimulatedError);\n      return _callSuper(this, NotYetSimulatedError, arguments);\n    }\n    _inherits(NotYetSimulatedError, _Error7);\n    return _createClass(NotYetSimulatedError);\n  }(_wrapNativeSuper(Error)),\n  FakeAccount: function (_Error8) {\n    function FakeAccountError() {\n      _classCallCheck(this, FakeAccountError);\n      return _callSuper(this, FakeAccountError, arguments);\n    }\n    _inherits(FakeAccountError, _Error8);\n    return _createClass(FakeAccountError);\n  }(_wrapNativeSuper(Error)),\n  SimulationFailed: function (_Error9) {\n    function SimulationFailedError() {\n      _classCallCheck(this, SimulationFailedError);\n      return _callSuper(this, SimulationFailedError, arguments);\n    }\n    _inherits(SimulationFailedError, _Error9);\n    return _createClass(SimulationFailedError);\n  }(_wrapNativeSuper(Error)),\n  InternalWalletError: function (_Error10) {\n    function InternalWalletError() {\n      _classCallCheck(this, InternalWalletError);\n      return _callSuper(this, InternalWalletError, arguments);\n    }\n    _inherits(InternalWalletError, _Error10);\n    return _createClass(InternalWalletError);\n  }(_wrapNativeSuper(Error)),\n  ExternalServiceError: function (_Error11) {\n    function ExternalServiceError() {\n      _classCallCheck(this, ExternalServiceError);\n      return _callSuper(this, ExternalServiceError, arguments);\n    }\n    _inherits(ExternalServiceError, _Error11);\n    return _createClass(ExternalServiceError);\n  }(_wrapNativeSuper(Error)),\n  InvalidClientRequest: function (_Error12) {\n    function InvalidClientRequestError() {\n      _classCallCheck(this, InvalidClientRequestError);\n      return _callSuper(this, InvalidClientRequestError, arguments);\n    }\n    _inherits(InvalidClientRequestError, _Error12);\n    return _createClass(InvalidClientRequestError);\n  }(_wrapNativeSuper(Error)),\n  UserRejected: function (_Error13) {\n    function UserRejectedError() {\n      _classCallCheck(this, UserRejectedError);\n      return _callSuper(this, UserRejectedError, arguments);\n    }\n    _inherits(UserRejectedError, _Error13);\n    return _createClass(UserRejectedError);\n  }(_wrapNativeSuper(Error))\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/basic_node_signer.js":
/*!********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/basic_node_signer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.basicNodeSigner = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nvar basicNodeSigner = exports.basicNodeSigner = function basicNodeSigner(keypair, networkPassphrase) {\n  return {\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(xdr, opts) {\n        var t;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              t = _stellarBase.TransactionBuilder.fromXDR(xdr, (opts === null || opts === void 0 ? void 0 : opts.networkPassphrase) || networkPassphrase);\n              t.sign(keypair);\n              return _context.abrupt(\"return\", {\n                signedTxXdr: t.toXDR(),\n                signerAddress: keypair.publicKey()\n              });\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function signTransaction(_x, _x2) {\n        return _signTransaction.apply(this, arguments);\n      }\n      return signTransaction;\n    }(),\n    signAuthEntry: function () {\n      var _signAuthEntry = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(authEntry) {\n        var signedAuthEntry;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              signedAuthEntry = keypair.sign((0, _stellarBase.hash)(Buffer.from(authEntry, \"base64\"))).toString(\"base64\");\n              return _context2.abrupt(\"return\", {\n                signedAuthEntry: signedAuthEntry,\n                signerAddress: keypair.publicKey()\n              });\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function signAuthEntry(_x3) {\n        return _signAuthEntry.apply(this, arguments);\n      }\n      return signAuthEntry;\n    }()\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/basic_node_signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/client.js":
/*!*********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/client.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Client = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _spec = __webpack_require__(/*! ./spec */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js\");\nvar _rpc = __webpack_require__(/*! ../rpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\");\nvar _assembled_transaction = __webpack_require__(/*! ./assembled_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\");\nvar _excluded = [\"method\"],\n  _excluded2 = [\"wasmHash\", \"salt\", \"format\", \"fee\", \"timeoutInSeconds\", \"simulate\"];\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nvar CONSTRUCTOR_FUNC = \"__constructor\";\nfunction specFromWasm(_x) {\n  return _specFromWasm.apply(this, arguments);\n}\nfunction _specFromWasm() {\n  _specFromWasm = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(wasm) {\n    var xdrSections, wasmModule, customData, bufferSection, specEntryArray, spec;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return WebAssembly.compile(wasm);\n        case 3:\n          wasmModule = _context5.sent;\n          xdrSections = WebAssembly.Module.customSections(wasmModule, \"contractspecv0\");\n          _context5.next = 11;\n          break;\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          customData = parseWasmCustomSections(wasm);\n          xdrSections = customData.get('contractspecv0');\n        case 11:\n          if (!(!xdrSections || xdrSections.length === 0)) {\n            _context5.next = 13;\n            break;\n          }\n          throw new Error(\"Could not obtain contract spec from wasm\");\n        case 13:\n          bufferSection = Buffer.from(xdrSections[0]);\n          specEntryArray = (0, _utils.processSpecEntryStream)(bufferSection);\n          spec = new _spec.Spec(specEntryArray);\n          return _context5.abrupt(\"return\", spec);\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 7]]);\n  }));\n  return _specFromWasm.apply(this, arguments);\n}\nfunction parseWasmCustomSections(buffer) {\n  var sections = new Map();\n  var arrayBuffer = buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);\n  var offset = 0;\n  var read = function read(length) {\n    if (offset + length > buffer.byteLength) throw new Error('Buffer overflow');\n    var bytes = new Uint8Array(arrayBuffer, offset, length);\n    offset += length;\n    return bytes;\n  };\n  if (_toConsumableArray(read(4)).join() !== '0,97,115,109') throw new Error('Invalid WASM magic');\n  if (_toConsumableArray(read(4)).join() !== '1,0,0,0') throw new Error('Invalid WASM version');\n  while (offset < buffer.byteLength) {\n    var sectionId = read(1)[0];\n    var sectionLength = readVarUint32();\n    var start = offset;\n    if (sectionId === 0) {\n      var nameLen = readVarUint32();\n      if (nameLen === 0 || offset + nameLen > start + sectionLength) continue;\n      var nameBytes = read(nameLen);\n      var payload = read(sectionLength - (offset - start));\n      try {\n        var name = new TextDecoder('utf-8', {\n          fatal: true\n        }).decode(nameBytes);\n        if (payload.length > 0) {\n          sections.set(name, (sections.get(name) || []).concat(payload));\n        }\n      } catch (_unused) {}\n    } else {\n      offset += sectionLength;\n    }\n  }\n  function readVarUint32() {\n    var value = 0,\n      shift = 0;\n    while (true) {\n      var byte = read(1)[0];\n      value |= (byte & 0x7F) << shift;\n      if ((byte & 0x80) === 0) break;\n      if ((shift += 7) >= 32) throw new Error('Invalid WASM value');\n    }\n    return value >>> 0;\n  }\n  return sections;\n}\nfunction specFromWasmHash(_x2, _x3) {\n  return _specFromWasmHash.apply(this, arguments);\n}\nfunction _specFromWasmHash() {\n  _specFromWasmHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(wasmHash, options) {\n    var format,\n      rpcUrl,\n      allowHttp,\n      serverOpts,\n      server,\n      wasm,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          format = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : \"hex\";\n          if (!(!options || !options.rpcUrl)) {\n            _context6.next = 3;\n            break;\n          }\n          throw new TypeError(\"options must contain rpcUrl\");\n        case 3:\n          rpcUrl = options.rpcUrl, allowHttp = options.allowHttp;\n          serverOpts = {\n            allowHttp: allowHttp\n          };\n          server = new _rpc.Server(rpcUrl, serverOpts);\n          _context6.next = 8;\n          return server.getContractWasmByHash(wasmHash, format);\n        case 8:\n          wasm = _context6.sent;\n          return _context6.abrupt(\"return\", specFromWasm(wasm));\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _specFromWasmHash.apply(this, arguments);\n}\nvar Client = exports.Client = function () {\n  function Client(spec, options) {\n    var _this = this;\n    _classCallCheck(this, Client);\n    _defineProperty(this, \"txFromJSON\", function (json) {\n      var _JSON$parse = JSON.parse(json),\n        method = _JSON$parse.method,\n        tx = _objectWithoutProperties(_JSON$parse, _excluded);\n      return _assembled_transaction.AssembledTransaction.fromJSON(_objectSpread(_objectSpread({}, _this.options), {}, {\n        method: method,\n        parseResultXdr: function parseResultXdr(result) {\n          return _this.spec.funcResToNative(method, result);\n        }\n      }), tx);\n    });\n    _defineProperty(this, \"txFromXDR\", function (xdrBase64) {\n      return _assembled_transaction.AssembledTransaction.fromXDR(_this.options, xdrBase64, _this.spec);\n    });\n    this.spec = spec;\n    this.options = options;\n    this.spec.funcs().forEach(function (xdrFn) {\n      var method = xdrFn.name().toString();\n      if (method === CONSTRUCTOR_FUNC) {\n        return;\n      }\n      var assembleTransaction = function assembleTransaction(args, methodOptions) {\n        return _assembled_transaction.AssembledTransaction.build(_objectSpread(_objectSpread(_objectSpread({\n          method: method,\n          args: args && spec.funcArgsToScVals(method, args)\n        }, options), methodOptions), {}, {\n          errorTypes: spec.errorCases().reduce(function (acc, curr) {\n            return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curr.value(), {\n              message: curr.doc().toString()\n            }));\n          }, {}),\n          parseResultXdr: function parseResultXdr(result) {\n            return spec.funcResToNative(method, result);\n          }\n        }));\n      };\n      _this[method] = spec.getFunc(method).inputs().length === 0 ? function (opts) {\n        return assembleTransaction(undefined, opts);\n      } : assembleTransaction;\n    });\n  }\n  return _createClass(Client, null, [{\n    key: \"deploy\",\n    value: function () {\n      var _deploy = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(args, options) {\n        var wasmHash, salt, format, fee, timeoutInSeconds, simulate, clientOptions, spec, operation;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              wasmHash = options.wasmHash, salt = options.salt, format = options.format, fee = options.fee, timeoutInSeconds = options.timeoutInSeconds, simulate = options.simulate, clientOptions = _objectWithoutProperties(options, _excluded2);\n              _context.next = 3;\n              return specFromWasmHash(wasmHash, clientOptions, format);\n            case 3:\n              spec = _context.sent;\n              operation = _stellarBase.Operation.createCustomContract({\n                address: new _stellarBase.Address(options.address || options.publicKey),\n                wasmHash: typeof wasmHash === \"string\" ? Buffer.from(wasmHash, format !== null && format !== void 0 ? format : \"hex\") : wasmHash,\n                salt: salt,\n                constructorArgs: args ? spec.funcArgsToScVals(CONSTRUCTOR_FUNC, args) : []\n              });\n              return _context.abrupt(\"return\", _assembled_transaction.AssembledTransaction.buildWithOp(operation, _objectSpread(_objectSpread({\n                fee: fee,\n                timeoutInSeconds: timeoutInSeconds,\n                simulate: simulate\n              }, clientOptions), {}, {\n                contractId: \"ignored\",\n                method: CONSTRUCTOR_FUNC,\n                parseResultXdr: function parseResultXdr(result) {\n                  return new Client(spec, _objectSpread(_objectSpread({}, clientOptions), {}, {\n                    contractId: _stellarBase.Address.fromScVal(result).toString()\n                  }));\n                }\n              })));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function deploy(_x4, _x5) {\n        return _deploy.apply(this, arguments);\n      }\n      return deploy;\n    }()\n  }, {\n    key: \"fromWasmHash\",\n    value: (function () {\n      var _fromWasmHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(wasmHash, options) {\n        var format,\n          rpcUrl,\n          allowHttp,\n          serverOpts,\n          server,\n          wasm,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              format = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : \"hex\";\n              if (!(!options || !options.rpcUrl)) {\n                _context2.next = 3;\n                break;\n              }\n              throw new TypeError('options must contain rpcUrl');\n            case 3:\n              rpcUrl = options.rpcUrl, allowHttp = options.allowHttp;\n              serverOpts = {\n                allowHttp: allowHttp\n              };\n              server = new _rpc.Server(rpcUrl, serverOpts);\n              _context2.next = 8;\n              return server.getContractWasmByHash(wasmHash, format);\n            case 8:\n              wasm = _context2.sent;\n              return _context2.abrupt(\"return\", Client.fromWasm(wasm, options));\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function fromWasmHash(_x6, _x7) {\n        return _fromWasmHash.apply(this, arguments);\n      }\n      return fromWasmHash;\n    }())\n  }, {\n    key: \"fromWasm\",\n    value: (function () {\n      var _fromWasm = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(wasm, options) {\n        var spec;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return specFromWasm(wasm);\n            case 2:\n              spec = _context3.sent;\n              return _context3.abrupt(\"return\", new Client(spec, options));\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function fromWasm(_x8, _x9) {\n        return _fromWasm.apply(this, arguments);\n      }\n      return fromWasm;\n    }())\n  }, {\n    key: \"from\",\n    value: (function () {\n      var _from = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(options) {\n        var rpcUrl, contractId, allowHttp, serverOpts, server, wasm;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(!options || !options.rpcUrl || !options.contractId)) {\n                _context4.next = 2;\n                break;\n              }\n              throw new TypeError('options must contain rpcUrl and contractId');\n            case 2:\n              rpcUrl = options.rpcUrl, contractId = options.contractId, allowHttp = options.allowHttp;\n              serverOpts = {\n                allowHttp: allowHttp\n              };\n              server = new _rpc.Server(rpcUrl, serverOpts);\n              _context4.next = 7;\n              return server.getContractWasmByContractId(contractId);\n            case 7:\n              wasm = _context4.sent;\n              return _context4.abrupt(\"return\", Client.fromWasm(wasm, options));\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function from(_x10) {\n        return _from.apply(this, arguments);\n      }\n      return from;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixjQUFjO0FBQ2QsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ2xELFlBQVksbUJBQU8sQ0FBQyxxRUFBUTtBQUM1QixXQUFXLG1CQUFPLENBQUMsaUVBQVE7QUFDM0IsNkJBQTZCLG1CQUFPLENBQUMsdUdBQXlCO0FBQzlELGFBQWEsbUJBQU8sQ0FBQyx1RUFBUztBQUM5QjtBQUNBO0FBQ0EsaUNBQWlDLGNBQWMsdURBQXVELGFBQWEsYUFBYSxnR0FBZ0csaUJBQWlCLCtDQUErQyxrSEFBa0gsMkJBQTJCLHFDQUFxQywwREFBMEQsV0FBVyxNQUFNLFNBQVMsU0FBUyxZQUFZLG9DQUFvQyxzQkFBc0IsNEJBQTRCLHlIQUF5SCx5QkFBeUIsa0NBQWtDLFFBQVEsNkJBQTZCLE1BQU0sU0FBUyx1Q0FBdUMsWUFBWSxTQUFTLDZCQUE2QixlQUFlLDBGQUEwRix3QkFBd0IsZ0NBQWdDLHlDQUF5QyxZQUFZLDJCQUEyQixjQUFjLEdBQUcsMERBQTBELHlDQUF5Qyx1RkFBdUYsb0NBQW9DLG1EQUFtRCw0QkFBNEIsNEJBQTRCLElBQUksS0FBSywrQkFBK0IsOEJBQThCLDhCQUE4QiwwQkFBMEIsNEJBQTRCLHNHQUFzRywwQkFBMEIsaUJBQWlCLDJCQUEyQixxQ0FBcUMsb0JBQW9CLGlCQUFpQixrQ0FBa0MsS0FBSyxZQUFZLE9BQU8scUJBQXFCLDhCQUE4Qix3Q0FBd0MsK0JBQStCLHFCQUFxQixLQUFLLGlIQUFpSCxLQUFLLHFDQUFxQyxXQUFXLHlCQUF5QiwwREFBMEQsZUFBZSw0QkFBNEIsU0FBUyx3QkFBd0IsOEJBQThCLElBQUksb0JBQW9CLFNBQVMsbUNBQW1DLFNBQVMsdUJBQXVCLGNBQWMsa0RBQWtELGlDQUFpQyxpQ0FBaUMsOEJBQThCLHlEQUF5RCxPQUFPLDJCQUEyQiwyQkFBMkIsK0NBQStDLFNBQVMsZ0NBQWdDLHlFQUF5RSxxQ0FBcUMscUNBQXFDLDBSQUEwUix3Q0FBd0Msd0ZBQXdGLGVBQWUsa1FBQWtRLDJCQUEyQixVQUFVLGdCQUFnQiw4R0FBOEcsNEJBQTRCLDRCQUE0QixxREFBcUQsc0JBQXNCLHFCQUFxQixnQkFBZ0Isb0RBQW9ELHFCQUFxQixxQkFBcUIsY0FBYyx5QkFBeUIsMkNBQTJDLHdCQUF3QixrQ0FBa0MsT0FBTyxlQUFlLG9FQUFvRSxnREFBZ0QsdUJBQXVCLHdEQUF3RCx1RkFBdUYscURBQXFELGtEQUFrRCw0Q0FBNEMsc0lBQXNJLGlEQUFpRCwrRkFBK0YsMEJBQTBCLHlNQUF5TSwyQkFBMkIsU0FBUyxlQUFlLG1HQUFtRyxjQUFjLHlFQUF5RSwrQkFBK0IsZ0RBQWdELG1FQUFtRSxxQ0FBcUMsSUFBSSxrRkFBa0YsY0FBYyx1Q0FBdUMsOEJBQThCLDJCQUEyQiwyQkFBMkIsNEJBQTRCLHNDQUFzQyxPQUFPLFNBQVMsSUFBSSxpQkFBaUIsMkRBQTJELGlDQUFpQywyQ0FBMkMsaURBQWlELHlSQUF5UiwwQkFBMEIsZ0JBQWdCLHVDQUF1QyxxQ0FBcUMsbUJBQW1CLHFEQUFxRCx3QkFBd0IsY0FBYyx3QkFBd0IsNEZBQTRGLHlDQUF5QyxRQUFRLE9BQU8sOENBQThDLCtDQUErQyw2QkFBNkIsNERBQTRELGNBQWMsMkRBQTJELDZEQUE2RCxjQUFjLDZEQUE2RCxPQUFPLCtEQUErRCxrRUFBa0Usa0NBQWtDLHlDQUF5QyxRQUFRLE9BQU8sNEJBQTRCLG9GQUFvRixXQUFXLFdBQVcsOEZBQThGLCtCQUErQiwyR0FBMkcsc0NBQXNDLHFDQUFxQyw0TkFBNE4sK0JBQStCLHlDQUF5QyxRQUFRLE9BQU8sNEJBQTRCLGdHQUFnRyw4QkFBOEIseUNBQXlDLFFBQVEsT0FBTyw0QkFBNEIsc0JBQXNCLHNCQUFzQiwwQkFBMEIsZUFBZSxvQkFBb0IsY0FBYyx1Q0FBdUMsbURBQW1ELHlCQUF5QixnREFBZ0Qsa0RBQWtEO0FBQ3pyUix5QkFBeUIsd0JBQXdCLG9DQUFvQyx5Q0FBeUMsa0NBQWtDLDBEQUEwRCwwQkFBMEI7QUFDcFAsNEJBQTRCLGdCQUFnQixzQkFBc0IsT0FBTyxrREFBa0Qsc0RBQXNELDhCQUE4QixtSkFBbUoscUVBQXFFLEtBQUs7QUFDNWEsMENBQTBDLDBCQUEwQixtREFBbUQsb0NBQW9DLHlDQUF5QyxZQUFZLGNBQWMsd0NBQXdDLHFEQUFxRDtBQUMzVCwrQ0FBK0MsMEJBQTBCLFlBQVksdUJBQXVCLDhCQUE4QixtQ0FBbUMsZUFBZTtBQUM1TCxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssb0NBQW9DLG9FQUFvRSwwREFBMEQ7QUFDbEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsaUNBQWlDO0FBQ2pDLGdDQUFnQztBQUNoQyw2Q0FBNkMsU0FBUywwREFBMEQsVUFBVSxnQ0FBZ0M7QUFDMUosK0JBQStCO0FBQy9CLGlDQUFpQztBQUNqQyxtQ0FBbUMsK0NBQStDLDhCQUE4QixPQUFPLGtCQUFrQjtBQUN6SSxtREFBbUQsTUFBTSxnQ0FBZ0MsWUFBWSxvQkFBb0I7QUFDekgsZ0NBQWdDLHFCQUFxQiw2QkFBNkIscUNBQXFDLHVCQUF1QixvQkFBb0IseURBQXlELHFCQUFxQiwwREFBMEQsZ0JBQWdCO0FBQzFUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxvQkFBb0I7QUFDcEg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsOEJBQThCO0FBQ3ZDO0FBQ0EsaURBQWlELFVBQVUsb0JBQW9CO0FBQy9FO0FBQ0EsYUFBYTtBQUNiLFdBQVcsSUFBSTtBQUNmO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQkFBb0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLG9CQUFvQjtBQUM1RjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvY29udHJhY3QvY2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5DbGllbnQgPSB2b2lkIDA7XG52YXIgX3N0ZWxsYXJCYXNlID0gcmVxdWlyZShcIkBzdGVsbGFyL3N0ZWxsYXItYmFzZVwiKTtcbnZhciBfc3BlYyA9IHJlcXVpcmUoXCIuL3NwZWNcIik7XG52YXIgX3JwYyA9IHJlcXVpcmUoXCIuLi9ycGNcIik7XG52YXIgX2Fzc2VtYmxlZF90cmFuc2FjdGlvbiA9IHJlcXVpcmUoXCIuL2Fzc2VtYmxlZF90cmFuc2FjdGlvblwiKTtcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbnZhciBfZXhjbHVkZWQgPSBbXCJtZXRob2RcIl0sXG4gIF9leGNsdWRlZDIgPSBbXCJ3YXNtSGFzaFwiLCBcInNhbHRcIiwgXCJmb3JtYXRcIiwgXCJmZWVcIiwgXCJ0aW1lb3V0SW5TZWNvbmRzXCIsIFwic2ltdWxhdGVcIl07XG5mdW5jdGlvbiBfcmVnZW5lcmF0b3JSdW50aW1lKCkgeyBcInVzZSBzdHJpY3RcIjsgX3JlZ2VuZXJhdG9yUnVudGltZSA9IGZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7IHJldHVybiBlOyB9OyB2YXIgdCwgZSA9IHt9LCByID0gT2JqZWN0LnByb3RvdHlwZSwgbiA9IHIuaGFzT3duUHJvcGVydHksIG8gPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgfHwgZnVuY3Rpb24gKHQsIGUsIHIpIHsgdFtlXSA9IHIudmFsdWU7IH0sIGkgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCA/IFN5bWJvbCA6IHt9LCBhID0gaS5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIiwgYyA9IGkuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiLCB1ID0gaS50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjsgZnVuY3Rpb24gZGVmaW5lKHQsIGUsIHIpIHsgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBlLCB7IHZhbHVlOiByLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pLCB0W2VdOyB9IHRyeSB7IGRlZmluZSh7fSwgXCJcIik7IH0gY2F0Y2ggKHQpIHsgZGVmaW5lID0gZnVuY3Rpb24gZGVmaW5lKHQsIGUsIHIpIHsgcmV0dXJuIHRbZV0gPSByOyB9OyB9IGZ1bmN0aW9uIHdyYXAodCwgZSwgciwgbikgeyB2YXIgaSA9IGUgJiYgZS5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBlIDogR2VuZXJhdG9yLCBhID0gT2JqZWN0LmNyZWF0ZShpLnByb3RvdHlwZSksIGMgPSBuZXcgQ29udGV4dChuIHx8IFtdKTsgcmV0dXJuIG8oYSwgXCJfaW52b2tlXCIsIHsgdmFsdWU6IG1ha2VJbnZva2VNZXRob2QodCwgciwgYykgfSksIGE7IH0gZnVuY3Rpb24gdHJ5Q2F0Y2godCwgZSwgcikgeyB0cnkgeyByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IHQuY2FsbChlLCByKSB9OyB9IGNhdGNoICh0KSB7IHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiB0IH07IH0gfSBlLndyYXAgPSB3cmFwOyB2YXIgaCA9IFwic3VzcGVuZGVkU3RhcnRcIiwgbCA9IFwic3VzcGVuZGVkWWllbGRcIiwgZiA9IFwiZXhlY3V0aW5nXCIsIHMgPSBcImNvbXBsZXRlZFwiLCB5ID0ge307IGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9IGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge30gZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fSB2YXIgcCA9IHt9OyBkZWZpbmUocCwgYSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7IHZhciBkID0gT2JqZWN0LmdldFByb3RvdHlwZU9mLCB2ID0gZCAmJiBkKGQodmFsdWVzKFtdKSkpOyB2ICYmIHYgIT09IHIgJiYgbi5jYWxsKHYsIGEpICYmIChwID0gdik7IHZhciBnID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID0gR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUocCk7IGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyh0KSB7IFtcIm5leHRcIiwgXCJ0aHJvd1wiLCBcInJldHVyblwiXS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7IGRlZmluZSh0LCBlLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5faW52b2tlKGUsIHQpOyB9KTsgfSk7IH0gZnVuY3Rpb24gQXN5bmNJdGVyYXRvcih0LCBlKSB7IGZ1bmN0aW9uIGludm9rZShyLCBvLCBpLCBhKSB7IHZhciBjID0gdHJ5Q2F0Y2godFtyXSwgdCwgbyk7IGlmIChcInRocm93XCIgIT09IGMudHlwZSkgeyB2YXIgdSA9IGMuYXJnLCBoID0gdS52YWx1ZTsgcmV0dXJuIGggJiYgXCJvYmplY3RcIiA9PSBfdHlwZW9mKGgpICYmIG4uY2FsbChoLCBcIl9fYXdhaXRcIikgPyBlLnJlc29sdmUoaC5fX2F3YWl0KS50aGVuKGZ1bmN0aW9uICh0KSB7IGludm9rZShcIm5leHRcIiwgdCwgaSwgYSk7IH0sIGZ1bmN0aW9uICh0KSB7IGludm9rZShcInRocm93XCIsIHQsIGksIGEpOyB9KSA6IGUucmVzb2x2ZShoKS50aGVuKGZ1bmN0aW9uICh0KSB7IHUudmFsdWUgPSB0LCBpKHUpOyB9LCBmdW5jdGlvbiAodCkgeyByZXR1cm4gaW52b2tlKFwidGhyb3dcIiwgdCwgaSwgYSk7IH0pOyB9IGEoYy5hcmcpOyB9IHZhciByOyBvKHRoaXMsIFwiX2ludm9rZVwiLCB7IHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh0LCBuKSB7IGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkgeyByZXR1cm4gbmV3IGUoZnVuY3Rpb24gKGUsIHIpIHsgaW52b2tlKHQsIG4sIGUsIHIpOyB9KTsgfSByZXR1cm4gciA9IHIgPyByLnRoZW4oY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7IH0gfSk7IH0gZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChlLCByLCBuKSB7IHZhciBvID0gaDsgcmV0dXJuIGZ1bmN0aW9uIChpLCBhKSB7IGlmIChvID09PSBmKSB0aHJvdyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7IGlmIChvID09PSBzKSB7IGlmIChcInRocm93XCIgPT09IGkpIHRocm93IGE7IHJldHVybiB7IHZhbHVlOiB0LCBkb25lOiAhMCB9OyB9IGZvciAobi5tZXRob2QgPSBpLCBuLmFyZyA9IGE7OykgeyB2YXIgYyA9IG4uZGVsZWdhdGU7IGlmIChjKSB7IHZhciB1ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShjLCBuKTsgaWYgKHUpIHsgaWYgKHUgPT09IHkpIGNvbnRpbnVlOyByZXR1cm4gdTsgfSB9IGlmIChcIm5leHRcIiA9PT0gbi5tZXRob2QpIG4uc2VudCA9IG4uX3NlbnQgPSBuLmFyZztlbHNlIGlmIChcInRocm93XCIgPT09IG4ubWV0aG9kKSB7IGlmIChvID09PSBoKSB0aHJvdyBvID0gcywgbi5hcmc7IG4uZGlzcGF0Y2hFeGNlcHRpb24obi5hcmcpOyB9IGVsc2UgXCJyZXR1cm5cIiA9PT0gbi5tZXRob2QgJiYgbi5hYnJ1cHQoXCJyZXR1cm5cIiwgbi5hcmcpOyBvID0gZjsgdmFyIHAgPSB0cnlDYXRjaChlLCByLCBuKTsgaWYgKFwibm9ybWFsXCIgPT09IHAudHlwZSkgeyBpZiAobyA9IG4uZG9uZSA/IHMgOiBsLCBwLmFyZyA9PT0geSkgY29udGludWU7IHJldHVybiB7IHZhbHVlOiBwLmFyZywgZG9uZTogbi5kb25lIH07IH0gXCJ0aHJvd1wiID09PSBwLnR5cGUgJiYgKG8gPSBzLCBuLm1ldGhvZCA9IFwidGhyb3dcIiwgbi5hcmcgPSBwLmFyZyk7IH0gfTsgfSBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGUsIHIpIHsgdmFyIG4gPSByLm1ldGhvZCwgbyA9IGUuaXRlcmF0b3Jbbl07IGlmIChvID09PSB0KSByZXR1cm4gci5kZWxlZ2F0ZSA9IG51bGwsIFwidGhyb3dcIiA9PT0gbiAmJiBlLml0ZXJhdG9yLnJldHVybiAmJiAoci5tZXRob2QgPSBcInJldHVyblwiLCByLmFyZyA9IHQsIG1heWJlSW52b2tlRGVsZWdhdGUoZSwgciksIFwidGhyb3dcIiA9PT0gci5tZXRob2QpIHx8IFwicmV0dXJuXCIgIT09IG4gJiYgKHIubWV0aG9kID0gXCJ0aHJvd1wiLCByLmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICdcIiArIG4gKyBcIicgbWV0aG9kXCIpKSwgeTsgdmFyIGkgPSB0cnlDYXRjaChvLCBlLml0ZXJhdG9yLCByLmFyZyk7IGlmIChcInRocm93XCIgPT09IGkudHlwZSkgcmV0dXJuIHIubWV0aG9kID0gXCJ0aHJvd1wiLCByLmFyZyA9IGkuYXJnLCByLmRlbGVnYXRlID0gbnVsbCwgeTsgdmFyIGEgPSBpLmFyZzsgcmV0dXJuIGEgPyBhLmRvbmUgPyAocltlLnJlc3VsdE5hbWVdID0gYS52YWx1ZSwgci5uZXh0ID0gZS5uZXh0TG9jLCBcInJldHVyblwiICE9PSByLm1ldGhvZCAmJiAoci5tZXRob2QgPSBcIm5leHRcIiwgci5hcmcgPSB0KSwgci5kZWxlZ2F0ZSA9IG51bGwsIHkpIDogYSA6IChyLm1ldGhvZCA9IFwidGhyb3dcIiwgci5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIiksIHIuZGVsZWdhdGUgPSBudWxsLCB5KTsgfSBmdW5jdGlvbiBwdXNoVHJ5RW50cnkodCkgeyB2YXIgZSA9IHsgdHJ5TG9jOiB0WzBdIH07IDEgaW4gdCAmJiAoZS5jYXRjaExvYyA9IHRbMV0pLCAyIGluIHQgJiYgKGUuZmluYWxseUxvYyA9IHRbMl0sIGUuYWZ0ZXJMb2MgPSB0WzNdKSwgdGhpcy50cnlFbnRyaWVzLnB1c2goZSk7IH0gZnVuY3Rpb24gcmVzZXRUcnlFbnRyeSh0KSB7IHZhciBlID0gdC5jb21wbGV0aW9uIHx8IHt9OyBlLnR5cGUgPSBcIm5vcm1hbFwiLCBkZWxldGUgZS5hcmcsIHQuY29tcGxldGlvbiA9IGU7IH0gZnVuY3Rpb24gQ29udGV4dCh0KSB7IHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogXCJyb290XCIgfV0sIHQuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpLCB0aGlzLnJlc2V0KCEwKTsgfSBmdW5jdGlvbiB2YWx1ZXMoZSkgeyBpZiAoZSB8fCBcIlwiID09PSBlKSB7IHZhciByID0gZVthXTsgaWYgKHIpIHJldHVybiByLmNhbGwoZSk7IGlmIChcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUubmV4dCkgcmV0dXJuIGU7IGlmICghaXNOYU4oZS5sZW5ndGgpKSB7IHZhciBvID0gLTEsIGkgPSBmdW5jdGlvbiBuZXh0KCkgeyBmb3IgKDsgKytvIDwgZS5sZW5ndGg7KSBpZiAobi5jYWxsKGUsIG8pKSByZXR1cm4gbmV4dC52YWx1ZSA9IGVbb10sIG5leHQuZG9uZSA9ICExLCBuZXh0OyByZXR1cm4gbmV4dC52YWx1ZSA9IHQsIG5leHQuZG9uZSA9ICEwLCBuZXh0OyB9OyByZXR1cm4gaS5uZXh0ID0gaTsgfSB9IHRocm93IG5ldyBUeXBlRXJyb3IoX3R5cGVvZihlKSArIFwiIGlzIG5vdCBpdGVyYWJsZVwiKTsgfSByZXR1cm4gR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIG8oZywgXCJjb25zdHJ1Y3RvclwiLCB7IHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgY29uZmlndXJhYmxlOiAhMCB9KSwgbyhHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgXCJjb25zdHJ1Y3RvclwiLCB7IHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvbiwgY29uZmlndXJhYmxlOiAhMCB9KSwgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkZWZpbmUoR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIHUsIFwiR2VuZXJhdG9yRnVuY3Rpb25cIiksIGUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uICh0KSB7IHZhciBlID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiB0ICYmIHQuY29uc3RydWN0b3I7IHJldHVybiAhIWUgJiYgKGUgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8IFwiR2VuZXJhdG9yRnVuY3Rpb25cIiA9PT0gKGUuZGlzcGxheU5hbWUgfHwgZS5uYW1lKSk7IH0sIGUubWFyayA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YodCwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpIDogKHQuX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGRlZmluZSh0LCB1LCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpKSwgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGcpLCB0OyB9LCBlLmF3cmFwID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHsgX19hd2FpdDogdCB9OyB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpLCBkZWZpbmUoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUsIGMsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pLCBlLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yLCBlLmFzeW5jID0gZnVuY3Rpb24gKHQsIHIsIG4sIG8sIGkpIHsgdm9pZCAwID09PSBpICYmIChpID0gUHJvbWlzZSk7IHZhciBhID0gbmV3IEFzeW5jSXRlcmF0b3Iod3JhcCh0LCByLCBuLCBvKSwgaSk7IHJldHVybiBlLmlzR2VuZXJhdG9yRnVuY3Rpb24ocikgPyBhIDogYS5uZXh0KCkudGhlbihmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5kb25lID8gdC52YWx1ZSA6IGEubmV4dCgpOyB9KTsgfSwgZGVmaW5lSXRlcmF0b3JNZXRob2RzKGcpLCBkZWZpbmUoZywgdSwgXCJHZW5lcmF0b3JcIiksIGRlZmluZShnLCBhLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSwgZGVmaW5lKGcsIFwidG9TdHJpbmdcIiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjsgfSksIGUua2V5cyA9IGZ1bmN0aW9uICh0KSB7IHZhciBlID0gT2JqZWN0KHQpLCByID0gW107IGZvciAodmFyIG4gaW4gZSkgci5wdXNoKG4pOyByZXR1cm4gci5yZXZlcnNlKCksIGZ1bmN0aW9uIG5leHQoKSB7IGZvciAoOyByLmxlbmd0aDspIHsgdmFyIHQgPSByLnBvcCgpOyBpZiAodCBpbiBlKSByZXR1cm4gbmV4dC52YWx1ZSA9IHQsIG5leHQuZG9uZSA9ICExLCBuZXh0OyB9IHJldHVybiBuZXh0LmRvbmUgPSAhMCwgbmV4dDsgfTsgfSwgZS52YWx1ZXMgPSB2YWx1ZXMsIENvbnRleHQucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogQ29udGV4dCwgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KGUpIHsgaWYgKHRoaXMucHJldiA9IDAsIHRoaXMubmV4dCA9IDAsIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB0LCB0aGlzLmRvbmUgPSAhMSwgdGhpcy5kZWxlZ2F0ZSA9IG51bGwsIHRoaXMubWV0aG9kID0gXCJuZXh0XCIsIHRoaXMuYXJnID0gdCwgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSksICFlKSBmb3IgKHZhciByIGluIHRoaXMpIFwidFwiID09PSByLmNoYXJBdCgwKSAmJiBuLmNhbGwodGhpcywgcikgJiYgIWlzTmFOKCtyLnNsaWNlKDEpKSAmJiAodGhpc1tyXSA9IHQpOyB9LCBzdG9wOiBmdW5jdGlvbiBzdG9wKCkgeyB0aGlzLmRvbmUgPSAhMDsgdmFyIHQgPSB0aGlzLnRyeUVudHJpZXNbMF0uY29tcGxldGlvbjsgaWYgKFwidGhyb3dcIiA9PT0gdC50eXBlKSB0aHJvdyB0LmFyZzsgcmV0dXJuIHRoaXMucnZhbDsgfSwgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uIGRpc3BhdGNoRXhjZXB0aW9uKGUpIHsgaWYgKHRoaXMuZG9uZSkgdGhyb3cgZTsgdmFyIHIgPSB0aGlzOyBmdW5jdGlvbiBoYW5kbGUobiwgbykgeyByZXR1cm4gYS50eXBlID0gXCJ0aHJvd1wiLCBhLmFyZyA9IGUsIHIubmV4dCA9IG4sIG8gJiYgKHIubWV0aG9kID0gXCJuZXh0XCIsIHIuYXJnID0gdCksICEhbzsgfSBmb3IgKHZhciBvID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IG8gPj0gMDsgLS1vKSB7IHZhciBpID0gdGhpcy50cnlFbnRyaWVzW29dLCBhID0gaS5jb21wbGV0aW9uOyBpZiAoXCJyb290XCIgPT09IGkudHJ5TG9jKSByZXR1cm4gaGFuZGxlKFwiZW5kXCIpOyBpZiAoaS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7IHZhciBjID0gbi5jYWxsKGksIFwiY2F0Y2hMb2NcIiksIHUgPSBuLmNhbGwoaSwgXCJmaW5hbGx5TG9jXCIpOyBpZiAoYyAmJiB1KSB7IGlmICh0aGlzLnByZXYgPCBpLmNhdGNoTG9jKSByZXR1cm4gaGFuZGxlKGkuY2F0Y2hMb2MsICEwKTsgaWYgKHRoaXMucHJldiA8IGkuZmluYWxseUxvYykgcmV0dXJuIGhhbmRsZShpLmZpbmFsbHlMb2MpOyB9IGVsc2UgaWYgKGMpIHsgaWYgKHRoaXMucHJldiA8IGkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoaS5jYXRjaExvYywgITApOyB9IGVsc2UgeyBpZiAoIXUpIHRocm93IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7IGlmICh0aGlzLnByZXYgPCBpLmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoaS5maW5hbGx5TG9jKTsgfSB9IH0gfSwgYWJydXB0OiBmdW5jdGlvbiBhYnJ1cHQodCwgZSkgeyBmb3IgKHZhciByID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IHIgPj0gMDsgLS1yKSB7IHZhciBvID0gdGhpcy50cnlFbnRyaWVzW3JdOyBpZiAoby50cnlMb2MgPD0gdGhpcy5wcmV2ICYmIG4uY2FsbChvLCBcImZpbmFsbHlMb2NcIikgJiYgdGhpcy5wcmV2IDwgby5maW5hbGx5TG9jKSB7IHZhciBpID0gbzsgYnJlYWs7IH0gfSBpICYmIChcImJyZWFrXCIgPT09IHQgfHwgXCJjb250aW51ZVwiID09PSB0KSAmJiBpLnRyeUxvYyA8PSBlICYmIGUgPD0gaS5maW5hbGx5TG9jICYmIChpID0gbnVsbCk7IHZhciBhID0gaSA/IGkuY29tcGxldGlvbiA6IHt9OyByZXR1cm4gYS50eXBlID0gdCwgYS5hcmcgPSBlLCBpID8gKHRoaXMubWV0aG9kID0gXCJuZXh0XCIsIHRoaXMubmV4dCA9IGkuZmluYWxseUxvYywgeSkgOiB0aGlzLmNvbXBsZXRlKGEpOyB9LCBjb21wbGV0ZTogZnVuY3Rpb24gY29tcGxldGUodCwgZSkgeyBpZiAoXCJ0aHJvd1wiID09PSB0LnR5cGUpIHRocm93IHQuYXJnOyByZXR1cm4gXCJicmVha1wiID09PSB0LnR5cGUgfHwgXCJjb250aW51ZVwiID09PSB0LnR5cGUgPyB0aGlzLm5leHQgPSB0LmFyZyA6IFwicmV0dXJuXCIgPT09IHQudHlwZSA/ICh0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHQuYXJnLCB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCIsIHRoaXMubmV4dCA9IFwiZW5kXCIpIDogXCJub3JtYWxcIiA9PT0gdC50eXBlICYmIGUgJiYgKHRoaXMubmV4dCA9IGUpLCB5OyB9LCBmaW5pc2g6IGZ1bmN0aW9uIGZpbmlzaCh0KSB7IGZvciAodmFyIGUgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgZSA+PSAwOyAtLWUpIHsgdmFyIHIgPSB0aGlzLnRyeUVudHJpZXNbZV07IGlmIChyLmZpbmFsbHlMb2MgPT09IHQpIHJldHVybiB0aGlzLmNvbXBsZXRlKHIuY29tcGxldGlvbiwgci5hZnRlckxvYyksIHJlc2V0VHJ5RW50cnkociksIHk7IH0gfSwgY2F0Y2g6IGZ1bmN0aW9uIF9jYXRjaCh0KSB7IGZvciAodmFyIGUgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgZSA+PSAwOyAtLWUpIHsgdmFyIHIgPSB0aGlzLnRyeUVudHJpZXNbZV07IGlmIChyLnRyeUxvYyA9PT0gdCkgeyB2YXIgbiA9IHIuY29tcGxldGlvbjsgaWYgKFwidGhyb3dcIiA9PT0gbi50eXBlKSB7IHZhciBvID0gbi5hcmc7IHJlc2V0VHJ5RW50cnkocik7IH0gcmV0dXJuIG87IH0gfSB0aHJvdyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTsgfSwgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24gZGVsZWdhdGVZaWVsZChlLCByLCBuKSB7IHJldHVybiB0aGlzLmRlbGVnYXRlID0geyBpdGVyYXRvcjogdmFsdWVzKGUpLCByZXN1bHROYW1lOiByLCBuZXh0TG9jOiBuIH0sIFwibmV4dFwiID09PSB0aGlzLm1ldGhvZCAmJiAodGhpcy5hcmcgPSB0KSwgeTsgfSB9LCBlOyB9XG5mdW5jdGlvbiBvd25LZXlzKGUsIHIpIHsgdmFyIHQgPSBPYmplY3Qua2V5cyhlKTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTsgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7IH0gcmV0dXJuIHQ7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQoZSkgeyBmb3IgKHZhciByID0gMTsgciA8IGFyZ3VtZW50cy5sZW5ndGg7IHIrKykgeyB2YXIgdCA9IG51bGwgIT0gYXJndW1lbnRzW3JdID8gYXJndW1lbnRzW3JdIDoge307IHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHQpKSA6IG93bktleXMoT2JqZWN0KHQpKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTsgfSk7IH0gcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhlLCB0KSB7IGlmIChudWxsID09IGUpIHJldHVybiB7fTsgdmFyIG8sIHIsIGkgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShlLCB0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG4gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyBmb3IgKHIgPSAwOyByIDwgbi5sZW5ndGg7IHIrKykgbyA9IG5bcl0sIC0xID09PSB0LmluZGV4T2YobykgJiYge30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLCBvKSAmJiAoaVtvXSA9IGVbb10pOyB9IHJldHVybiBpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShyLCBlKSB7IGlmIChudWxsID09IHIpIHJldHVybiB7fTsgdmFyIHQgPSB7fTsgZm9yICh2YXIgbiBpbiByKSBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChyLCBuKSkgeyBpZiAoLTEgIT09IGUuaW5kZXhPZihuKSkgY29udGludWU7IHRbbl0gPSByW25dOyB9IHJldHVybiB0OyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0KSB7IHJldHVybiAociA9IF90b1Byb3BlcnR5S2V5KHIpKSBpbiBlID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIHsgdmFsdWU6IHQsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAgfSkgOiBlW3JdID0gdCwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMocikgfHwgX2l0ZXJhYmxlVG9BcnJheShyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkocikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBhKSB7IGlmIChyKSB7IGlmIChcInN0cmluZ1wiID09IHR5cGVvZiByKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkociwgYSk7IHZhciB0ID0ge30udG9TdHJpbmcuY2FsbChyKS5zbGljZSg4LCAtMSk7IHJldHVybiBcIk9iamVjdFwiID09PSB0ICYmIHIuY29uc3RydWN0b3IgJiYgKHQgPSByLmNvbnN0cnVjdG9yLm5hbWUpLCBcIk1hcFwiID09PSB0IHx8IFwiU2V0XCIgPT09IHQgPyBBcnJheS5mcm9tKHIpIDogXCJBcmd1bWVudHNcIiA9PT0gdCB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdCh0KSA/IF9hcnJheUxpa2VUb0FycmF5KHIsIGEpIDogdm9pZCAwOyB9IH1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkocikgeyBpZiAoXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIG51bGwgIT0gcltTeW1ib2wuaXRlcmF0b3JdIHx8IG51bGwgIT0gcltcIkBAaXRlcmF0b3JcIl0pIHJldHVybiBBcnJheS5mcm9tKHIpOyB9XG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMocikgeyBpZiAoQXJyYXkuaXNBcnJheShyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KHIpOyB9XG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSB7IChudWxsID09IGEgfHwgYSA+IHIubGVuZ3RoKSAmJiAoYSA9IHIubGVuZ3RoKTsgZm9yICh2YXIgZSA9IDAsIG4gPSBBcnJheShhKTsgZSA8IGE7IGUrKykgbltlXSA9IHJbZV07IHJldHVybiBuOyB9XG5mdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAobiwgdCwgZSwgciwgbywgYSwgYykgeyB0cnkgeyB2YXIgaSA9IG5bYV0oYyksIHUgPSBpLnZhbHVlOyB9IGNhdGNoIChuKSB7IHJldHVybiB2b2lkIGUobik7IH0gaS5kb25lID8gdCh1KSA6IFByb21pc2UucmVzb2x2ZSh1KS50aGVuKHIsIG8pOyB9XG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcywgZSA9IGFyZ3VtZW50czsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyLCBvKSB7IHZhciBhID0gbi5hcHBseSh0LCBlKTsgZnVuY3Rpb24gX25leHQobikgeyBhc3luY0dlbmVyYXRvclN0ZXAoYSwgciwgbywgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIG4pOyB9IGZ1bmN0aW9uIF90aHJvdyhuKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChhLCByLCBvLCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIG4pOyB9IF9uZXh0KHZvaWQgMCk7IH0pOyB9OyB9XG52YXIgQ09OU1RSVUNUT1JfRlVOQyA9IFwiX19jb25zdHJ1Y3RvclwiO1xuZnVuY3Rpb24gc3BlY0Zyb21XYXNtKF94KSB7XG4gIHJldHVybiBfc3BlY0Zyb21XYXNtLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfc3BlY0Zyb21XYXNtKCkge1xuICBfc3BlY0Zyb21XYXNtID0gX2FzeW5jVG9HZW5lcmF0b3IoX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUod2FzbSkge1xuICAgIHZhciB4ZHJTZWN0aW9ucywgd2FzbU1vZHVsZSwgY3VzdG9tRGF0YSwgYnVmZmVyU2VjdGlvbiwgc3BlY0VudHJ5QXJyYXksIHNwZWM7XG4gICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHtcbiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMDtcbiAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7XG4gICAgICAgICAgcmV0dXJuIFdlYkFzc2VtYmx5LmNvbXBpbGUod2FzbSk7XG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICB3YXNtTW9kdWxlID0gX2NvbnRleHQ1LnNlbnQ7XG4gICAgICAgICAgeGRyU2VjdGlvbnMgPSBXZWJBc3NlbWJseS5Nb2R1bGUuY3VzdG9tU2VjdGlvbnMod2FzbU1vZHVsZSwgXCJjb250cmFjdHNwZWN2MFwiKTtcbiAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDExO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSA3O1xuICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVtcImNhdGNoXCJdKDApO1xuICAgICAgICAgIGN1c3RvbURhdGEgPSBwYXJzZVdhc21DdXN0b21TZWN0aW9ucyh3YXNtKTtcbiAgICAgICAgICB4ZHJTZWN0aW9ucyA9IGN1c3RvbURhdGEuZ2V0KCdjb250cmFjdHNwZWN2MCcpO1xuICAgICAgICBjYXNlIDExOlxuICAgICAgICAgIGlmICghKCF4ZHJTZWN0aW9ucyB8fCB4ZHJTZWN0aW9ucy5sZW5ndGggPT09IDApKSB7XG4gICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDEzO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBvYnRhaW4gY29udHJhY3Qgc3BlYyBmcm9tIHdhc21cIik7XG4gICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgYnVmZmVyU2VjdGlvbiA9IEJ1ZmZlci5mcm9tKHhkclNlY3Rpb25zWzBdKTtcbiAgICAgICAgICBzcGVjRW50cnlBcnJheSA9ICgwLCBfdXRpbHMucHJvY2Vzc1NwZWNFbnRyeVN0cmVhbSkoYnVmZmVyU2VjdGlvbik7XG4gICAgICAgICAgc3BlYyA9IG5ldyBfc3BlYy5TcGVjKHNwZWNFbnRyeUFycmF5KTtcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdChcInJldHVyblwiLCBzcGVjKTtcbiAgICAgICAgY2FzZSAxNzpcbiAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpO1xuICAgICAgfVxuICAgIH0sIF9jYWxsZWU1LCBudWxsLCBbWzAsIDddXSk7XG4gIH0pKTtcbiAgcmV0dXJuIF9zcGVjRnJvbVdhc20uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbmZ1bmN0aW9uIHBhcnNlV2FzbUN1c3RvbVNlY3Rpb25zKGJ1ZmZlcikge1xuICB2YXIgc2VjdGlvbnMgPSBuZXcgTWFwKCk7XG4gIHZhciBhcnJheUJ1ZmZlciA9IGJ1ZmZlci5idWZmZXIuc2xpY2UoYnVmZmVyLmJ5dGVPZmZzZXQsIGJ1ZmZlci5ieXRlT2Zmc2V0ICsgYnVmZmVyLmJ5dGVMZW5ndGgpO1xuICB2YXIgb2Zmc2V0ID0gMDtcbiAgdmFyIHJlYWQgPSBmdW5jdGlvbiByZWFkKGxlbmd0aCkge1xuICAgIGlmIChvZmZzZXQgKyBsZW5ndGggPiBidWZmZXIuYnl0ZUxlbmd0aCkgdGhyb3cgbmV3IEVycm9yKCdCdWZmZXIgb3ZlcmZsb3cnKTtcbiAgICB2YXIgYnl0ZXMgPSBuZXcgVWludDhBcnJheShhcnJheUJ1ZmZlciwgb2Zmc2V0LCBsZW5ndGgpO1xuICAgIG9mZnNldCArPSBsZW5ndGg7XG4gICAgcmV0dXJuIGJ5dGVzO1xuICB9O1xuICBpZiAoX3RvQ29uc3VtYWJsZUFycmF5KHJlYWQoNCkpLmpvaW4oKSAhPT0gJzAsOTcsMTE1LDEwOScpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBXQVNNIG1hZ2ljJyk7XG4gIGlmIChfdG9Db25zdW1hYmxlQXJyYXkocmVhZCg0KSkuam9pbigpICE9PSAnMSwwLDAsMCcpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBXQVNNIHZlcnNpb24nKTtcbiAgd2hpbGUgKG9mZnNldCA8IGJ1ZmZlci5ieXRlTGVuZ3RoKSB7XG4gICAgdmFyIHNlY3Rpb25JZCA9IHJlYWQoMSlbMF07XG4gICAgdmFyIHNlY3Rpb25MZW5ndGggPSByZWFkVmFyVWludDMyKCk7XG4gICAgdmFyIHN0YXJ0ID0gb2Zmc2V0O1xuICAgIGlmIChzZWN0aW9uSWQgPT09IDApIHtcbiAgICAgIHZhciBuYW1lTGVuID0gcmVhZFZhclVpbnQzMigpO1xuICAgICAgaWYgKG5hbWVMZW4gPT09IDAgfHwgb2Zmc2V0ICsgbmFtZUxlbiA+IHN0YXJ0ICsgc2VjdGlvbkxlbmd0aCkgY29udGludWU7XG4gICAgICB2YXIgbmFtZUJ5dGVzID0gcmVhZChuYW1lTGVuKTtcbiAgICAgIHZhciBwYXlsb2FkID0gcmVhZChzZWN0aW9uTGVuZ3RoIC0gKG9mZnNldCAtIHN0YXJ0KSk7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbmFtZSA9IG5ldyBUZXh0RGVjb2RlcigndXRmLTgnLCB7XG4gICAgICAgICAgZmF0YWw6IHRydWVcbiAgICAgICAgfSkuZGVjb2RlKG5hbWVCeXRlcyk7XG4gICAgICAgIGlmIChwYXlsb2FkLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzZWN0aW9ucy5zZXQobmFtZSwgKHNlY3Rpb25zLmdldChuYW1lKSB8fCBbXSkuY29uY2F0KHBheWxvYWQpKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoX3VudXNlZCkge31cbiAgICB9IGVsc2Uge1xuICAgICAgb2Zmc2V0ICs9IHNlY3Rpb25MZW5ndGg7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHJlYWRWYXJVaW50MzIoKSB7XG4gICAgdmFyIHZhbHVlID0gMCxcbiAgICAgIHNoaWZ0ID0gMDtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgdmFyIGJ5dGUgPSByZWFkKDEpWzBdO1xuICAgICAgdmFsdWUgfD0gKGJ5dGUgJiAweDdGKSA8PCBzaGlmdDtcbiAgICAgIGlmICgoYnl0ZSAmIDB4ODApID09PSAwKSBicmVhaztcbiAgICAgIGlmICgoc2hpZnQgKz0gNykgPj0gMzIpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBXQVNNIHZhbHVlJyk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZSA+Pj4gMDtcbiAgfVxuICByZXR1cm4gc2VjdGlvbnM7XG59XG5mdW5jdGlvbiBzcGVjRnJvbVdhc21IYXNoKF94MiwgX3gzKSB7XG4gIHJldHVybiBfc3BlY0Zyb21XYXNtSGFzaC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gX3NwZWNGcm9tV2FzbUhhc2goKSB7XG4gIF9zcGVjRnJvbVdhc21IYXNoID0gX2FzeW5jVG9HZW5lcmF0b3IoX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYod2FzbUhhc2gsIG9wdGlvbnMpIHtcbiAgICB2YXIgZm9ybWF0LFxuICAgICAgcnBjVXJsLFxuICAgICAgYWxsb3dIdHRwLFxuICAgICAgc2VydmVyT3B0cyxcbiAgICAgIHNlcnZlcixcbiAgICAgIHdhc20sXG4gICAgICBfYXJnczYgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHtcbiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIGZvcm1hdCA9IF9hcmdzNi5sZW5ndGggPiAyICYmIF9hcmdzNlsyXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3M2WzJdIDogXCJoZXhcIjtcbiAgICAgICAgICBpZiAoISghb3B0aW9ucyB8fCAhb3B0aW9ucy5ycGNVcmwpKSB7XG4gICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbnMgbXVzdCBjb250YWluIHJwY1VybFwiKTtcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgIHJwY1VybCA9IG9wdGlvbnMucnBjVXJsLCBhbGxvd0h0dHAgPSBvcHRpb25zLmFsbG93SHR0cDtcbiAgICAgICAgICBzZXJ2ZXJPcHRzID0ge1xuICAgICAgICAgICAgYWxsb3dIdHRwOiBhbGxvd0h0dHBcbiAgICAgICAgICB9O1xuICAgICAgICAgIHNlcnZlciA9IG5ldyBfcnBjLlNlcnZlcihycGNVcmwsIHNlcnZlck9wdHMpO1xuICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gODtcbiAgICAgICAgICByZXR1cm4gc2VydmVyLmdldENvbnRyYWN0V2FzbUJ5SGFzaCh3YXNtSGFzaCwgZm9ybWF0KTtcbiAgICAgICAgY2FzZSA4OlxuICAgICAgICAgIHdhc20gPSBfY29udGV4dDYuc2VudDtcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdChcInJldHVyblwiLCBzcGVjRnJvbVdhc20od2FzbSkpO1xuICAgICAgICBjYXNlIDEwOlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7XG4gICAgICB9XG4gICAgfSwgX2NhbGxlZTYpO1xuICB9KSk7XG4gIHJldHVybiBfc3BlY0Zyb21XYXNtSGFzaC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxudmFyIENsaWVudCA9IGV4cG9ydHMuQ2xpZW50ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBDbGllbnQoc3BlYywgb3B0aW9ucykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENsaWVudCk7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidHhGcm9tSlNPTlwiLCBmdW5jdGlvbiAoanNvbikge1xuICAgICAgdmFyIF9KU09OJHBhcnNlID0gSlNPTi5wYXJzZShqc29uKSxcbiAgICAgICAgbWV0aG9kID0gX0pTT04kcGFyc2UubWV0aG9kLFxuICAgICAgICB0eCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfSlNPTiRwYXJzZSwgX2V4Y2x1ZGVkKTtcbiAgICAgIHJldHVybiBfYXNzZW1ibGVkX3RyYW5zYWN0aW9uLkFzc2VtYmxlZFRyYW5zYWN0aW9uLmZyb21KU09OKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgX3RoaXMub3B0aW9ucyksIHt9LCB7XG4gICAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgICBwYXJzZVJlc3VsdFhkcjogZnVuY3Rpb24gcGFyc2VSZXN1bHRYZHIocmVzdWx0KSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLnNwZWMuZnVuY1Jlc1RvTmF0aXZlKG1ldGhvZCwgcmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgfSksIHR4KTtcbiAgICB9KTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0eEZyb21YRFJcIiwgZnVuY3Rpb24gKHhkckJhc2U2NCkge1xuICAgICAgcmV0dXJuIF9hc3NlbWJsZWRfdHJhbnNhY3Rpb24uQXNzZW1ibGVkVHJhbnNhY3Rpb24uZnJvbVhEUihfdGhpcy5vcHRpb25zLCB4ZHJCYXNlNjQsIF90aGlzLnNwZWMpO1xuICAgIH0pO1xuICAgIHRoaXMuc3BlYyA9IHNwZWM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLnNwZWMuZnVuY3MoKS5mb3JFYWNoKGZ1bmN0aW9uICh4ZHJGbikge1xuICAgICAgdmFyIG1ldGhvZCA9IHhkckZuLm5hbWUoKS50b1N0cmluZygpO1xuICAgICAgaWYgKG1ldGhvZCA9PT0gQ09OU1RSVUNUT1JfRlVOQykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgYXNzZW1ibGVUcmFuc2FjdGlvbiA9IGZ1bmN0aW9uIGFzc2VtYmxlVHJhbnNhY3Rpb24oYXJncywgbWV0aG9kT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gX2Fzc2VtYmxlZF90cmFuc2FjdGlvbi5Bc3NlbWJsZWRUcmFuc2FjdGlvbi5idWlsZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7XG4gICAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgICAgYXJnczogYXJncyAmJiBzcGVjLmZ1bmNBcmdzVG9TY1ZhbHMobWV0aG9kLCBhcmdzKVxuICAgICAgICB9LCBvcHRpb25zKSwgbWV0aG9kT3B0aW9ucyksIHt9LCB7XG4gICAgICAgICAgZXJyb3JUeXBlczogc3BlYy5lcnJvckNhc2VzKCkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGN1cnIpIHtcbiAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGFjYyksIHt9LCBfZGVmaW5lUHJvcGVydHkoe30sIGN1cnIudmFsdWUoKSwge1xuICAgICAgICAgICAgICBtZXNzYWdlOiBjdXJyLmRvYygpLnRvU3RyaW5nKClcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICB9LCB7fSksXG4gICAgICAgICAgcGFyc2VSZXN1bHRYZHI6IGZ1bmN0aW9uIHBhcnNlUmVzdWx0WGRyKHJlc3VsdCkge1xuICAgICAgICAgICAgcmV0dXJuIHNwZWMuZnVuY1Jlc1RvTmF0aXZlKG1ldGhvZCwgcmVzdWx0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgIH07XG4gICAgICBfdGhpc1ttZXRob2RdID0gc3BlYy5nZXRGdW5jKG1ldGhvZCkuaW5wdXRzKCkubGVuZ3RoID09PSAwID8gZnVuY3Rpb24gKG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIGFzc2VtYmxlVHJhbnNhY3Rpb24odW5kZWZpbmVkLCBvcHRzKTtcbiAgICAgIH0gOiBhc3NlbWJsZVRyYW5zYWN0aW9uO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoQ2xpZW50LCBudWxsLCBbe1xuICAgIGtleTogXCJkZXBsb3lcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9kZXBsb3kgPSBfYXN5bmNUb0dlbmVyYXRvcihfcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKGFyZ3MsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHdhc21IYXNoLCBzYWx0LCBmb3JtYXQsIGZlZSwgdGltZW91dEluU2Vjb25kcywgc2ltdWxhdGUsIGNsaWVudE9wdGlvbnMsIHNwZWMsIG9wZXJhdGlvbjtcbiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7XG4gICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgd2FzbUhhc2ggPSBvcHRpb25zLndhc21IYXNoLCBzYWx0ID0gb3B0aW9ucy5zYWx0LCBmb3JtYXQgPSBvcHRpb25zLmZvcm1hdCwgZmVlID0gb3B0aW9ucy5mZWUsIHRpbWVvdXRJblNlY29uZHMgPSBvcHRpb25zLnRpbWVvdXRJblNlY29uZHMsIHNpbXVsYXRlID0gb3B0aW9ucy5zaW11bGF0ZSwgY2xpZW50T3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvcHRpb25zLCBfZXhjbHVkZWQyKTtcbiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7XG4gICAgICAgICAgICAgIHJldHVybiBzcGVjRnJvbVdhc21IYXNoKHdhc21IYXNoLCBjbGllbnRPcHRpb25zLCBmb3JtYXQpO1xuICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICBzcGVjID0gX2NvbnRleHQuc2VudDtcbiAgICAgICAgICAgICAgb3BlcmF0aW9uID0gX3N0ZWxsYXJCYXNlLk9wZXJhdGlvbi5jcmVhdGVDdXN0b21Db250cmFjdCh7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogbmV3IF9zdGVsbGFyQmFzZS5BZGRyZXNzKG9wdGlvbnMuYWRkcmVzcyB8fCBvcHRpb25zLnB1YmxpY0tleSksXG4gICAgICAgICAgICAgICAgd2FzbUhhc2g6IHR5cGVvZiB3YXNtSGFzaCA9PT0gXCJzdHJpbmdcIiA/IEJ1ZmZlci5mcm9tKHdhc21IYXNoLCBmb3JtYXQgIT09IG51bGwgJiYgZm9ybWF0ICE9PSB2b2lkIDAgPyBmb3JtYXQgOiBcImhleFwiKSA6IHdhc21IYXNoLFxuICAgICAgICAgICAgICAgIHNhbHQ6IHNhbHQsXG4gICAgICAgICAgICAgICAgY29uc3RydWN0b3JBcmdzOiBhcmdzID8gc3BlYy5mdW5jQXJnc1RvU2NWYWxzKENPTlNUUlVDVE9SX0ZVTkMsIGFyZ3MpIDogW11cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgX2Fzc2VtYmxlZF90cmFuc2FjdGlvbi5Bc3NlbWJsZWRUcmFuc2FjdGlvbi5idWlsZFdpdGhPcChvcGVyYXRpb24sIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7XG4gICAgICAgICAgICAgICAgZmVlOiBmZWUsXG4gICAgICAgICAgICAgICAgdGltZW91dEluU2Vjb25kczogdGltZW91dEluU2Vjb25kcyxcbiAgICAgICAgICAgICAgICBzaW11bGF0ZTogc2ltdWxhdGVcbiAgICAgICAgICAgICAgfSwgY2xpZW50T3B0aW9ucyksIHt9LCB7XG4gICAgICAgICAgICAgICAgY29udHJhY3RJZDogXCJpZ25vcmVkXCIsXG4gICAgICAgICAgICAgICAgbWV0aG9kOiBDT05TVFJVQ1RPUl9GVU5DLFxuICAgICAgICAgICAgICAgIHBhcnNlUmVzdWx0WGRyOiBmdW5jdGlvbiBwYXJzZVJlc3VsdFhkcihyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ2xpZW50KHNwZWMsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY2xpZW50T3B0aW9ucyksIHt9LCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyYWN0SWQ6IF9zdGVsbGFyQmFzZS5BZGRyZXNzLmZyb21TY1ZhbChyZXN1bHQpLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pKSk7XG4gICAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlKTtcbiAgICAgIH0pKTtcbiAgICAgIGZ1bmN0aW9uIGRlcGxveShfeDQsIF94NSkge1xuICAgICAgICByZXR1cm4gX2RlcGxveS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGRlcGxveTtcbiAgICB9KClcbiAgfSwge1xuICAgIGtleTogXCJmcm9tV2FzbUhhc2hcIixcbiAgICB2YWx1ZTogKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfZnJvbVdhc21IYXNoID0gX2FzeW5jVG9HZW5lcmF0b3IoX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIod2FzbUhhc2gsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGZvcm1hdCxcbiAgICAgICAgICBycGNVcmwsXG4gICAgICAgICAgYWxsb3dIdHRwLFxuICAgICAgICAgIHNlcnZlck9wdHMsXG4gICAgICAgICAgc2VydmVyLFxuICAgICAgICAgIHdhc20sXG4gICAgICAgICAgX2FyZ3MyID0gYXJndW1lbnRzO1xuICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0Mikge1xuICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgZm9ybWF0ID0gX2FyZ3MyLmxlbmd0aCA+IDIgJiYgX2FyZ3MyWzJdICE9PSB1bmRlZmluZWQgPyBfYXJnczJbMl0gOiBcImhleFwiO1xuICAgICAgICAgICAgICBpZiAoISghb3B0aW9ucyB8fCAhb3B0aW9ucy5ycGNVcmwpKSB7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbnMgbXVzdCBjb250YWluIHJwY1VybCcpO1xuICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICBycGNVcmwgPSBvcHRpb25zLnJwY1VybCwgYWxsb3dIdHRwID0gb3B0aW9ucy5hbGxvd0h0dHA7XG4gICAgICAgICAgICAgIHNlcnZlck9wdHMgPSB7XG4gICAgICAgICAgICAgICAgYWxsb3dIdHRwOiBhbGxvd0h0dHBcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgc2VydmVyID0gbmV3IF9ycGMuU2VydmVyKHJwY1VybCwgc2VydmVyT3B0cyk7XG4gICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODtcbiAgICAgICAgICAgICAgcmV0dXJuIHNlcnZlci5nZXRDb250cmFjdFdhc21CeUhhc2god2FzbUhhc2gsIGZvcm1hdCk7XG4gICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgIHdhc20gPSBfY29udGV4dDIuc2VudDtcbiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoXCJyZXR1cm5cIiwgQ2xpZW50LmZyb21XYXNtKHdhc20sIG9wdGlvbnMpKTtcbiAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTIpO1xuICAgICAgfSkpO1xuICAgICAgZnVuY3Rpb24gZnJvbVdhc21IYXNoKF94NiwgX3g3KSB7XG4gICAgICAgIHJldHVybiBfZnJvbVdhc21IYXNoLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZnJvbVdhc21IYXNoO1xuICAgIH0oKSlcbiAgfSwge1xuICAgIGtleTogXCJmcm9tV2FzbVwiLFxuICAgIHZhbHVlOiAoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9mcm9tV2FzbSA9IF9hc3luY1RvR2VuZXJhdG9yKF9yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHdhc20sIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHNwZWM7XG4gICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7XG4gICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkge1xuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7XG4gICAgICAgICAgICAgIHJldHVybiBzcGVjRnJvbVdhc20od2FzbSk7XG4gICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgIHNwZWMgPSBfY29udGV4dDMuc2VudDtcbiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoXCJyZXR1cm5cIiwgbmV3IENsaWVudChzcGVjLCBvcHRpb25zKSk7XG4gICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTMpO1xuICAgICAgfSkpO1xuICAgICAgZnVuY3Rpb24gZnJvbVdhc20oX3g4LCBfeDkpIHtcbiAgICAgICAgcmV0dXJuIF9mcm9tV2FzbS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZyb21XYXNtO1xuICAgIH0oKSlcbiAgfSwge1xuICAgIGtleTogXCJmcm9tXCIsXG4gICAgdmFsdWU6IChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX2Zyb20gPSBfYXN5bmNUb0dlbmVyYXRvcihfcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlNChvcHRpb25zKSB7XG4gICAgICAgIHZhciBycGNVcmwsIGNvbnRyYWN0SWQsIGFsbG93SHR0cCwgc2VydmVyT3B0cywgc2VydmVyLCB3YXNtO1xuICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkge1xuICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgaWYgKCEoIW9wdGlvbnMgfHwgIW9wdGlvbnMucnBjVXJsIHx8ICFvcHRpb25zLmNvbnRyYWN0SWQpKSB7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbnMgbXVzdCBjb250YWluIHJwY1VybCBhbmQgY29udHJhY3RJZCcpO1xuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICBycGNVcmwgPSBvcHRpb25zLnJwY1VybCwgY29udHJhY3RJZCA9IG9wdGlvbnMuY29udHJhY3RJZCwgYWxsb3dIdHRwID0gb3B0aW9ucy5hbGxvd0h0dHA7XG4gICAgICAgICAgICAgIHNlcnZlck9wdHMgPSB7XG4gICAgICAgICAgICAgICAgYWxsb3dIdHRwOiBhbGxvd0h0dHBcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgc2VydmVyID0gbmV3IF9ycGMuU2VydmVyKHJwY1VybCwgc2VydmVyT3B0cyk7XG4gICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNztcbiAgICAgICAgICAgICAgcmV0dXJuIHNlcnZlci5nZXRDb250cmFjdFdhc21CeUNvbnRyYWN0SWQoY29udHJhY3RJZCk7XG4gICAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICAgIHdhc20gPSBfY29udGV4dDQuc2VudDtcbiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoXCJyZXR1cm5cIiwgQ2xpZW50LmZyb21XYXNtKHdhc20sIG9wdGlvbnMpKTtcbiAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlNCk7XG4gICAgICB9KSk7XG4gICAgICBmdW5jdGlvbiBmcm9tKF94MTApIHtcbiAgICAgICAgcmV0dXJuIF9mcm9tLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZnJvbTtcbiAgICB9KCkpXG4gIH1dKTtcbn0oKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/index.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _assembled_transaction = __webpack_require__(/*! ./assembled_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js\");\nObject.keys(_assembled_transaction).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _assembled_transaction[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _assembled_transaction[key];\n    }\n  });\n});\nvar _basic_node_signer = __webpack_require__(/*! ./basic_node_signer */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/basic_node_signer.js\");\nObject.keys(_basic_node_signer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _basic_node_signer[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _basic_node_signer[key];\n    }\n  });\n});\nvar _client = __webpack_require__(/*! ./client */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/client.js\");\nObject.keys(_client).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _client[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _client[key];\n    }\n  });\n});\nvar _rust_result = __webpack_require__(/*! ./rust_result */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\");\nObject.keys(_rust_result).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _rust_result[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _rust_result[key];\n    }\n  });\n});\nvar _sent_transaction = __webpack_require__(/*! ./sent_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js\");\nObject.keys(_sent_transaction).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _sent_transaction[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sent_transaction[key];\n    }\n  });\n});\nvar _spec = __webpack_require__(/*! ./spec */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js\");\nObject.keys(_spec).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _spec[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _spec[key];\n    }\n  });\n});\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDZCQUE2QixtQkFBTyxDQUFDLHVHQUF5QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCx5QkFBeUIsbUJBQU8sQ0FBQywrRkFBcUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLHlFQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELG1CQUFtQixtQkFBTyxDQUFDLG1GQUFlO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELHdCQUF3QixtQkFBTyxDQUFDLDZGQUFvQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCxZQUFZLG1CQUFPLENBQUMscUVBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsYUFBYSxtQkFBTyxDQUFDLHVFQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xudmFyIF9hc3NlbWJsZWRfdHJhbnNhY3Rpb24gPSByZXF1aXJlKFwiLi9hc3NlbWJsZWRfdHJhbnNhY3Rpb25cIik7XG5PYmplY3Qua2V5cyhfYXNzZW1ibGVkX3RyYW5zYWN0aW9uKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfYXNzZW1ibGVkX3RyYW5zYWN0aW9uW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX2Fzc2VtYmxlZF90cmFuc2FjdGlvbltrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfYmFzaWNfbm9kZV9zaWduZXIgPSByZXF1aXJlKFwiLi9iYXNpY19ub2RlX3NpZ25lclwiKTtcbk9iamVjdC5rZXlzKF9iYXNpY19ub2RlX3NpZ25lcikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX2Jhc2ljX25vZGVfc2lnbmVyW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX2Jhc2ljX25vZGVfc2lnbmVyW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF9jbGllbnQgPSByZXF1aXJlKFwiLi9jbGllbnRcIik7XG5PYmplY3Qua2V5cyhfY2xpZW50KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfY2xpZW50W2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX2NsaWVudFtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfcnVzdF9yZXN1bHQgPSByZXF1aXJlKFwiLi9ydXN0X3Jlc3VsdFwiKTtcbk9iamVjdC5rZXlzKF9ydXN0X3Jlc3VsdCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3J1c3RfcmVzdWx0W2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX3J1c3RfcmVzdWx0W2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF9zZW50X3RyYW5zYWN0aW9uID0gcmVxdWlyZShcIi4vc2VudF90cmFuc2FjdGlvblwiKTtcbk9iamVjdC5rZXlzKF9zZW50X3RyYW5zYWN0aW9uKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfc2VudF90cmFuc2FjdGlvbltrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9zZW50X3RyYW5zYWN0aW9uW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF9zcGVjID0gcmVxdWlyZShcIi4vc3BlY1wiKTtcbk9iamVjdC5rZXlzKF9zcGVjKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfc3BlY1trZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9zcGVjW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF90eXBlcyA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuT2JqZWN0LmtleXMoX3R5cGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfdHlwZXNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfdHlwZXNba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js":
/*!**************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/rust_result.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Ok = exports.Err = void 0;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Ok = exports.Ok = function () {\n  function Ok(value) {\n    _classCallCheck(this, Ok);\n    this.value = value;\n  }\n  return _createClass(Ok, [{\n    key: \"unwrapErr\",\n    value: function unwrapErr() {\n      throw new Error(\"No error\");\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this.value;\n    }\n  }, {\n    key: \"isOk\",\n    value: function isOk() {\n      return true;\n    }\n  }, {\n    key: \"isErr\",\n    value: function isErr() {\n      return false;\n    }\n  }]);\n}();\nvar Err = exports.Err = function () {\n  function Err(error) {\n    _classCallCheck(this, Err);\n    this.error = error;\n  }\n  return _createClass(Err, [{\n    key: \"unwrapErr\",\n    value: function unwrapErr() {\n      return this.error;\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      throw new Error(this.error.message);\n    }\n  }, {\n    key: \"isOk\",\n    value: function isOk() {\n      return false;\n    }\n  }, {\n    key: \"isErr\",\n    value: function isErr() {\n      return true;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L3J1c3RfcmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLFVBQVUsR0FBRyxXQUFXO0FBQ3hCLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxTQUFTLFVBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCxVQUFVLFdBQVc7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9jb250cmFjdC9ydXN0X3Jlc3VsdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuT2sgPSBleHBvcnRzLkVyciA9IHZvaWQgMDtcbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbnZhciBPayA9IGV4cG9ydHMuT2sgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIE9rKHZhbHVlKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE9rKTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhPaywgW3tcbiAgICBrZXk6IFwidW53cmFwRXJyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVud3JhcEVycigpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGVycm9yXCIpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1bndyYXBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdW53cmFwKCkge1xuICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzT2tcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNPaygpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc0VyclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc0VycigpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1dKTtcbn0oKTtcbnZhciBFcnIgPSBleHBvcnRzLkVyciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRXJyKGVycm9yKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVycik7XG4gICAgdGhpcy5lcnJvciA9IGVycm9yO1xuICB9XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoRXJyLCBbe1xuICAgIGtleTogXCJ1bndyYXBFcnJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdW53cmFwRXJyKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZXJyb3I7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVud3JhcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1bndyYXAoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IodGhpcy5lcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNPa1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc09rKCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc0VyclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc0VycigpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfV0pO1xufSgpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/sent_transaction.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SentTransaction = void 0;\nvar _rpc = __webpack_require__(/*! ../rpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\");\nvar _api = __webpack_require__(/*! ../rpc/api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nvar _SentTransaction;\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar SentTransaction = exports.SentTransaction = function () {\n  function SentTransaction(assembled) {\n    var _this = this,\n      _this$assembled$optio2;\n    _classCallCheck(this, SentTransaction);\n    _defineProperty(this, \"send\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {\n      var _this$assembled$optio;\n      var hash, timeoutInSeconds;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.server.sendTransaction(_this.assembled.signed);\n          case 2:\n            _this.sendTransactionResponse = _context.sent;\n            if (!(_this.sendTransactionResponse.status !== \"PENDING\")) {\n              _context.next = 5;\n              break;\n            }\n            throw new SentTransaction.Errors.SendFailed(\"Sending the transaction to the network failed!\\n\".concat(JSON.stringify(_this.sendTransactionResponse, null, 2)));\n          case 5:\n            hash = _this.sendTransactionResponse.hash;\n            timeoutInSeconds = (_this$assembled$optio = _this.assembled.options.timeoutInSeconds) !== null && _this$assembled$optio !== void 0 ? _this$assembled$optio : _types.DEFAULT_TIMEOUT;\n            _context.next = 9;\n            return (0, _utils.withExponentialBackoff)(function () {\n              return _this.server.getTransaction(hash);\n            }, function (resp) {\n              return resp.status === _api.Api.GetTransactionStatus.NOT_FOUND;\n            }, timeoutInSeconds);\n          case 9:\n            _this.getTransactionResponseAll = _context.sent;\n            _this.getTransactionResponse = _this.getTransactionResponseAll[_this.getTransactionResponseAll.length - 1];\n            if (!(_this.getTransactionResponse.status === _api.Api.GetTransactionStatus.NOT_FOUND)) {\n              _context.next = 13;\n              break;\n            }\n            throw new SentTransaction.Errors.TransactionStillPending(\"Waited \".concat(timeoutInSeconds, \" seconds for transaction to complete, but it did not. \") + \"Returning anyway. Check the transaction status manually. \" + \"Sent transaction: \".concat(JSON.stringify(_this.sendTransactionResponse, null, 2), \"\\n\") + \"All attempts to get the result: \".concat(JSON.stringify(_this.getTransactionResponseAll, null, 2)));\n          case 13:\n            return _context.abrupt(\"return\", _this);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    this.assembled = assembled;\n    this.server = new _rpc.Server(this.assembled.options.rpcUrl, {\n      allowHttp: (_this$assembled$optio2 = this.assembled.options.allowHttp) !== null && _this$assembled$optio2 !== void 0 ? _this$assembled$optio2 : false\n    });\n  }\n  return _createClass(SentTransaction, [{\n    key: \"result\",\n    get: function get() {\n      if (\"getTransactionResponse\" in this && this.getTransactionResponse) {\n        if (\"returnValue\" in this.getTransactionResponse) {\n          return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);\n        }\n        throw new Error(\"Transaction failed! Cannot parse result.\");\n      }\n      if (this.sendTransactionResponse) {\n        var _this$sendTransaction;\n        var errorResult = (_this$sendTransaction = this.sendTransactionResponse.errorResult) === null || _this$sendTransaction === void 0 ? void 0 : _this$sendTransaction.result();\n        if (errorResult) {\n          throw new SentTransaction.Errors.SendFailed(\"Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: \".concat(errorResult));\n        }\n        throw new SentTransaction.Errors.SendResultOnly(\"Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`\");\n      }\n      throw new Error(\"Sending transaction failed: \".concat(JSON.stringify(this.assembled.signed)));\n    }\n  }]);\n}();\n_SentTransaction = SentTransaction;\n_defineProperty(SentTransaction, \"Errors\", {\n  SendFailed: function (_Error) {\n    function SendFailedError() {\n      _classCallCheck(this, SendFailedError);\n      return _callSuper(this, SendFailedError, arguments);\n    }\n    _inherits(SendFailedError, _Error);\n    return _createClass(SendFailedError);\n  }(_wrapNativeSuper(Error)),\n  SendResultOnly: function (_Error2) {\n    function SendResultOnlyError() {\n      _classCallCheck(this, SendResultOnlyError);\n      return _callSuper(this, SendResultOnlyError, arguments);\n    }\n    _inherits(SendResultOnlyError, _Error2);\n    return _createClass(SendResultOnlyError);\n  }(_wrapNativeSuper(Error)),\n  TransactionStillPending: function (_Error3) {\n    function TransactionStillPendingError() {\n      _classCallCheck(this, TransactionStillPendingError);\n      return _callSuper(this, TransactionStillPendingError, arguments);\n    }\n    _inherits(TransactionStillPendingError, _Error3);\n    return _createClass(TransactionStillPendingError);\n  }(_wrapNativeSuper(Error))\n});\n_defineProperty(SentTransaction, \"init\", function () {\n  var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(assembled) {\n    var tx, sent;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          tx = new _SentTransaction(assembled);\n          _context2.next = 3;\n          return tx.send();\n        case 3:\n          sent = _context2.sent;\n          return _context2.abrupt(\"return\", sent);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L3NlbnRfdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsdUJBQXVCO0FBQ3ZCLFdBQVcsbUJBQU8sQ0FBQyxpRUFBUTtBQUMzQixXQUFXLG1CQUFPLENBQUMsbUVBQVk7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHVFQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyx1RUFBUztBQUM5QjtBQUNBLCtCQUErQjtBQUMvQiw0Q0FBNEMsdUVBQXVFLG1HQUFtRztBQUN0TixxQ0FBcUMseUdBQXlHO0FBQzlJLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULCtCQUErQix1REFBdUQseURBQXlELG1EQUFtRCx1R0FBdUcsb0JBQW9CLCtCQUErQixxQkFBcUIscUJBQXFCLHNFQUFzRSx3REFBd0QsZUFBZSxrRUFBa0UsaUNBQWlDO0FBQ3RuQiwrQkFBK0Isa0ZBQWtGLGdCQUFnQixvQkFBb0Isb0NBQW9DO0FBQ3pMLHVDQUF1QyxNQUFNLHFGQUFxRixNQUFNLGFBQWEsMkVBQTJFLGFBQWE7QUFDN08sZ0NBQWdDLE1BQU0sb0VBQW9FLFlBQVk7QUFDdEgsaUNBQWlDLGtHQUFrRyw0QkFBNEI7QUFDL0osOEJBQThCLCtGQUErRixpREFBaUQ7QUFDOUssc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsaUNBQWlDLGNBQWMsdURBQXVELGFBQWEsYUFBYSxnR0FBZ0csaUJBQWlCLCtDQUErQyxrSEFBa0gsMkJBQTJCLHFDQUFxQywwREFBMEQsV0FBVyxNQUFNLFNBQVMsU0FBUyxZQUFZLG9DQUFvQyxzQkFBc0IsNEJBQTRCLHlIQUF5SCx5QkFBeUIsa0NBQWtDLFFBQVEsNkJBQTZCLE1BQU0sU0FBUyx1Q0FBdUMsWUFBWSxTQUFTLDZCQUE2QixlQUFlLDBGQUEwRix3QkFBd0IsZ0NBQWdDLHlDQUF5QyxZQUFZLDJCQUEyQixjQUFjLEdBQUcsMERBQTBELHlDQUF5Qyx1RkFBdUYsb0NBQW9DLG1EQUFtRCw0QkFBNEIsNEJBQTRCLElBQUksS0FBSywrQkFBK0IsOEJBQThCLDhCQUE4QiwwQkFBMEIsNEJBQTRCLHNHQUFzRywwQkFBMEIsaUJBQWlCLDJCQUEyQixxQ0FBcUMsb0JBQW9CLGlCQUFpQixrQ0FBa0MsS0FBSyxZQUFZLE9BQU8scUJBQXFCLDhCQUE4Qix3Q0FBd0MsK0JBQStCLHFCQUFxQixLQUFLLGlIQUFpSCxLQUFLLHFDQUFxQyxXQUFXLHlCQUF5QiwwREFBMEQsZUFBZSw0QkFBNEIsU0FBUyx3QkFBd0IsOEJBQThCLElBQUksb0JBQW9CLFNBQVMsbUNBQW1DLFNBQVMsdUJBQXVCLGNBQWMsa0RBQWtELGlDQUFpQyxpQ0FBaUMsOEJBQThCLHlEQUF5RCxPQUFPLDJCQUEyQiwyQkFBMkIsK0NBQStDLFNBQVMsZ0NBQWdDLHlFQUF5RSxxQ0FBcUMscUNBQXFDLDBSQUEwUix3Q0FBd0Msd0ZBQXdGLGVBQWUsa1FBQWtRLDJCQUEyQixVQUFVLGdCQUFnQiw4R0FBOEcsNEJBQTRCLDRCQUE0QixxREFBcUQsc0JBQXNCLHFCQUFxQixnQkFBZ0Isb0RBQW9ELHFCQUFxQixxQkFBcUIsY0FBYyx5QkFBeUIsMkNBQTJDLHdCQUF3QixrQ0FBa0MsT0FBTyxlQUFlLG9FQUFvRSxnREFBZ0QsdUJBQXVCLHdEQUF3RCx1RkFBdUYscURBQXFELGtEQUFrRCw0Q0FBNEMsc0lBQXNJLGlEQUFpRCwrRkFBK0YsMEJBQTBCLHlNQUF5TSwyQkFBMkIsU0FBUyxlQUFlLG1HQUFtRyxjQUFjLHlFQUF5RSwrQkFBK0IsZ0RBQWdELG1FQUFtRSxxQ0FBcUMsSUFBSSxrRkFBa0YsY0FBYyx1Q0FBdUMsOEJBQThCLDJCQUEyQiwyQkFBMkIsNEJBQTRCLHNDQUFzQyxPQUFPLFNBQVMsSUFBSSxpQkFBaUIsMkRBQTJELGlDQUFpQywyQ0FBMkMsaURBQWlELHlSQUF5UiwwQkFBMEIsZ0JBQWdCLHVDQUF1QyxxQ0FBcUMsbUJBQW1CLHFEQUFxRCx3QkFBd0IsY0FBYyx3QkFBd0IsNEZBQTRGLHlDQUF5QyxRQUFRLE9BQU8sOENBQThDLCtDQUErQyw2QkFBNkIsNERBQTRELGNBQWMsMkRBQTJELDZEQUE2RCxjQUFjLDZEQUE2RCxPQUFPLCtEQUErRCxrRUFBa0Usa0NBQWtDLHlDQUF5QyxRQUFRLE9BQU8sNEJBQTRCLG9GQUFvRixXQUFXLFdBQVcsOEZBQThGLCtCQUErQiwyR0FBMkcsc0NBQXNDLHFDQUFxQyw0TkFBNE4sK0JBQStCLHlDQUF5QyxRQUFRLE9BQU8sNEJBQTRCLGdHQUFnRyw4QkFBOEIseUNBQXlDLFFBQVEsT0FBTyw0QkFBNEIsc0JBQXNCLHNCQUFzQiwwQkFBMEIsZUFBZSxvQkFBb0IsY0FBYyx1Q0FBdUMsbURBQW1ELHlCQUF5QixnREFBZ0Qsa0RBQWtEO0FBQ3pyUixtREFBbUQsTUFBTSxnQ0FBZ0MsWUFBWSxvQkFBb0I7QUFDekgsZ0NBQWdDLHFCQUFxQiw2QkFBNkIscUNBQXFDLHVCQUF1QixvQkFBb0IseURBQXlELHFCQUFxQiwwREFBMEQsZ0JBQWdCO0FBQzFULGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyxvQ0FBb0Msb0VBQW9FLDBEQUEwRDtBQUNsSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxzQkFBc0IsdUJBQXVCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvY29udHJhY3Qvc2VudF90cmFuc2FjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuU2VudFRyYW5zYWN0aW9uID0gdm9pZCAwO1xudmFyIF9ycGMgPSByZXF1aXJlKFwiLi4vcnBjXCIpO1xudmFyIF9hcGkgPSByZXF1aXJlKFwiLi4vcnBjL2FwaVwiKTtcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbnZhciBfU2VudFRyYW5zYWN0aW9uO1xuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIodCkgeyB2YXIgciA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgTWFwID8gbmV3IE1hcCgpIDogdm9pZCAwOyByZXR1cm4gX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIodCkgeyBpZiAobnVsbCA9PT0gdCB8fCAhX2lzTmF0aXZlRnVuY3Rpb24odCkpIHJldHVybiB0OyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiB0KSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IGlmICh2b2lkIDAgIT09IHIpIHsgaWYgKHIuaGFzKHQpKSByZXR1cm4gci5nZXQodCk7IHIuc2V0KHQsIFdyYXBwZXIpOyB9IGZ1bmN0aW9uIFdyYXBwZXIoKSB7IHJldHVybiBfY29uc3RydWN0KHQsIGFyZ3VtZW50cywgX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTsgfSByZXR1cm4gV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHQucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBXcmFwcGVyLCBlbnVtZXJhYmxlOiAhMSwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIF9zZXRQcm90b3R5cGVPZihXcmFwcGVyLCB0KTsgfSwgX3dyYXBOYXRpdmVTdXBlcih0KTsgfVxuZnVuY3Rpb24gX2NvbnN0cnVjdCh0LCBlLCByKSB7IGlmIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHJldHVybiBSZWZsZWN0LmNvbnN0cnVjdC5hcHBseShudWxsLCBhcmd1bWVudHMpOyB2YXIgbyA9IFtudWxsXTsgby5wdXNoLmFwcGx5KG8sIGUpOyB2YXIgcCA9IG5ldyAodC5iaW5kLmFwcGx5KHQsIG8pKSgpOyByZXR1cm4gciAmJiBfc2V0UHJvdG90eXBlT2YocCwgci5wcm90b3R5cGUpLCBwOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKHQpIHsgdHJ5IHsgcmV0dXJuIC0xICE9PSBGdW5jdGlvbi50b1N0cmluZy5jYWxsKHQpLmluZGV4T2YoXCJbbmF0aXZlIGNvZGVdXCIpOyB9IGNhdGNoIChuKSB7IHJldHVybiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIHQ7IH0gfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5mdW5jdGlvbiBfcmVnZW5lcmF0b3JSdW50aW1lKCkgeyBcInVzZSBzdHJpY3RcIjsgX3JlZ2VuZXJhdG9yUnVudGltZSA9IGZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7IHJldHVybiBlOyB9OyB2YXIgdCwgZSA9IHt9LCByID0gT2JqZWN0LnByb3RvdHlwZSwgbiA9IHIuaGFzT3duUHJvcGVydHksIG8gPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgfHwgZnVuY3Rpb24gKHQsIGUsIHIpIHsgdFtlXSA9IHIudmFsdWU7IH0sIGkgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCA/IFN5bWJvbCA6IHt9LCBhID0gaS5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIiwgYyA9IGkuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiLCB1ID0gaS50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjsgZnVuY3Rpb24gZGVmaW5lKHQsIGUsIHIpIHsgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBlLCB7IHZhbHVlOiByLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pLCB0W2VdOyB9IHRyeSB7IGRlZmluZSh7fSwgXCJcIik7IH0gY2F0Y2ggKHQpIHsgZGVmaW5lID0gZnVuY3Rpb24gZGVmaW5lKHQsIGUsIHIpIHsgcmV0dXJuIHRbZV0gPSByOyB9OyB9IGZ1bmN0aW9uIHdyYXAodCwgZSwgciwgbikgeyB2YXIgaSA9IGUgJiYgZS5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBlIDogR2VuZXJhdG9yLCBhID0gT2JqZWN0LmNyZWF0ZShpLnByb3RvdHlwZSksIGMgPSBuZXcgQ29udGV4dChuIHx8IFtdKTsgcmV0dXJuIG8oYSwgXCJfaW52b2tlXCIsIHsgdmFsdWU6IG1ha2VJbnZva2VNZXRob2QodCwgciwgYykgfSksIGE7IH0gZnVuY3Rpb24gdHJ5Q2F0Y2godCwgZSwgcikgeyB0cnkgeyByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IHQuY2FsbChlLCByKSB9OyB9IGNhdGNoICh0KSB7IHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiB0IH07IH0gfSBlLndyYXAgPSB3cmFwOyB2YXIgaCA9IFwic3VzcGVuZGVkU3RhcnRcIiwgbCA9IFwic3VzcGVuZGVkWWllbGRcIiwgZiA9IFwiZXhlY3V0aW5nXCIsIHMgPSBcImNvbXBsZXRlZFwiLCB5ID0ge307IGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9IGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge30gZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fSB2YXIgcCA9IHt9OyBkZWZpbmUocCwgYSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7IHZhciBkID0gT2JqZWN0LmdldFByb3RvdHlwZU9mLCB2ID0gZCAmJiBkKGQodmFsdWVzKFtdKSkpOyB2ICYmIHYgIT09IHIgJiYgbi5jYWxsKHYsIGEpICYmIChwID0gdik7IHZhciBnID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID0gR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUocCk7IGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyh0KSB7IFtcIm5leHRcIiwgXCJ0aHJvd1wiLCBcInJldHVyblwiXS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7IGRlZmluZSh0LCBlLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5faW52b2tlKGUsIHQpOyB9KTsgfSk7IH0gZnVuY3Rpb24gQXN5bmNJdGVyYXRvcih0LCBlKSB7IGZ1bmN0aW9uIGludm9rZShyLCBvLCBpLCBhKSB7IHZhciBjID0gdHJ5Q2F0Y2godFtyXSwgdCwgbyk7IGlmIChcInRocm93XCIgIT09IGMudHlwZSkgeyB2YXIgdSA9IGMuYXJnLCBoID0gdS52YWx1ZTsgcmV0dXJuIGggJiYgXCJvYmplY3RcIiA9PSBfdHlwZW9mKGgpICYmIG4uY2FsbChoLCBcIl9fYXdhaXRcIikgPyBlLnJlc29sdmUoaC5fX2F3YWl0KS50aGVuKGZ1bmN0aW9uICh0KSB7IGludm9rZShcIm5leHRcIiwgdCwgaSwgYSk7IH0sIGZ1bmN0aW9uICh0KSB7IGludm9rZShcInRocm93XCIsIHQsIGksIGEpOyB9KSA6IGUucmVzb2x2ZShoKS50aGVuKGZ1bmN0aW9uICh0KSB7IHUudmFsdWUgPSB0LCBpKHUpOyB9LCBmdW5jdGlvbiAodCkgeyByZXR1cm4gaW52b2tlKFwidGhyb3dcIiwgdCwgaSwgYSk7IH0pOyB9IGEoYy5hcmcpOyB9IHZhciByOyBvKHRoaXMsIFwiX2ludm9rZVwiLCB7IHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh0LCBuKSB7IGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkgeyByZXR1cm4gbmV3IGUoZnVuY3Rpb24gKGUsIHIpIHsgaW52b2tlKHQsIG4sIGUsIHIpOyB9KTsgfSByZXR1cm4gciA9IHIgPyByLnRoZW4oY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7IH0gfSk7IH0gZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChlLCByLCBuKSB7IHZhciBvID0gaDsgcmV0dXJuIGZ1bmN0aW9uIChpLCBhKSB7IGlmIChvID09PSBmKSB0aHJvdyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7IGlmIChvID09PSBzKSB7IGlmIChcInRocm93XCIgPT09IGkpIHRocm93IGE7IHJldHVybiB7IHZhbHVlOiB0LCBkb25lOiAhMCB9OyB9IGZvciAobi5tZXRob2QgPSBpLCBuLmFyZyA9IGE7OykgeyB2YXIgYyA9IG4uZGVsZWdhdGU7IGlmIChjKSB7IHZhciB1ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShjLCBuKTsgaWYgKHUpIHsgaWYgKHUgPT09IHkpIGNvbnRpbnVlOyByZXR1cm4gdTsgfSB9IGlmIChcIm5leHRcIiA9PT0gbi5tZXRob2QpIG4uc2VudCA9IG4uX3NlbnQgPSBuLmFyZztlbHNlIGlmIChcInRocm93XCIgPT09IG4ubWV0aG9kKSB7IGlmIChvID09PSBoKSB0aHJvdyBvID0gcywgbi5hcmc7IG4uZGlzcGF0Y2hFeGNlcHRpb24obi5hcmcpOyB9IGVsc2UgXCJyZXR1cm5cIiA9PT0gbi5tZXRob2QgJiYgbi5hYnJ1cHQoXCJyZXR1cm5cIiwgbi5hcmcpOyBvID0gZjsgdmFyIHAgPSB0cnlDYXRjaChlLCByLCBuKTsgaWYgKFwibm9ybWFsXCIgPT09IHAudHlwZSkgeyBpZiAobyA9IG4uZG9uZSA/IHMgOiBsLCBwLmFyZyA9PT0geSkgY29udGludWU7IHJldHVybiB7IHZhbHVlOiBwLmFyZywgZG9uZTogbi5kb25lIH07IH0gXCJ0aHJvd1wiID09PSBwLnR5cGUgJiYgKG8gPSBzLCBuLm1ldGhvZCA9IFwidGhyb3dcIiwgbi5hcmcgPSBwLmFyZyk7IH0gfTsgfSBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGUsIHIpIHsgdmFyIG4gPSByLm1ldGhvZCwgbyA9IGUuaXRlcmF0b3Jbbl07IGlmIChvID09PSB0KSByZXR1cm4gci5kZWxlZ2F0ZSA9IG51bGwsIFwidGhyb3dcIiA9PT0gbiAmJiBlLml0ZXJhdG9yLnJldHVybiAmJiAoci5tZXRob2QgPSBcInJldHVyblwiLCByLmFyZyA9IHQsIG1heWJlSW52b2tlRGVsZWdhdGUoZSwgciksIFwidGhyb3dcIiA9PT0gci5tZXRob2QpIHx8IFwicmV0dXJuXCIgIT09IG4gJiYgKHIubWV0aG9kID0gXCJ0aHJvd1wiLCByLmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICdcIiArIG4gKyBcIicgbWV0aG9kXCIpKSwgeTsgdmFyIGkgPSB0cnlDYXRjaChvLCBlLml0ZXJhdG9yLCByLmFyZyk7IGlmIChcInRocm93XCIgPT09IGkudHlwZSkgcmV0dXJuIHIubWV0aG9kID0gXCJ0aHJvd1wiLCByLmFyZyA9IGkuYXJnLCByLmRlbGVnYXRlID0gbnVsbCwgeTsgdmFyIGEgPSBpLmFyZzsgcmV0dXJuIGEgPyBhLmRvbmUgPyAocltlLnJlc3VsdE5hbWVdID0gYS52YWx1ZSwgci5uZXh0ID0gZS5uZXh0TG9jLCBcInJldHVyblwiICE9PSByLm1ldGhvZCAmJiAoci5tZXRob2QgPSBcIm5leHRcIiwgci5hcmcgPSB0KSwgci5kZWxlZ2F0ZSA9IG51bGwsIHkpIDogYSA6IChyLm1ldGhvZCA9IFwidGhyb3dcIiwgci5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIiksIHIuZGVsZWdhdGUgPSBudWxsLCB5KTsgfSBmdW5jdGlvbiBwdXNoVHJ5RW50cnkodCkgeyB2YXIgZSA9IHsgdHJ5TG9jOiB0WzBdIH07IDEgaW4gdCAmJiAoZS5jYXRjaExvYyA9IHRbMV0pLCAyIGluIHQgJiYgKGUuZmluYWxseUxvYyA9IHRbMl0sIGUuYWZ0ZXJMb2MgPSB0WzNdKSwgdGhpcy50cnlFbnRyaWVzLnB1c2goZSk7IH0gZnVuY3Rpb24gcmVzZXRUcnlFbnRyeSh0KSB7IHZhciBlID0gdC5jb21wbGV0aW9uIHx8IHt9OyBlLnR5cGUgPSBcIm5vcm1hbFwiLCBkZWxldGUgZS5hcmcsIHQuY29tcGxldGlvbiA9IGU7IH0gZnVuY3Rpb24gQ29udGV4dCh0KSB7IHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogXCJyb290XCIgfV0sIHQuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpLCB0aGlzLnJlc2V0KCEwKTsgfSBmdW5jdGlvbiB2YWx1ZXMoZSkgeyBpZiAoZSB8fCBcIlwiID09PSBlKSB7IHZhciByID0gZVthXTsgaWYgKHIpIHJldHVybiByLmNhbGwoZSk7IGlmIChcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUubmV4dCkgcmV0dXJuIGU7IGlmICghaXNOYU4oZS5sZW5ndGgpKSB7IHZhciBvID0gLTEsIGkgPSBmdW5jdGlvbiBuZXh0KCkgeyBmb3IgKDsgKytvIDwgZS5sZW5ndGg7KSBpZiAobi5jYWxsKGUsIG8pKSByZXR1cm4gbmV4dC52YWx1ZSA9IGVbb10sIG5leHQuZG9uZSA9ICExLCBuZXh0OyByZXR1cm4gbmV4dC52YWx1ZSA9IHQsIG5leHQuZG9uZSA9ICEwLCBuZXh0OyB9OyByZXR1cm4gaS5uZXh0ID0gaTsgfSB9IHRocm93IG5ldyBUeXBlRXJyb3IoX3R5cGVvZihlKSArIFwiIGlzIG5vdCBpdGVyYWJsZVwiKTsgfSByZXR1cm4gR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIG8oZywgXCJjb25zdHJ1Y3RvclwiLCB7IHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgY29uZmlndXJhYmxlOiAhMCB9KSwgbyhHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgXCJjb25zdHJ1Y3RvclwiLCB7IHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvbiwgY29uZmlndXJhYmxlOiAhMCB9KSwgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkZWZpbmUoR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIHUsIFwiR2VuZXJhdG9yRnVuY3Rpb25cIiksIGUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uICh0KSB7IHZhciBlID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiB0ICYmIHQuY29uc3RydWN0b3I7IHJldHVybiAhIWUgJiYgKGUgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8IFwiR2VuZXJhdG9yRnVuY3Rpb25cIiA9PT0gKGUuZGlzcGxheU5hbWUgfHwgZS5uYW1lKSk7IH0sIGUubWFyayA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YodCwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpIDogKHQuX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGRlZmluZSh0LCB1LCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpKSwgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGcpLCB0OyB9LCBlLmF3cmFwID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHsgX19hd2FpdDogdCB9OyB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpLCBkZWZpbmUoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUsIGMsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pLCBlLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yLCBlLmFzeW5jID0gZnVuY3Rpb24gKHQsIHIsIG4sIG8sIGkpIHsgdm9pZCAwID09PSBpICYmIChpID0gUHJvbWlzZSk7IHZhciBhID0gbmV3IEFzeW5jSXRlcmF0b3Iod3JhcCh0LCByLCBuLCBvKSwgaSk7IHJldHVybiBlLmlzR2VuZXJhdG9yRnVuY3Rpb24ocikgPyBhIDogYS5uZXh0KCkudGhlbihmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5kb25lID8gdC52YWx1ZSA6IGEubmV4dCgpOyB9KTsgfSwgZGVmaW5lSXRlcmF0b3JNZXRob2RzKGcpLCBkZWZpbmUoZywgdSwgXCJHZW5lcmF0b3JcIiksIGRlZmluZShnLCBhLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSwgZGVmaW5lKGcsIFwidG9TdHJpbmdcIiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjsgfSksIGUua2V5cyA9IGZ1bmN0aW9uICh0KSB7IHZhciBlID0gT2JqZWN0KHQpLCByID0gW107IGZvciAodmFyIG4gaW4gZSkgci5wdXNoKG4pOyByZXR1cm4gci5yZXZlcnNlKCksIGZ1bmN0aW9uIG5leHQoKSB7IGZvciAoOyByLmxlbmd0aDspIHsgdmFyIHQgPSByLnBvcCgpOyBpZiAodCBpbiBlKSByZXR1cm4gbmV4dC52YWx1ZSA9IHQsIG5leHQuZG9uZSA9ICExLCBuZXh0OyB9IHJldHVybiBuZXh0LmRvbmUgPSAhMCwgbmV4dDsgfTsgfSwgZS52YWx1ZXMgPSB2YWx1ZXMsIENvbnRleHQucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogQ29udGV4dCwgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KGUpIHsgaWYgKHRoaXMucHJldiA9IDAsIHRoaXMubmV4dCA9IDAsIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB0LCB0aGlzLmRvbmUgPSAhMSwgdGhpcy5kZWxlZ2F0ZSA9IG51bGwsIHRoaXMubWV0aG9kID0gXCJuZXh0XCIsIHRoaXMuYXJnID0gdCwgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSksICFlKSBmb3IgKHZhciByIGluIHRoaXMpIFwidFwiID09PSByLmNoYXJBdCgwKSAmJiBuLmNhbGwodGhpcywgcikgJiYgIWlzTmFOKCtyLnNsaWNlKDEpKSAmJiAodGhpc1tyXSA9IHQpOyB9LCBzdG9wOiBmdW5jdGlvbiBzdG9wKCkgeyB0aGlzLmRvbmUgPSAhMDsgdmFyIHQgPSB0aGlzLnRyeUVudHJpZXNbMF0uY29tcGxldGlvbjsgaWYgKFwidGhyb3dcIiA9PT0gdC50eXBlKSB0aHJvdyB0LmFyZzsgcmV0dXJuIHRoaXMucnZhbDsgfSwgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uIGRpc3BhdGNoRXhjZXB0aW9uKGUpIHsgaWYgKHRoaXMuZG9uZSkgdGhyb3cgZTsgdmFyIHIgPSB0aGlzOyBmdW5jdGlvbiBoYW5kbGUobiwgbykgeyByZXR1cm4gYS50eXBlID0gXCJ0aHJvd1wiLCBhLmFyZyA9IGUsIHIubmV4dCA9IG4sIG8gJiYgKHIubWV0aG9kID0gXCJuZXh0XCIsIHIuYXJnID0gdCksICEhbzsgfSBmb3IgKHZhciBvID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IG8gPj0gMDsgLS1vKSB7IHZhciBpID0gdGhpcy50cnlFbnRyaWVzW29dLCBhID0gaS5jb21wbGV0aW9uOyBpZiAoXCJyb290XCIgPT09IGkudHJ5TG9jKSByZXR1cm4gaGFuZGxlKFwiZW5kXCIpOyBpZiAoaS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7IHZhciBjID0gbi5jYWxsKGksIFwiY2F0Y2hMb2NcIiksIHUgPSBuLmNhbGwoaSwgXCJmaW5hbGx5TG9jXCIpOyBpZiAoYyAmJiB1KSB7IGlmICh0aGlzLnByZXYgPCBpLmNhdGNoTG9jKSByZXR1cm4gaGFuZGxlKGkuY2F0Y2hMb2MsICEwKTsgaWYgKHRoaXMucHJldiA8IGkuZmluYWxseUxvYykgcmV0dXJuIGhhbmRsZShpLmZpbmFsbHlMb2MpOyB9IGVsc2UgaWYgKGMpIHsgaWYgKHRoaXMucHJldiA8IGkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoaS5jYXRjaExvYywgITApOyB9IGVsc2UgeyBpZiAoIXUpIHRocm93IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7IGlmICh0aGlzLnByZXYgPCBpLmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoaS5maW5hbGx5TG9jKTsgfSB9IH0gfSwgYWJydXB0OiBmdW5jdGlvbiBhYnJ1cHQodCwgZSkgeyBmb3IgKHZhciByID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IHIgPj0gMDsgLS1yKSB7IHZhciBvID0gdGhpcy50cnlFbnRyaWVzW3JdOyBpZiAoby50cnlMb2MgPD0gdGhpcy5wcmV2ICYmIG4uY2FsbChvLCBcImZpbmFsbHlMb2NcIikgJiYgdGhpcy5wcmV2IDwgby5maW5hbGx5TG9jKSB7IHZhciBpID0gbzsgYnJlYWs7IH0gfSBpICYmIChcImJyZWFrXCIgPT09IHQgfHwgXCJjb250aW51ZVwiID09PSB0KSAmJiBpLnRyeUxvYyA8PSBlICYmIGUgPD0gaS5maW5hbGx5TG9jICYmIChpID0gbnVsbCk7IHZhciBhID0gaSA/IGkuY29tcGxldGlvbiA6IHt9OyByZXR1cm4gYS50eXBlID0gdCwgYS5hcmcgPSBlLCBpID8gKHRoaXMubWV0aG9kID0gXCJuZXh0XCIsIHRoaXMubmV4dCA9IGkuZmluYWxseUxvYywgeSkgOiB0aGlzLmNvbXBsZXRlKGEpOyB9LCBjb21wbGV0ZTogZnVuY3Rpb24gY29tcGxldGUodCwgZSkgeyBpZiAoXCJ0aHJvd1wiID09PSB0LnR5cGUpIHRocm93IHQuYXJnOyByZXR1cm4gXCJicmVha1wiID09PSB0LnR5cGUgfHwgXCJjb250aW51ZVwiID09PSB0LnR5cGUgPyB0aGlzLm5leHQgPSB0LmFyZyA6IFwicmV0dXJuXCIgPT09IHQudHlwZSA/ICh0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHQuYXJnLCB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCIsIHRoaXMubmV4dCA9IFwiZW5kXCIpIDogXCJub3JtYWxcIiA9PT0gdC50eXBlICYmIGUgJiYgKHRoaXMubmV4dCA9IGUpLCB5OyB9LCBmaW5pc2g6IGZ1bmN0aW9uIGZpbmlzaCh0KSB7IGZvciAodmFyIGUgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgZSA+PSAwOyAtLWUpIHsgdmFyIHIgPSB0aGlzLnRyeUVudHJpZXNbZV07IGlmIChyLmZpbmFsbHlMb2MgPT09IHQpIHJldHVybiB0aGlzLmNvbXBsZXRlKHIuY29tcGxldGlvbiwgci5hZnRlckxvYyksIHJlc2V0VHJ5RW50cnkociksIHk7IH0gfSwgY2F0Y2g6IGZ1bmN0aW9uIF9jYXRjaCh0KSB7IGZvciAodmFyIGUgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgZSA+PSAwOyAtLWUpIHsgdmFyIHIgPSB0aGlzLnRyeUVudHJpZXNbZV07IGlmIChyLnRyeUxvYyA9PT0gdCkgeyB2YXIgbiA9IHIuY29tcGxldGlvbjsgaWYgKFwidGhyb3dcIiA9PT0gbi50eXBlKSB7IHZhciBvID0gbi5hcmc7IHJlc2V0VHJ5RW50cnkocik7IH0gcmV0dXJuIG87IH0gfSB0aHJvdyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTsgfSwgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24gZGVsZWdhdGVZaWVsZChlLCByLCBuKSB7IHJldHVybiB0aGlzLmRlbGVnYXRlID0geyBpdGVyYXRvcjogdmFsdWVzKGUpLCByZXN1bHROYW1lOiByLCBuZXh0TG9jOiBuIH0sIFwibmV4dFwiID09PSB0aGlzLm1ldGhvZCAmJiAodGhpcy5hcmcgPSB0KSwgeTsgfSB9LCBlOyB9XG5mdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAobiwgdCwgZSwgciwgbywgYSwgYykgeyB0cnkgeyB2YXIgaSA9IG5bYV0oYyksIHUgPSBpLnZhbHVlOyB9IGNhdGNoIChuKSB7IHJldHVybiB2b2lkIGUobik7IH0gaS5kb25lID8gdCh1KSA6IFByb21pc2UucmVzb2x2ZSh1KS50aGVuKHIsIG8pOyB9XG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcywgZSA9IGFyZ3VtZW50czsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyLCBvKSB7IHZhciBhID0gbi5hcHBseSh0LCBlKTsgZnVuY3Rpb24gX25leHQobikgeyBhc3luY0dlbmVyYXRvclN0ZXAoYSwgciwgbywgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIG4pOyB9IGZ1bmN0aW9uIF90aHJvdyhuKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChhLCByLCBvLCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIG4pOyB9IF9uZXh0KHZvaWQgMCk7IH0pOyB9OyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0KSB7IHJldHVybiAociA9IF90b1Byb3BlcnR5S2V5KHIpKSBpbiBlID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIHsgdmFsdWU6IHQsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAgfSkgOiBlW3JdID0gdCwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbnZhciBTZW50VHJhbnNhY3Rpb24gPSBleHBvcnRzLlNlbnRUcmFuc2FjdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2VudFRyYW5zYWN0aW9uKGFzc2VtYmxlZCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXMsXG4gICAgICBfdGhpcyRhc3NlbWJsZWQkb3B0aW8yO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZW50VHJhbnNhY3Rpb24pO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNlbmRcIiwgX2FzeW5jVG9HZW5lcmF0b3IoX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHtcbiAgICAgIHZhciBfdGhpcyRhc3NlbWJsZWQkb3B0aW87XG4gICAgICB2YXIgaGFzaCwgdGltZW91dEluU2Vjb25kcztcbiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnNlcnZlci5zZW5kVHJhbnNhY3Rpb24oX3RoaXMuYXNzZW1ibGVkLnNpZ25lZCk7XG4gICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgX3RoaXMuc2VuZFRyYW5zYWN0aW9uUmVzcG9uc2UgPSBfY29udGV4dC5zZW50O1xuICAgICAgICAgICAgaWYgKCEoX3RoaXMuc2VuZFRyYW5zYWN0aW9uUmVzcG9uc2Uuc3RhdHVzICE9PSBcIlBFTkRJTkdcIikpIHtcbiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IFNlbnRUcmFuc2FjdGlvbi5FcnJvcnMuU2VuZEZhaWxlZChcIlNlbmRpbmcgdGhlIHRyYW5zYWN0aW9uIHRvIHRoZSBuZXR3b3JrIGZhaWxlZCFcXG5cIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoX3RoaXMuc2VuZFRyYW5zYWN0aW9uUmVzcG9uc2UsIG51bGwsIDIpKSk7XG4gICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgaGFzaCA9IF90aGlzLnNlbmRUcmFuc2FjdGlvblJlc3BvbnNlLmhhc2g7XG4gICAgICAgICAgICB0aW1lb3V0SW5TZWNvbmRzID0gKF90aGlzJGFzc2VtYmxlZCRvcHRpbyA9IF90aGlzLmFzc2VtYmxlZC5vcHRpb25zLnRpbWVvdXRJblNlY29uZHMpICE9PSBudWxsICYmIF90aGlzJGFzc2VtYmxlZCRvcHRpbyAhPT0gdm9pZCAwID8gX3RoaXMkYXNzZW1ibGVkJG9wdGlvIDogX3R5cGVzLkRFRkFVTFRfVElNRU9VVDtcbiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5O1xuICAgICAgICAgICAgcmV0dXJuICgwLCBfdXRpbHMud2l0aEV4cG9uZW50aWFsQmFja29mZikoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuc2VydmVyLmdldFRyYW5zYWN0aW9uKGhhc2gpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKHJlc3ApIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3Auc3RhdHVzID09PSBfYXBpLkFwaS5HZXRUcmFuc2FjdGlvblN0YXR1cy5OT1RfRk9VTkQ7XG4gICAgICAgICAgICB9LCB0aW1lb3V0SW5TZWNvbmRzKTtcbiAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBfdGhpcy5nZXRUcmFuc2FjdGlvblJlc3BvbnNlQWxsID0gX2NvbnRleHQuc2VudDtcbiAgICAgICAgICAgIF90aGlzLmdldFRyYW5zYWN0aW9uUmVzcG9uc2UgPSBfdGhpcy5nZXRUcmFuc2FjdGlvblJlc3BvbnNlQWxsW190aGlzLmdldFRyYW5zYWN0aW9uUmVzcG9uc2VBbGwubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBpZiAoIShfdGhpcy5nZXRUcmFuc2FjdGlvblJlc3BvbnNlLnN0YXR1cyA9PT0gX2FwaS5BcGkuR2V0VHJhbnNhY3Rpb25TdGF0dXMuTk9UX0ZPVU5EKSkge1xuICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IFNlbnRUcmFuc2FjdGlvbi5FcnJvcnMuVHJhbnNhY3Rpb25TdGlsbFBlbmRpbmcoXCJXYWl0ZWQgXCIuY29uY2F0KHRpbWVvdXRJblNlY29uZHMsIFwiIHNlY29uZHMgZm9yIHRyYW5zYWN0aW9uIHRvIGNvbXBsZXRlLCBidXQgaXQgZGlkIG5vdC4gXCIpICsgXCJSZXR1cm5pbmcgYW55d2F5LiBDaGVjayB0aGUgdHJhbnNhY3Rpb24gc3RhdHVzIG1hbnVhbGx5LiBcIiArIFwiU2VudCB0cmFuc2FjdGlvbjogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KF90aGlzLnNlbmRUcmFuc2FjdGlvblJlc3BvbnNlLCBudWxsLCAyKSwgXCJcXG5cIikgKyBcIkFsbCBhdHRlbXB0cyB0byBnZXQgdGhlIHJlc3VsdDogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KF90aGlzLmdldFRyYW5zYWN0aW9uUmVzcG9uc2VBbGwsIG51bGwsIDIpKSk7XG4gICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgX3RoaXMpO1xuICAgICAgICAgIGNhc2UgMTQ6XG4gICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTtcbiAgICAgICAgfVxuICAgICAgfSwgX2NhbGxlZSk7XG4gICAgfSkpKTtcbiAgICB0aGlzLmFzc2VtYmxlZCA9IGFzc2VtYmxlZDtcbiAgICB0aGlzLnNlcnZlciA9IG5ldyBfcnBjLlNlcnZlcih0aGlzLmFzc2VtYmxlZC5vcHRpb25zLnJwY1VybCwge1xuICAgICAgYWxsb3dIdHRwOiAoX3RoaXMkYXNzZW1ibGVkJG9wdGlvMiA9IHRoaXMuYXNzZW1ibGVkLm9wdGlvbnMuYWxsb3dIdHRwKSAhPT0gbnVsbCAmJiBfdGhpcyRhc3NlbWJsZWQkb3B0aW8yICE9PSB2b2lkIDAgPyBfdGhpcyRhc3NlbWJsZWQkb3B0aW8yIDogZmFsc2VcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gX2NyZWF0ZUNsYXNzKFNlbnRUcmFuc2FjdGlvbiwgW3tcbiAgICBrZXk6IFwicmVzdWx0XCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICBpZiAoXCJnZXRUcmFuc2FjdGlvblJlc3BvbnNlXCIgaW4gdGhpcyAmJiB0aGlzLmdldFRyYW5zYWN0aW9uUmVzcG9uc2UpIHtcbiAgICAgICAgaWYgKFwicmV0dXJuVmFsdWVcIiBpbiB0aGlzLmdldFRyYW5zYWN0aW9uUmVzcG9uc2UpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5hc3NlbWJsZWQub3B0aW9ucy5wYXJzZVJlc3VsdFhkcih0aGlzLmdldFRyYW5zYWN0aW9uUmVzcG9uc2UucmV0dXJuVmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRyYW5zYWN0aW9uIGZhaWxlZCEgQ2Fubm90IHBhcnNlIHJlc3VsdC5cIik7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5zZW5kVHJhbnNhY3Rpb25SZXNwb25zZSkge1xuICAgICAgICB2YXIgX3RoaXMkc2VuZFRyYW5zYWN0aW9uO1xuICAgICAgICB2YXIgZXJyb3JSZXN1bHQgPSAoX3RoaXMkc2VuZFRyYW5zYWN0aW9uID0gdGhpcy5zZW5kVHJhbnNhY3Rpb25SZXNwb25zZS5lcnJvclJlc3VsdCkgPT09IG51bGwgfHwgX3RoaXMkc2VuZFRyYW5zYWN0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRzZW5kVHJhbnNhY3Rpb24ucmVzdWx0KCk7XG4gICAgICAgIGlmIChlcnJvclJlc3VsdCkge1xuICAgICAgICAgIHRocm93IG5ldyBTZW50VHJhbnNhY3Rpb24uRXJyb3JzLlNlbmRGYWlsZWQoXCJUcmFuc2FjdGlvbiBzaW11bGF0aW9uIGxvb2tlZCBjb3JyZWN0LCBidXQgYXR0ZW1wdGluZyB0byBzZW5kIHRoZSB0cmFuc2FjdGlvbiBmYWlsZWQuIENoZWNrIGBzaW11bGF0aW9uYCBhbmQgYHNlbmRUcmFuc2FjdGlvblJlc3BvbnNlQWxsYCB0byB0cm91Ymxlc2hvb3QuIERlY29kZWQgYHNlbmRUcmFuc2FjdGlvblJlc3BvbnNlLmVycm9yUmVzdWx0WGRyYDogXCIuY29uY2F0KGVycm9yUmVzdWx0KSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IFNlbnRUcmFuc2FjdGlvbi5FcnJvcnMuU2VuZFJlc3VsdE9ubHkoXCJUcmFuc2FjdGlvbiB3YXMgc2VudCB0byB0aGUgbmV0d29yaywgYnV0IG5vdCB5ZXQgYXdhaXRlZC4gTm8gcmVzdWx0IHRvIHNob3cuIEF3YWl0IHRyYW5zYWN0aW9uIGNvbXBsZXRpb24gd2l0aCBgZ2V0VHJhbnNhY3Rpb24oc2VuZFRyYW5zYWN0aW9uUmVzcG9uc2UuaGFzaClgXCIpO1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2VuZGluZyB0cmFuc2FjdGlvbiBmYWlsZWQ6IFwiLmNvbmNhdChKU09OLnN0cmluZ2lmeSh0aGlzLmFzc2VtYmxlZC5zaWduZWQpKSk7XG4gICAgfVxuICB9XSk7XG59KCk7XG5fU2VudFRyYW5zYWN0aW9uID0gU2VudFRyYW5zYWN0aW9uO1xuX2RlZmluZVByb3BlcnR5KFNlbnRUcmFuc2FjdGlvbiwgXCJFcnJvcnNcIiwge1xuICBTZW5kRmFpbGVkOiBmdW5jdGlvbiAoX0Vycm9yKSB7XG4gICAgZnVuY3Rpb24gU2VuZEZhaWxlZEVycm9yKCkge1xuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNlbmRGYWlsZWRFcnJvcik7XG4gICAgICByZXR1cm4gX2NhbGxTdXBlcih0aGlzLCBTZW5kRmFpbGVkRXJyb3IsIGFyZ3VtZW50cyk7XG4gICAgfVxuICAgIF9pbmhlcml0cyhTZW5kRmFpbGVkRXJyb3IsIF9FcnJvcik7XG4gICAgcmV0dXJuIF9jcmVhdGVDbGFzcyhTZW5kRmFpbGVkRXJyb3IpO1xuICB9KF93cmFwTmF0aXZlU3VwZXIoRXJyb3IpKSxcbiAgU2VuZFJlc3VsdE9ubHk6IGZ1bmN0aW9uIChfRXJyb3IyKSB7XG4gICAgZnVuY3Rpb24gU2VuZFJlc3VsdE9ubHlFcnJvcigpIHtcbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZW5kUmVzdWx0T25seUVycm9yKTtcbiAgICAgIHJldHVybiBfY2FsbFN1cGVyKHRoaXMsIFNlbmRSZXN1bHRPbmx5RXJyb3IsIGFyZ3VtZW50cyk7XG4gICAgfVxuICAgIF9pbmhlcml0cyhTZW5kUmVzdWx0T25seUVycm9yLCBfRXJyb3IyKTtcbiAgICByZXR1cm4gX2NyZWF0ZUNsYXNzKFNlbmRSZXN1bHRPbmx5RXJyb3IpO1xuICB9KF93cmFwTmF0aXZlU3VwZXIoRXJyb3IpKSxcbiAgVHJhbnNhY3Rpb25TdGlsbFBlbmRpbmc6IGZ1bmN0aW9uIChfRXJyb3IzKSB7XG4gICAgZnVuY3Rpb24gVHJhbnNhY3Rpb25TdGlsbFBlbmRpbmdFcnJvcigpIHtcbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUcmFuc2FjdGlvblN0aWxsUGVuZGluZ0Vycm9yKTtcbiAgICAgIHJldHVybiBfY2FsbFN1cGVyKHRoaXMsIFRyYW5zYWN0aW9uU3RpbGxQZW5kaW5nRXJyb3IsIGFyZ3VtZW50cyk7XG4gICAgfVxuICAgIF9pbmhlcml0cyhUcmFuc2FjdGlvblN0aWxsUGVuZGluZ0Vycm9yLCBfRXJyb3IzKTtcbiAgICByZXR1cm4gX2NyZWF0ZUNsYXNzKFRyYW5zYWN0aW9uU3RpbGxQZW5kaW5nRXJyb3IpO1xuICB9KF93cmFwTmF0aXZlU3VwZXIoRXJyb3IpKVxufSk7XG5fZGVmaW5lUHJvcGVydHkoU2VudFRyYW5zYWN0aW9uLCBcImluaXRcIiwgZnVuY3Rpb24gKCkge1xuICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvcihfcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMihhc3NlbWJsZWQpIHtcbiAgICB2YXIgdHgsIHNlbnQ7XG4gICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHtcbiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIHR4ID0gbmV3IF9TZW50VHJhbnNhY3Rpb24oYXNzZW1ibGVkKTtcbiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7XG4gICAgICAgICAgcmV0dXJuIHR4LnNlbmQoKTtcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgIHNlbnQgPSBfY29udGV4dDIuc2VudDtcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdChcInJldHVyblwiLCBzZW50KTtcbiAgICAgICAgY2FzZSA1OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7XG4gICAgICB9XG4gICAgfSwgX2NhbGxlZTIpO1xuICB9KSk7XG4gIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbn0oKSk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/spec.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Spec = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _rust_result = __webpack_require__(/*! ./rust_result */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction enumToJsonSchema(udt) {\n  var description = udt.doc().toString();\n  var cases = udt.cases();\n  var oneOf = [];\n  cases.forEach(function (aCase) {\n    var title = aCase.name().toString();\n    var desc = aCase.doc().toString();\n    oneOf.push({\n      description: desc,\n      title: title,\n      enum: [aCase.value()],\n      type: \"number\"\n    });\n  });\n  var res = {\n    oneOf: oneOf\n  };\n  if (description.length > 0) {\n    res.description = description;\n  }\n  return res;\n}\nfunction isNumeric(field) {\n  return /^\\d+$/.test(field.name().toString());\n}\nfunction readObj(args, input) {\n  var inputName = input.name().toString();\n  var entry = Object.entries(args).find(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n      name = _ref2[0];\n    return name === inputName;\n  });\n  if (!entry) {\n    throw new Error(\"Missing field \".concat(inputName));\n  }\n  return entry[1];\n}\nfunction findCase(name) {\n  return function matches(entry) {\n    switch (entry.switch().value) {\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:\n        {\n          var tuple = entry.tupleCase();\n          return tuple.name().toString() === name;\n        }\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:\n        {\n          var voidCase = entry.voidCase();\n          return voidCase.name().toString() === name;\n        }\n      default:\n        return false;\n    }\n  };\n}\nfunction stringToScVal(str, ty) {\n  switch (ty.value) {\n    case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:\n      return _stellarBase.xdr.ScVal.scvString(str);\n    case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:\n      return _stellarBase.xdr.ScVal.scvSymbol(str);\n    case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value:\n      return _stellarBase.Address.fromString(str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:\n      return new _stellarBase.XdrLargeInt(\"u64\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:\n      return new _stellarBase.XdrLargeInt(\"i64\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:\n      return new _stellarBase.XdrLargeInt(\"u128\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:\n      return new _stellarBase.XdrLargeInt(\"i128\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:\n      return new _stellarBase.XdrLargeInt(\"u256\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:\n      return new _stellarBase.XdrLargeInt(\"i256\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:\n      return _stellarBase.xdr.ScVal.scvBytes(Buffer.from(str, \"base64\"));\n    default:\n      throw new TypeError(\"invalid type \".concat(ty.name, \" specified for string value\"));\n  }\n}\nvar PRIMITIVE_DEFINITONS = {\n  U32: {\n    type: \"integer\",\n    minimum: 0,\n    maximum: 4294967295\n  },\n  I32: {\n    type: \"integer\",\n    minimum: -2147483648,\n    maximum: 2147483647\n  },\n  U64: {\n    type: \"string\",\n    pattern: \"^([1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 20\n  },\n  I64: {\n    type: \"string\",\n    pattern: \"^(-?[1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 21\n  },\n  U128: {\n    type: \"string\",\n    pattern: \"^([1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 39\n  },\n  I128: {\n    type: \"string\",\n    pattern: \"^(-?[1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 40\n  },\n  U256: {\n    type: \"string\",\n    pattern: \"^([1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 78\n  },\n  I256: {\n    type: \"string\",\n    pattern: \"^(-?[1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 79\n  },\n  Address: {\n    type: \"string\",\n    format: \"address\",\n    description: \"Address can be a public key or contract id\"\n  },\n  ScString: {\n    type: \"string\",\n    description: \"ScString is a string\"\n  },\n  ScSymbol: {\n    type: \"string\",\n    description: \"ScSymbol is a string\"\n  },\n  DataUrl: {\n    type: \"string\",\n    pattern: \"^(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\\\/]{3}=)?$\"\n  }\n};\nfunction typeRef(typeDef) {\n  var t = typeDef.switch();\n  var value = t.value;\n  var ref;\n  switch (value) {\n    case _stellarBase.xdr.ScSpecType.scSpecTypeVal().value:\n      {\n        ref = \"Val\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBool().value:\n      {\n        return {\n          type: \"boolean\"\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:\n      {\n        return {\n          type: \"null\"\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeError().value:\n      {\n        ref = \"Error\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:\n      {\n        ref = \"U32\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:\n      {\n        ref = \"I32\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:\n      {\n        ref = \"U64\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:\n      {\n        ref = \"I64\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeTimepoint().value:\n      {\n        throw new Error(\"Timepoint type not supported\");\n        ref = \"Timepoint\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeDuration().value:\n      {\n        throw new Error(\"Duration not supported\");\n        ref = \"Duration\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:\n      {\n        ref = \"U128\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:\n      {\n        ref = \"I128\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:\n      {\n        ref = \"U256\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:\n      {\n        ref = \"I256\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:\n      {\n        ref = \"DataUrl\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:\n      {\n        ref = \"ScString\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:\n      {\n        ref = \"ScSymbol\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value:\n      {\n        ref = \"Address\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:\n      {\n        var opt = typeDef.option();\n        return typeRef(opt.valueType());\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeResult().value:\n      {\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value:\n      {\n        var arr = typeDef.vec();\n        var reference = typeRef(arr.elementType());\n        return {\n          type: \"array\",\n          items: reference\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value:\n      {\n        var map = typeDef.map();\n        var items = [typeRef(map.keyType()), typeRef(map.valueType())];\n        return {\n          type: \"array\",\n          items: {\n            type: \"array\",\n            items: items,\n            minItems: 2,\n            maxItems: 2\n          }\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value:\n      {\n        var tuple = typeDef.tuple();\n        var minItems = tuple.valueTypes().length;\n        var maxItems = minItems;\n        var _items = tuple.valueTypes().map(typeRef);\n        return {\n          type: \"array\",\n          items: _items,\n          minItems: minItems,\n          maxItems: maxItems\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:\n      {\n        var _arr = typeDef.bytesN();\n        return {\n          $ref: \"#/definitions/DataUrl\",\n          maxLength: _arr.n()\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value:\n      {\n        var udt = typeDef.udt();\n        ref = udt.name().toString();\n        break;\n      }\n  }\n  return {\n    $ref: \"#/definitions/\".concat(ref)\n  };\n}\nfunction isRequired(typeDef) {\n  return typeDef.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeOption().value;\n}\nfunction argsAndRequired(input) {\n  var properties = {};\n  var required = [];\n  input.forEach(function (arg) {\n    var aType = arg.type();\n    var name = arg.name().toString();\n    properties[name] = typeRef(aType);\n    if (isRequired(aType)) {\n      required.push(name);\n    }\n  });\n  var res = {\n    properties: properties\n  };\n  if (required.length > 0) {\n    res.required = required;\n  }\n  return res;\n}\nfunction structToJsonSchema(udt) {\n  var fields = udt.fields();\n  if (fields.some(isNumeric)) {\n    if (!fields.every(isNumeric)) {\n      throw new Error(\"mixed numeric and non-numeric field names are not allowed\");\n    }\n    var items = fields.map(function (_, i) {\n      return typeRef(fields[i].type());\n    });\n    return {\n      type: \"array\",\n      items: items,\n      minItems: fields.length,\n      maxItems: fields.length\n    };\n  }\n  var description = udt.doc().toString();\n  var _argsAndRequired = argsAndRequired(fields),\n    properties = _argsAndRequired.properties,\n    required = _argsAndRequired.required;\n  properties.additionalProperties = false;\n  return {\n    description: description,\n    properties: properties,\n    required: required,\n    type: \"object\"\n  };\n}\nfunction functionToJsonSchema(func) {\n  var _argsAndRequired2 = argsAndRequired(func.inputs()),\n    properties = _argsAndRequired2.properties,\n    required = _argsAndRequired2.required;\n  var args = {\n    additionalProperties: false,\n    properties: properties,\n    type: \"object\"\n  };\n  if ((required === null || required === void 0 ? void 0 : required.length) > 0) {\n    args.required = required;\n  }\n  var input = {\n    properties: {\n      args: args\n    }\n  };\n  var outputs = func.outputs();\n  var output = outputs.length > 0 ? typeRef(outputs[0]) : typeRef(_stellarBase.xdr.ScSpecTypeDef.scSpecTypeVoid());\n  var description = func.doc().toString();\n  if (description.length > 0) {\n    input.description = description;\n  }\n  input.additionalProperties = false;\n  output.additionalProperties = false;\n  return {\n    input: input,\n    output: output\n  };\n}\nfunction unionToJsonSchema(udt) {\n  var description = udt.doc().toString();\n  var cases = udt.cases();\n  var oneOf = [];\n  cases.forEach(function (aCase) {\n    switch (aCase.switch().value) {\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:\n        {\n          var c = aCase.voidCase();\n          var title = c.name().toString();\n          oneOf.push({\n            type: \"object\",\n            title: title,\n            properties: {\n              tag: title\n            },\n            additionalProperties: false,\n            required: [\"tag\"]\n          });\n          break;\n        }\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:\n        {\n          var _c = aCase.tupleCase();\n          var _title = _c.name().toString();\n          oneOf.push({\n            type: \"object\",\n            title: _title,\n            properties: {\n              tag: _title,\n              values: {\n                type: \"array\",\n                items: _c.type().map(typeRef)\n              }\n            },\n            required: [\"tag\", \"values\"],\n            additionalProperties: false\n          });\n        }\n    }\n  });\n  var res = {\n    oneOf: oneOf\n  };\n  if (description.length > 0) {\n    res.description = description;\n  }\n  return res;\n}\nvar Spec = exports.Spec = function () {\n  function Spec(entries) {\n    _classCallCheck(this, Spec);\n    _defineProperty(this, \"entries\", []);\n    if (entries.length === 0) {\n      throw new Error(\"Contract spec must have at least one entry\");\n    }\n    var entry = entries[0];\n    if (typeof entry === \"string\") {\n      this.entries = entries.map(function (s) {\n        return _stellarBase.xdr.ScSpecEntry.fromXDR(s, \"base64\");\n      });\n    } else {\n      this.entries = entries;\n    }\n  }\n  return _createClass(Spec, [{\n    key: \"funcs\",\n    value: function funcs() {\n      return this.entries.filter(function (entry) {\n        return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;\n      }).map(function (entry) {\n        return entry.functionV0();\n      });\n    }\n  }, {\n    key: \"getFunc\",\n    value: function getFunc(name) {\n      var entry = this.findEntry(name);\n      if (entry.switch().value !== _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) {\n        throw new Error(\"\".concat(name, \" is not a function\"));\n      }\n      return entry.functionV0();\n    }\n  }, {\n    key: \"funcArgsToScVals\",\n    value: function funcArgsToScVals(name, args) {\n      var _this = this;\n      var fn = this.getFunc(name);\n      return fn.inputs().map(function (input) {\n        return _this.nativeToScVal(readObj(args, input), input.type());\n      });\n    }\n  }, {\n    key: \"funcResToNative\",\n    value: function funcResToNative(name, val_or_base64) {\n      var val = typeof val_or_base64 === \"string\" ? _stellarBase.xdr.ScVal.fromXDR(val_or_base64, \"base64\") : val_or_base64;\n      var func = this.getFunc(name);\n      var outputs = func.outputs();\n      if (outputs.length === 0) {\n        var type = val.switch();\n        if (type.value !== _stellarBase.xdr.ScValType.scvVoid().value) {\n          throw new Error(\"Expected void, got \".concat(type.name));\n        }\n        return null;\n      }\n      if (outputs.length > 1) {\n        throw new Error(\"Multiple outputs not supported\");\n      }\n      var output = outputs[0];\n      if (output.switch().value === _stellarBase.xdr.ScSpecType.scSpecTypeResult().value) {\n        return new _rust_result.Ok(this.scValToNative(val, output.result().okType()));\n      }\n      return this.scValToNative(val, output);\n    }\n  }, {\n    key: \"findEntry\",\n    value: function findEntry(name) {\n      var entry = this.entries.find(function (e) {\n        return e.value().name().toString() === name;\n      });\n      if (!entry) {\n        throw new Error(\"no such entry: \".concat(name));\n      }\n      return entry;\n    }\n  }, {\n    key: \"nativeToScVal\",\n    value: function nativeToScVal(val, ty) {\n      var _this2 = this;\n      var t = ty.switch();\n      var value = t.value;\n      if (t.value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {\n        var udt = ty.udt();\n        return this.nativeToUdt(val, udt.name().toString());\n      }\n      if (value === _stellarBase.xdr.ScSpecType.scSpecTypeOption().value) {\n        var opt = ty.option();\n        if (val === undefined) {\n          return _stellarBase.xdr.ScVal.scvVoid();\n        }\n        return this.nativeToScVal(val, opt.valueType());\n      }\n      switch (_typeof(val)) {\n        case \"object\":\n          {\n            var _val$constructor$name, _val$constructor;\n            if (val === null) {\n              switch (value) {\n                case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:\n                  return _stellarBase.xdr.ScVal.scvVoid();\n                default:\n                  throw new TypeError(\"Type \".concat(ty, \" was not void, but value was null\"));\n              }\n            }\n            if (val instanceof _stellarBase.xdr.ScVal) {\n              return val;\n            }\n            if (val instanceof _stellarBase.Address) {\n              if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {\n                throw new TypeError(\"Type \".concat(ty, \" was not address, but value was Address\"));\n              }\n              return val.toScVal();\n            }\n            if (val instanceof _stellarBase.Contract) {\n              if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {\n                throw new TypeError(\"Type \".concat(ty, \" was not address, but value was Address\"));\n              }\n              return val.address().toScVal();\n            }\n            if (val instanceof Uint8Array || Buffer.isBuffer(val)) {\n              var copy = Uint8Array.from(val);\n              switch (value) {\n                case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:\n                  {\n                    var bytesN = ty.bytesN();\n                    if (copy.length !== bytesN.n()) {\n                      throw new TypeError(\"expected \".concat(bytesN.n(), \" bytes, but got \").concat(copy.length));\n                    }\n                    return _stellarBase.xdr.ScVal.scvBytes(copy);\n                  }\n                case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:\n                  return _stellarBase.xdr.ScVal.scvBytes(copy);\n                default:\n                  throw new TypeError(\"invalid type (\".concat(ty, \") specified for Bytes and BytesN\"));\n              }\n            }\n            if (Array.isArray(val)) {\n              switch (value) {\n                case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value:\n                  {\n                    var vec = ty.vec();\n                    var elementType = vec.elementType();\n                    return _stellarBase.xdr.ScVal.scvVec(val.map(function (v) {\n                      return _this2.nativeToScVal(v, elementType);\n                    }));\n                  }\n                case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value:\n                  {\n                    var tup = ty.tuple();\n                    var valTypes = tup.valueTypes();\n                    if (val.length !== valTypes.length) {\n                      throw new TypeError(\"Tuple expects \".concat(valTypes.length, \" values, but \").concat(val.length, \" were provided\"));\n                    }\n                    return _stellarBase.xdr.ScVal.scvVec(val.map(function (v, i) {\n                      return _this2.nativeToScVal(v, valTypes[i]);\n                    }));\n                  }\n                case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value:\n                  {\n                    var map = ty.map();\n                    var keyType = map.keyType();\n                    var valueType = map.valueType();\n                    return _stellarBase.xdr.ScVal.scvMap(val.map(function (entry) {\n                      var key = _this2.nativeToScVal(entry[0], keyType);\n                      var mapVal = _this2.nativeToScVal(entry[1], valueType);\n                      return new _stellarBase.xdr.ScMapEntry({\n                        key: key,\n                        val: mapVal\n                      });\n                    }));\n                  }\n                default:\n                  throw new TypeError(\"Type \".concat(ty, \" was not vec, but value was Array\"));\n              }\n            }\n            if (val.constructor === Map) {\n              if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {\n                throw new TypeError(\"Type \".concat(ty, \" was not map, but value was Map\"));\n              }\n              var scMap = ty.map();\n              var _map = val;\n              var entries = [];\n              var values = _map.entries();\n              var res = values.next();\n              while (!res.done) {\n                var _res$value = _slicedToArray(res.value, 2),\n                  k = _res$value[0],\n                  v = _res$value[1];\n                var key = this.nativeToScVal(k, scMap.keyType());\n                var mapval = this.nativeToScVal(v, scMap.valueType());\n                entries.push(new _stellarBase.xdr.ScMapEntry({\n                  key: key,\n                  val: mapval\n                }));\n                res = values.next();\n              }\n              return _stellarBase.xdr.ScVal.scvMap(entries);\n            }\n            if (((_val$constructor$name = (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) !== null && _val$constructor$name !== void 0 ? _val$constructor$name : \"\") !== \"Object\") {\n              var _val$constructor2;\n              throw new TypeError(\"cannot interpret \".concat((_val$constructor2 = val.constructor) === null || _val$constructor2 === void 0 ? void 0 : _val$constructor2.name, \" value as ScVal (\").concat(JSON.stringify(val), \")\"));\n            }\n            throw new TypeError(\"Received object \".concat(val, \"  did not match the provided type \").concat(ty));\n          }\n        case \"number\":\n        case \"bigint\":\n          {\n            switch (value) {\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:\n                return _stellarBase.xdr.ScVal.scvU32(val);\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:\n                return _stellarBase.xdr.ScVal.scvI32(val);\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:\n                {\n                  var intType = t.name.substring(10).toLowerCase();\n                  return new _stellarBase.XdrLargeInt(intType, val).toScVal();\n                }\n              default:\n                throw new TypeError(\"invalid type (\".concat(ty, \") specified for integer\"));\n            }\n          }\n        case \"string\":\n          return stringToScVal(val, t);\n        case \"boolean\":\n          {\n            if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeBool().value) {\n              throw TypeError(\"Type \".concat(ty, \" was not bool, but value was bool\"));\n            }\n            return _stellarBase.xdr.ScVal.scvBool(val);\n          }\n        case \"undefined\":\n          {\n            if (!ty) {\n              return _stellarBase.xdr.ScVal.scvVoid();\n            }\n            switch (value) {\n              case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:\n                return _stellarBase.xdr.ScVal.scvVoid();\n              default:\n                throw new TypeError(\"Type \".concat(ty, \" was not void, but value was undefined\"));\n            }\n          }\n        case \"function\":\n          return this.nativeToScVal(val(), ty);\n        default:\n          throw new TypeError(\"failed to convert typeof \".concat(_typeof(val), \" (\").concat(val, \")\"));\n      }\n    }\n  }, {\n    key: \"nativeToUdt\",\n    value: function nativeToUdt(val, name) {\n      var entry = this.findEntry(name);\n      switch (entry.switch()) {\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():\n          if (typeof val !== \"number\") {\n            throw new TypeError(\"expected number for enum \".concat(name, \", but got \").concat(_typeof(val)));\n          }\n          return this.nativeToEnum(val, entry.udtEnumV0());\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():\n          return this.nativeToStruct(val, entry.udtStructV0());\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():\n          return this.nativeToUnion(val, entry.udtUnionV0());\n        default:\n          throw new Error(\"failed to parse udt \".concat(name));\n      }\n    }\n  }, {\n    key: \"nativeToUnion\",\n    value: function nativeToUnion(val, union_) {\n      var _this3 = this;\n      var entryName = val.tag;\n      var caseFound = union_.cases().find(function (entry) {\n        var caseN = entry.value().name().toString();\n        return caseN === entryName;\n      });\n      if (!caseFound) {\n        throw new TypeError(\"no such enum entry: \".concat(entryName, \" in \").concat(union_));\n      }\n      var key = _stellarBase.xdr.ScVal.scvSymbol(entryName);\n      switch (caseFound.switch()) {\n        case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():\n          {\n            return _stellarBase.xdr.ScVal.scvVec([key]);\n          }\n        case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0():\n          {\n            var types = caseFound.tupleCase().type();\n            if (Array.isArray(val.values)) {\n              if (val.values.length !== types.length) {\n                throw new TypeError(\"union \".concat(union_, \" expects \").concat(types.length, \" values, but got \").concat(val.values.length));\n              }\n              var scvals = val.values.map(function (v, i) {\n                return _this3.nativeToScVal(v, types[i]);\n              });\n              scvals.unshift(key);\n              return _stellarBase.xdr.ScVal.scvVec(scvals);\n            }\n            throw new Error(\"failed to parse union case \".concat(caseFound, \" with \").concat(val));\n          }\n        default:\n          throw new Error(\"failed to parse union \".concat(union_, \" with \").concat(val));\n      }\n    }\n  }, {\n    key: \"nativeToStruct\",\n    value: function nativeToStruct(val, struct) {\n      var _this4 = this;\n      var fields = struct.fields();\n      if (fields.some(isNumeric)) {\n        if (!fields.every(isNumeric)) {\n          throw new Error(\"mixed numeric and non-numeric field names are not allowed\");\n        }\n        return _stellarBase.xdr.ScVal.scvVec(fields.map(function (_, i) {\n          return _this4.nativeToScVal(val[i], fields[i].type());\n        }));\n      }\n      return _stellarBase.xdr.ScVal.scvMap(fields.map(function (field) {\n        var name = field.name().toString();\n        return new _stellarBase.xdr.ScMapEntry({\n          key: _this4.nativeToScVal(name, _stellarBase.xdr.ScSpecTypeDef.scSpecTypeSymbol()),\n          val: _this4.nativeToScVal(val[name], field.type())\n        });\n      }));\n    }\n  }, {\n    key: \"nativeToEnum\",\n    value: function nativeToEnum(val, enum_) {\n      if (enum_.cases().some(function (entry) {\n        return entry.value() === val;\n      })) {\n        return _stellarBase.xdr.ScVal.scvU32(val);\n      }\n      throw new TypeError(\"no such enum entry: \".concat(val, \" in \").concat(enum_));\n    }\n  }, {\n    key: \"scValStrToNative\",\n    value: function scValStrToNative(scv, typeDef) {\n      return this.scValToNative(_stellarBase.xdr.ScVal.fromXDR(scv, \"base64\"), typeDef);\n    }\n  }, {\n    key: \"scValToNative\",\n    value: function scValToNative(scv, typeDef) {\n      var _this5 = this;\n      var t = typeDef.switch();\n      var value = t.value;\n      if (value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {\n        return this.scValUdtToNative(scv, typeDef.udt());\n      }\n      switch (scv.switch().value) {\n        case _stellarBase.xdr.ScValType.scvVoid().value:\n          return undefined;\n        case _stellarBase.xdr.ScValType.scvU64().value:\n        case _stellarBase.xdr.ScValType.scvI64().value:\n        case _stellarBase.xdr.ScValType.scvU128().value:\n        case _stellarBase.xdr.ScValType.scvI128().value:\n        case _stellarBase.xdr.ScValType.scvU256().value:\n        case _stellarBase.xdr.ScValType.scvI256().value:\n          return (0, _stellarBase.scValToBigInt)(scv);\n        case _stellarBase.xdr.ScValType.scvVec().value:\n          {\n            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeVec().value) {\n              var _scv$vec;\n              var vec = typeDef.vec();\n              return ((_scv$vec = scv.vec()) !== null && _scv$vec !== void 0 ? _scv$vec : []).map(function (elm) {\n                return _this5.scValToNative(elm, vec.elementType());\n              });\n            }\n            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value) {\n              var _scv$vec2;\n              var tuple = typeDef.tuple();\n              var valTypes = tuple.valueTypes();\n              return ((_scv$vec2 = scv.vec()) !== null && _scv$vec2 !== void 0 ? _scv$vec2 : []).map(function (elm, i) {\n                return _this5.scValToNative(elm, valTypes[i]);\n              });\n            }\n            throw new TypeError(\"Type \".concat(typeDef, \" was not vec, but \").concat(scv, \" is\"));\n          }\n        case _stellarBase.xdr.ScValType.scvAddress().value:\n          return _stellarBase.Address.fromScVal(scv).toString();\n        case _stellarBase.xdr.ScValType.scvMap().value:\n          {\n            var _scv$map;\n            var map = (_scv$map = scv.map()) !== null && _scv$map !== void 0 ? _scv$map : [];\n            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {\n              var typed = typeDef.map();\n              var keyType = typed.keyType();\n              var valueType = typed.valueType();\n              var res = map.map(function (entry) {\n                return [_this5.scValToNative(entry.key(), keyType), _this5.scValToNative(entry.val(), valueType)];\n              });\n              return res;\n            }\n            throw new TypeError(\"ScSpecType \".concat(t.name, \" was not map, but \").concat(JSON.stringify(scv, null, 2), \" is\"));\n          }\n        case _stellarBase.xdr.ScValType.scvBool().value:\n        case _stellarBase.xdr.ScValType.scvU32().value:\n        case _stellarBase.xdr.ScValType.scvI32().value:\n        case _stellarBase.xdr.ScValType.scvBytes().value:\n          return scv.value();\n        case _stellarBase.xdr.ScValType.scvString().value:\n        case _stellarBase.xdr.ScValType.scvSymbol().value:\n          {\n            var _scv$value;\n            if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeString().value && value !== _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value) {\n              throw new Error(\"ScSpecType \".concat(t.name, \" was not string or symbol, but \").concat(JSON.stringify(scv, null, 2), \" is\"));\n            }\n            return (_scv$value = scv.value()) === null || _scv$value === void 0 ? void 0 : _scv$value.toString();\n          }\n        case _stellarBase.xdr.ScValType.scvTimepoint().value:\n        case _stellarBase.xdr.ScValType.scvDuration().value:\n          return (0, _stellarBase.scValToBigInt)(_stellarBase.xdr.ScVal.scvU64(scv.u64()));\n        default:\n          throw new TypeError(\"failed to convert \".concat(JSON.stringify(scv, null, 2), \" to native type from type \").concat(t.name));\n      }\n    }\n  }, {\n    key: \"scValUdtToNative\",\n    value: function scValUdtToNative(scv, udt) {\n      var entry = this.findEntry(udt.name().toString());\n      switch (entry.switch()) {\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():\n          return this.enumToNative(scv);\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():\n          return this.structToNative(scv, entry.udtStructV0());\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():\n          return this.unionToNative(scv, entry.udtUnionV0());\n        default:\n          throw new Error(\"failed to parse udt \".concat(udt.name().toString(), \": \").concat(entry));\n      }\n    }\n  }, {\n    key: \"unionToNative\",\n    value: function unionToNative(val, udt) {\n      var _this6 = this;\n      var vec = val.vec();\n      if (!vec) {\n        throw new Error(\"\".concat(JSON.stringify(val, null, 2), \" is not a vec\"));\n      }\n      if (vec.length === 0 && udt.cases.length !== 0) {\n        throw new Error(\"\".concat(val, \" has length 0, but the there are at least one case in the union\"));\n      }\n      var name = vec[0].sym().toString();\n      if (vec[0].switch().value !== _stellarBase.xdr.ScValType.scvSymbol().value) {\n        throw new Error(\"{vec[0]} is not a symbol\");\n      }\n      var entry = udt.cases().find(findCase(name));\n      if (!entry) {\n        throw new Error(\"failed to find entry \".concat(name, \" in union {udt.name().toString()}\"));\n      }\n      var res = {\n        tag: name\n      };\n      if (entry.switch().value === _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {\n        var tuple = entry.tupleCase();\n        var ty = tuple.type();\n        var values = ty.map(function (e, i) {\n          return _this6.scValToNative(vec[i + 1], e);\n        });\n        res.values = values;\n      }\n      return res;\n    }\n  }, {\n    key: \"structToNative\",\n    value: function structToNative(val, udt) {\n      var _this7 = this,\n        _val$map;\n      var res = {};\n      var fields = udt.fields();\n      if (fields.some(isNumeric)) {\n        var _val$vec;\n        var r = (_val$vec = val.vec()) === null || _val$vec === void 0 ? void 0 : _val$vec.map(function (entry, i) {\n          return _this7.scValToNative(entry, fields[i].type());\n        });\n        return r;\n      }\n      (_val$map = val.map()) === null || _val$map === void 0 || _val$map.forEach(function (entry, i) {\n        var field = fields[i];\n        res[field.name().toString()] = _this7.scValToNative(entry.val(), field.type());\n      });\n      return res;\n    }\n  }, {\n    key: \"enumToNative\",\n    value: function enumToNative(scv) {\n      if (scv.switch().value !== _stellarBase.xdr.ScValType.scvU32().value) {\n        throw new Error(\"Enum must have a u32 value\");\n      }\n      var num = scv.u32();\n      return num;\n    }\n  }, {\n    key: \"errorCases\",\n    value: function errorCases() {\n      return this.entries.filter(function (entry) {\n        return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;\n      }).flatMap(function (entry) {\n        return entry.value().cases();\n      });\n    }\n  }, {\n    key: \"jsonSchema\",\n    value: function jsonSchema(funcName) {\n      var definitions = {};\n      this.entries.forEach(function (entry) {\n        switch (entry.switch().value) {\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value:\n            {\n              var udt = entry.udtEnumV0();\n              definitions[udt.name().toString()] = enumToJsonSchema(udt);\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value:\n            {\n              var _udt = entry.udtStructV0();\n              definitions[_udt.name().toString()] = structToJsonSchema(_udt);\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:\n            {\n              var _udt2 = entry.udtUnionV0();\n              definitions[_udt2.name().toString()] = unionToJsonSchema(_udt2);\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value:\n            {\n              var fn = entry.functionV0();\n              var fnName = fn.name().toString();\n              var _functionToJsonSchema = functionToJsonSchema(fn),\n                input = _functionToJsonSchema.input;\n              definitions[fnName] = input;\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:\n            {}\n        }\n      });\n      var res = {\n        $schema: \"http://json-schema.org/draft-07/schema#\",\n        definitions: _objectSpread(_objectSpread({}, PRIMITIVE_DEFINITONS), definitions)\n      };\n      if (funcName) {\n        res.$ref = \"#/definitions/\".concat(funcName);\n      }\n      return res;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/types.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/types.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NULL_ACCOUNT = exports.DEFAULT_TIMEOUT = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar DEFAULT_TIMEOUT = exports.DEFAULT_TIMEOUT = 5 * 60;\nvar NULL_ACCOUNT = exports.NULL_ACCOUNT = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLG9CQUFvQixHQUFHLHVCQUF1QjtBQUM5QyxtQkFBbUIsbUJBQU8sQ0FBQyxzRkFBdUI7QUFDbEQsc0JBQXNCLHVCQUF1QjtBQUM3QyxtQkFBbUIsb0JBQW9CIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvY29udHJhY3QvdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLk5VTExfQUNDT1VOVCA9IGV4cG9ydHMuREVGQVVMVF9USU1FT1VUID0gdm9pZCAwO1xudmFyIF9zdGVsbGFyQmFzZSA9IHJlcXVpcmUoXCJAc3RlbGxhci9zdGVsbGFyLWJhc2VcIik7XG52YXIgREVGQVVMVF9USU1FT1VUID0gZXhwb3J0cy5ERUZBVUxUX1RJTUVPVVQgPSA1ICogNjA7XG52YXIgTlVMTF9BQ0NPVU5UID0gZXhwb3J0cy5OVUxMX0FDQ09VTlQgPSBcIkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBV0hGXCI7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.contractErrorPattern = void 0;\nexports.getAccount = getAccount;\nexports.implementsToString = implementsToString;\nexports.processSpecEntryStream = processSpecEntryStream;\nexports.withExponentialBackoff = withExponentialBackoff;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction withExponentialBackoff(_x, _x2, _x3) {\n  return _withExponentialBackoff.apply(this, arguments);\n}\nfunction _withExponentialBackoff() {\n  _withExponentialBackoff = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(fn, keepWaitingIf, timeoutInSeconds) {\n    var exponentialFactor,\n      verbose,\n      attempts,\n      count,\n      waitUntil,\n      waitTime,\n      totalWaitTime,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          exponentialFactor = _args.length > 3 && _args[3] !== undefined ? _args[3] : 1.5;\n          verbose = _args.length > 4 && _args[4] !== undefined ? _args[4] : false;\n          attempts = [];\n          count = 0;\n          _context.t0 = attempts;\n          _context.next = 7;\n          return fn();\n        case 7:\n          _context.t1 = _context.sent;\n          _context.t0.push.call(_context.t0, _context.t1);\n          if (keepWaitingIf(attempts[attempts.length - 1])) {\n            _context.next = 11;\n            break;\n          }\n          return _context.abrupt(\"return\", attempts);\n        case 11:\n          waitUntil = new Date(Date.now() + timeoutInSeconds * 1000).valueOf();\n          waitTime = 1000;\n          totalWaitTime = waitTime;\n        case 14:\n          if (!(Date.now() < waitUntil && keepWaitingIf(attempts[attempts.length - 1]))) {\n            _context.next = 30;\n            break;\n          }\n          count += 1;\n          if (verbose) {\n            console.info(\"Waiting \".concat(waitTime, \"ms before trying again (bringing the total wait time to \").concat(totalWaitTime, \"ms so far, of total \").concat(timeoutInSeconds * 1000, \"ms)\"));\n          }\n          _context.next = 19;\n          return new Promise(function (res) {\n            return setTimeout(res, waitTime);\n          });\n        case 19:\n          waitTime *= exponentialFactor;\n          if (new Date(Date.now() + waitTime).valueOf() > waitUntil) {\n            waitTime = waitUntil - Date.now();\n            if (verbose) {\n              console.info(\"was gonna wait too long; new waitTime: \".concat(waitTime, \"ms\"));\n            }\n          }\n          totalWaitTime = waitTime + totalWaitTime;\n          _context.t2 = attempts;\n          _context.next = 25;\n          return fn(attempts[attempts.length - 1]);\n        case 25:\n          _context.t3 = _context.sent;\n          _context.t2.push.call(_context.t2, _context.t3);\n          if (verbose && keepWaitingIf(attempts[attempts.length - 1])) {\n            console.info(\"\".concat(count, \". Called \").concat(fn, \"; \").concat(attempts.length, \" prev attempts. Most recent: \").concat(JSON.stringify(attempts[attempts.length - 1], null, 2)));\n          }\n          _context.next = 14;\n          break;\n        case 30:\n          return _context.abrupt(\"return\", attempts);\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _withExponentialBackoff.apply(this, arguments);\n}\nvar contractErrorPattern = exports.contractErrorPattern = /Error\\(Contract, #(\\d+)\\)/;\nfunction implementsToString(obj) {\n  return _typeof(obj) === \"object\" && obj !== null && \"toString\" in obj;\n}\nfunction processSpecEntryStream(buffer) {\n  var reader = new _stellarBase.cereal.XdrReader(buffer);\n  var res = [];\n  while (!reader.eof) {\n    res.push(_stellarBase.xdr.ScSpecEntry.read(reader));\n  }\n  return res;\n}\nfunction getAccount(_x4, _x5) {\n  return _getAccount.apply(this, arguments);\n}\nfunction _getAccount() {\n  _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(options, server) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", options.publicKey ? server.getAccount(options.publicKey) : new _stellarBase.Account(_types.NULL_ACCOUNT, \"0\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getAccount.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/errors/account_requires_memo.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/errors/account_requires_memo.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AccountRequiresMemoError = void 0;\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nvar AccountRequiresMemoError = exports.AccountRequiresMemoError = function (_Error) {\n  function AccountRequiresMemoError(message, accountId, operationIndex) {\n    var _this;\n    _classCallCheck(this, AccountRequiresMemoError);\n    var trueProto = (this instanceof AccountRequiresMemoError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, AccountRequiresMemoError, [message]);\n    _this.__proto__ = trueProto;\n    _this.constructor = AccountRequiresMemoError;\n    _this.name = \"AccountRequiresMemoError\";\n    _this.accountId = accountId;\n    _this.operationIndex = operationIndex;\n    return _this;\n  }\n  _inherits(AccountRequiresMemoError, _Error);\n  return _createClass(AccountRequiresMemoError);\n}(_wrapNativeSuper(Error));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2Vycm9ycy9hY2NvdW50X3JlcXVpcmVzX21lbW8uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsZ0NBQWdDO0FBQ2hDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLGlDQUFpQztBQUNqQywrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSwyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCwrQkFBK0IsdURBQXVELHlEQUF5RCxtREFBbUQsdUdBQXVHLG9CQUFvQiwrQkFBK0IscUJBQXFCLHFCQUFxQixzRUFBc0Usd0RBQXdELGVBQWUsa0VBQWtFLGlDQUFpQztBQUN0bkIsK0JBQStCLGtGQUFrRixnQkFBZ0Isb0JBQW9CLG9DQUFvQztBQUN6TCx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLGdDQUFnQyxNQUFNLG9FQUFvRSxZQUFZO0FBQ3RILGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLCtCQUErQixnQ0FBZ0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9lcnJvcnMvYWNjb3VudF9yZXF1aXJlc19tZW1vLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5BY2NvdW50UmVxdWlyZXNNZW1vRXJyb3IgPSB2b2lkIDA7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcih0KSB7IHZhciByID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBNYXAgPyBuZXcgTWFwKCkgOiB2b2lkIDA7IHJldHVybiBfd3JhcE5hdGl2ZVN1cGVyID0gZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcih0KSB7IGlmIChudWxsID09PSB0IHx8ICFfaXNOYXRpdmVGdW5jdGlvbih0KSkgcmV0dXJuIHQ7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIHQpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgaWYgKHZvaWQgMCAhPT0gcikgeyBpZiAoci5oYXModCkpIHJldHVybiByLmdldCh0KTsgci5zZXQodCwgV3JhcHBlcik7IH0gZnVuY3Rpb24gV3JhcHBlcigpIHsgcmV0dXJuIF9jb25zdHJ1Y3QodCwgYXJndW1lbnRzLCBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3IpOyB9IHJldHVybiBXcmFwcGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IFdyYXBwZXIsIGVudW1lcmFibGU6ICExLCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgX3NldFByb3RvdHlwZU9mKFdyYXBwZXIsIHQpOyB9LCBfd3JhcE5hdGl2ZVN1cGVyKHQpOyB9XG5mdW5jdGlvbiBfY29uc3RydWN0KHQsIGUsIHIpIHsgaWYgKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkgcmV0dXJuIFJlZmxlY3QuY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7IHZhciBvID0gW251bGxdOyBvLnB1c2guYXBwbHkobywgZSk7IHZhciBwID0gbmV3ICh0LmJpbmQuYXBwbHkodCwgbykpKCk7IHJldHVybiByICYmIF9zZXRQcm90b3R5cGVPZihwLCByLnByb3RvdHlwZSksIHA7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlRnVuY3Rpb24odCkgeyB0cnkgeyByZXR1cm4gLTEgIT09IEZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwodCkuaW5kZXhPZihcIltuYXRpdmUgY29kZV1cIik7IH0gY2F0Y2ggKG4pIHsgcmV0dXJuIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgdDsgfSB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbnZhciBBY2NvdW50UmVxdWlyZXNNZW1vRXJyb3IgPSBleHBvcnRzLkFjY291bnRSZXF1aXJlc01lbW9FcnJvciA9IGZ1bmN0aW9uIChfRXJyb3IpIHtcbiAgZnVuY3Rpb24gQWNjb3VudFJlcXVpcmVzTWVtb0Vycm9yKG1lc3NhZ2UsIGFjY291bnRJZCwgb3BlcmF0aW9uSW5kZXgpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFjY291bnRSZXF1aXJlc01lbW9FcnJvcik7XG4gICAgdmFyIHRydWVQcm90byA9ICh0aGlzIGluc3RhbmNlb2YgQWNjb3VudFJlcXVpcmVzTWVtb0Vycm9yID8gdGhpcy5jb25zdHJ1Y3RvciA6IHZvaWQgMCkucHJvdG90eXBlO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBBY2NvdW50UmVxdWlyZXNNZW1vRXJyb3IsIFttZXNzYWdlXSk7XG4gICAgX3RoaXMuX19wcm90b19fID0gdHJ1ZVByb3RvO1xuICAgIF90aGlzLmNvbnN0cnVjdG9yID0gQWNjb3VudFJlcXVpcmVzTWVtb0Vycm9yO1xuICAgIF90aGlzLm5hbWUgPSBcIkFjY291bnRSZXF1aXJlc01lbW9FcnJvclwiO1xuICAgIF90aGlzLmFjY291bnRJZCA9IGFjY291bnRJZDtcbiAgICBfdGhpcy5vcGVyYXRpb25JbmRleCA9IG9wZXJhdGlvbkluZGV4O1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoQWNjb3VudFJlcXVpcmVzTWVtb0Vycm9yLCBfRXJyb3IpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEFjY291bnRSZXF1aXJlc01lbW9FcnJvcik7XG59KF93cmFwTmF0aXZlU3VwZXIoRXJyb3IpKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/errors/account_requires_memo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/errors/bad_request.js":
/*!************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/errors/bad_request.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BadRequestError = void 0;\nvar _network = __webpack_require__(/*! ./network */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/network.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar BadRequestError = exports.BadRequestError = function (_NetworkError) {\n  function BadRequestError(message, response) {\n    var _this;\n    _classCallCheck(this, BadRequestError);\n    var trueProto = (this instanceof BadRequestError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, BadRequestError, [message, response]);\n    _this.__proto__ = trueProto;\n    _this.constructor = BadRequestError;\n    _this.name = \"BadRequestError\";\n    return _this;\n  }\n  _inherits(BadRequestError, _NetworkError);\n  return _createClass(BadRequestError);\n}(_network.NetworkError);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2Vycm9ycy9iYWRfcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix1QkFBdUI7QUFDdkIsZUFBZSxtQkFBTyxDQUFDLHlFQUFXO0FBQ2xDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLGlDQUFpQztBQUNqQywrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHNCQUFzQix1QkFBdUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2Vycm9ycy9iYWRfcmVxdWVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQmFkUmVxdWVzdEVycm9yID0gdm9pZCAwO1xudmFyIF9uZXR3b3JrID0gcmVxdWlyZShcIi4vbmV0d29ya1wiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIEJhZFJlcXVlc3RFcnJvciA9IGV4cG9ydHMuQmFkUmVxdWVzdEVycm9yID0gZnVuY3Rpb24gKF9OZXR3b3JrRXJyb3IpIHtcbiAgZnVuY3Rpb24gQmFkUmVxdWVzdEVycm9yKG1lc3NhZ2UsIHJlc3BvbnNlKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCYWRSZXF1ZXN0RXJyb3IpO1xuICAgIHZhciB0cnVlUHJvdG8gPSAodGhpcyBpbnN0YW5jZW9mIEJhZFJlcXVlc3RFcnJvciA/IHRoaXMuY29uc3RydWN0b3IgOiB2b2lkIDApLnByb3RvdHlwZTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgQmFkUmVxdWVzdEVycm9yLCBbbWVzc2FnZSwgcmVzcG9uc2VdKTtcbiAgICBfdGhpcy5fX3Byb3RvX18gPSB0cnVlUHJvdG87XG4gICAgX3RoaXMuY29uc3RydWN0b3IgPSBCYWRSZXF1ZXN0RXJyb3I7XG4gICAgX3RoaXMubmFtZSA9IFwiQmFkUmVxdWVzdEVycm9yXCI7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhCYWRSZXF1ZXN0RXJyb3IsIF9OZXR3b3JrRXJyb3IpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEJhZFJlcXVlc3RFcnJvcik7XG59KF9uZXR3b3JrLk5ldHdvcmtFcnJvcik7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/errors/bad_request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/errors/bad_response.js":
/*!*************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/errors/bad_response.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BadResponseError = void 0;\nvar _network = __webpack_require__(/*! ./network */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/network.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar BadResponseError = exports.BadResponseError = function (_NetworkError) {\n  function BadResponseError(message, response) {\n    var _this;\n    _classCallCheck(this, BadResponseError);\n    var trueProto = (this instanceof BadResponseError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, BadResponseError, [message, response]);\n    _this.__proto__ = trueProto;\n    _this.constructor = BadResponseError;\n    _this.name = \"BadResponseError\";\n    return _this;\n  }\n  _inherits(BadResponseError, _NetworkError);\n  return _createClass(BadResponseError);\n}(_network.NetworkError);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2Vycm9ycy9iYWRfcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysd0JBQXdCO0FBQ3hCLGVBQWUsbUJBQU8sQ0FBQyx5RUFBVztBQUNsQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSix1QkFBdUIsd0JBQXdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9lcnJvcnMvYmFkX3Jlc3BvbnNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5CYWRSZXNwb25zZUVycm9yID0gdm9pZCAwO1xudmFyIF9uZXR3b3JrID0gcmVxdWlyZShcIi4vbmV0d29ya1wiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIEJhZFJlc3BvbnNlRXJyb3IgPSBleHBvcnRzLkJhZFJlc3BvbnNlRXJyb3IgPSBmdW5jdGlvbiAoX05ldHdvcmtFcnJvcikge1xuICBmdW5jdGlvbiBCYWRSZXNwb25zZUVycm9yKG1lc3NhZ2UsIHJlc3BvbnNlKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCYWRSZXNwb25zZUVycm9yKTtcbiAgICB2YXIgdHJ1ZVByb3RvID0gKHRoaXMgaW5zdGFuY2VvZiBCYWRSZXNwb25zZUVycm9yID8gdGhpcy5jb25zdHJ1Y3RvciA6IHZvaWQgMCkucHJvdG90eXBlO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBCYWRSZXNwb25zZUVycm9yLCBbbWVzc2FnZSwgcmVzcG9uc2VdKTtcbiAgICBfdGhpcy5fX3Byb3RvX18gPSB0cnVlUHJvdG87XG4gICAgX3RoaXMuY29uc3RydWN0b3IgPSBCYWRSZXNwb25zZUVycm9yO1xuICAgIF90aGlzLm5hbWUgPSBcIkJhZFJlc3BvbnNlRXJyb3JcIjtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKEJhZFJlc3BvbnNlRXJyb3IsIF9OZXR3b3JrRXJyb3IpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEJhZFJlc3BvbnNlRXJyb3IpO1xufShfbmV0d29yay5OZXR3b3JrRXJyb3IpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/errors/bad_response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/errors/index.js":
/*!******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/errors/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _network = __webpack_require__(/*! ./network */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/network.js\");\nObject.keys(_network).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _network[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _network[key];\n    }\n  });\n});\nvar _not_found = __webpack_require__(/*! ./not_found */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/not_found.js\");\nObject.keys(_not_found).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _not_found[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _not_found[key];\n    }\n  });\n});\nvar _bad_request = __webpack_require__(/*! ./bad_request */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/bad_request.js\");\nObject.keys(_bad_request).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _bad_request[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _bad_request[key];\n    }\n  });\n});\nvar _bad_response = __webpack_require__(/*! ./bad_response */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/bad_response.js\");\nObject.keys(_bad_response).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _bad_response[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _bad_response[key];\n    }\n  });\n});\nvar _account_requires_memo = __webpack_require__(/*! ./account_requires_memo */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/account_requires_memo.js\");\nObject.keys(_account_requires_memo).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _account_requires_memo[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _account_requires_memo[key];\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2Vycm9ycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixlQUFlLG1CQUFPLENBQUMseUVBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsaUJBQWlCLG1CQUFPLENBQUMsNkVBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsbUJBQW1CLG1CQUFPLENBQUMsaUZBQWU7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Qsb0JBQW9CLG1CQUFPLENBQUMsbUZBQWdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELDZCQUE2QixtQkFBTyxDQUFDLHFHQUF5QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9lcnJvcnMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX25ldHdvcmsgPSByZXF1aXJlKFwiLi9uZXR3b3JrXCIpO1xuT2JqZWN0LmtleXMoX25ldHdvcmspLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9uZXR3b3JrW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX25ldHdvcmtba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgX25vdF9mb3VuZCA9IHJlcXVpcmUoXCIuL25vdF9mb3VuZFwiKTtcbk9iamVjdC5rZXlzKF9ub3RfZm91bmQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9ub3RfZm91bmRba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfbm90X2ZvdW5kW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF9iYWRfcmVxdWVzdCA9IHJlcXVpcmUoXCIuL2JhZF9yZXF1ZXN0XCIpO1xuT2JqZWN0LmtleXMoX2JhZF9yZXF1ZXN0KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfYmFkX3JlcXVlc3Rba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfYmFkX3JlcXVlc3Rba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgX2JhZF9yZXNwb25zZSA9IHJlcXVpcmUoXCIuL2JhZF9yZXNwb25zZVwiKTtcbk9iamVjdC5rZXlzKF9iYWRfcmVzcG9uc2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9iYWRfcmVzcG9uc2Vba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfYmFkX3Jlc3BvbnNlW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF9hY2NvdW50X3JlcXVpcmVzX21lbW8gPSByZXF1aXJlKFwiLi9hY2NvdW50X3JlcXVpcmVzX21lbW9cIik7XG5PYmplY3Qua2V5cyhfYWNjb3VudF9yZXF1aXJlc19tZW1vKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfYWNjb3VudF9yZXF1aXJlc19tZW1vW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX2FjY291bnRfcmVxdWlyZXNfbWVtb1trZXldO1xuICAgIH1cbiAgfSk7XG59KTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/errors/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/errors/network.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/errors/network.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NetworkError = void 0;\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nvar NetworkError = exports.NetworkError = function (_Error) {\n  function NetworkError(message, response) {\n    var _this;\n    _classCallCheck(this, NetworkError);\n    var trueProto = (this instanceof NetworkError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, NetworkError, [message]);\n    _this.__proto__ = trueProto;\n    _this.constructor = NetworkError;\n    _this.response = response;\n    return _this;\n  }\n  _inherits(NetworkError, _Error);\n  return _createClass(NetworkError, [{\n    key: \"getResponse\",\n    value: function getResponse() {\n      return this.response;\n    }\n  }]);\n}(_wrapNativeSuper(Error));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2Vycm9ycy9uZXR3b3JrLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLG9CQUFvQjtBQUNwQixpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksMkJBQTJCLHFIQUFxSCxnREFBZ0QsZUFBZSw0Q0FBNEMsMkNBQTJDLGNBQWM7QUFDcFQsK0JBQStCLHVEQUF1RCx5REFBeUQsbURBQW1ELHVHQUF1RyxvQkFBb0IsK0JBQStCLHFCQUFxQixxQkFBcUIsc0VBQXNFLHdEQUF3RCxlQUFlLGtFQUFrRSxpQ0FBaUM7QUFDdG5CLCtCQUErQixrRkFBa0YsZ0JBQWdCLG9CQUFvQixvQ0FBb0M7QUFDekwsdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3TyxnQ0FBZ0MsTUFBTSxvRUFBb0UsWUFBWTtBQUN0SCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSiw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SyxtQkFBbUIsb0JBQW9CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9lcnJvcnMvbmV0d29yay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuTmV0d29ya0Vycm9yID0gdm9pZCAwO1xuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIodCkgeyB2YXIgciA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgTWFwID8gbmV3IE1hcCgpIDogdm9pZCAwOyByZXR1cm4gX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIodCkgeyBpZiAobnVsbCA9PT0gdCB8fCAhX2lzTmF0aXZlRnVuY3Rpb24odCkpIHJldHVybiB0OyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiB0KSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IGlmICh2b2lkIDAgIT09IHIpIHsgaWYgKHIuaGFzKHQpKSByZXR1cm4gci5nZXQodCk7IHIuc2V0KHQsIFdyYXBwZXIpOyB9IGZ1bmN0aW9uIFdyYXBwZXIoKSB7IHJldHVybiBfY29uc3RydWN0KHQsIGFyZ3VtZW50cywgX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTsgfSByZXR1cm4gV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHQucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBXcmFwcGVyLCBlbnVtZXJhYmxlOiAhMSwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIF9zZXRQcm90b3R5cGVPZihXcmFwcGVyLCB0KTsgfSwgX3dyYXBOYXRpdmVTdXBlcih0KTsgfVxuZnVuY3Rpb24gX2NvbnN0cnVjdCh0LCBlLCByKSB7IGlmIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHJldHVybiBSZWZsZWN0LmNvbnN0cnVjdC5hcHBseShudWxsLCBhcmd1bWVudHMpOyB2YXIgbyA9IFtudWxsXTsgby5wdXNoLmFwcGx5KG8sIGUpOyB2YXIgcCA9IG5ldyAodC5iaW5kLmFwcGx5KHQsIG8pKSgpOyByZXR1cm4gciAmJiBfc2V0UHJvdG90eXBlT2YocCwgci5wcm90b3R5cGUpLCBwOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKHQpIHsgdHJ5IHsgcmV0dXJuIC0xICE9PSBGdW5jdGlvbi50b1N0cmluZy5jYWxsKHQpLmluZGV4T2YoXCJbbmF0aXZlIGNvZGVdXCIpOyB9IGNhdGNoIChuKSB7IHJldHVybiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIHQ7IH0gfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG52YXIgTmV0d29ya0Vycm9yID0gZXhwb3J0cy5OZXR3b3JrRXJyb3IgPSBmdW5jdGlvbiAoX0Vycm9yKSB7XG4gIGZ1bmN0aW9uIE5ldHdvcmtFcnJvcihtZXNzYWdlLCByZXNwb25zZSkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTmV0d29ya0Vycm9yKTtcbiAgICB2YXIgdHJ1ZVByb3RvID0gKHRoaXMgaW5zdGFuY2VvZiBOZXR3b3JrRXJyb3IgPyB0aGlzLmNvbnN0cnVjdG9yIDogdm9pZCAwKS5wcm90b3R5cGU7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIE5ldHdvcmtFcnJvciwgW21lc3NhZ2VdKTtcbiAgICBfdGhpcy5fX3Byb3RvX18gPSB0cnVlUHJvdG87XG4gICAgX3RoaXMuY29uc3RydWN0b3IgPSBOZXR3b3JrRXJyb3I7XG4gICAgX3RoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKE5ldHdvcmtFcnJvciwgX0Vycm9yKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhOZXR3b3JrRXJyb3IsIFt7XG4gICAga2V5OiBcImdldFJlc3BvbnNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlc3BvbnNlKCkge1xuICAgICAgcmV0dXJuIHRoaXMucmVzcG9uc2U7XG4gICAgfVxuICB9XSk7XG59KF93cmFwTmF0aXZlU3VwZXIoRXJyb3IpKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/errors/network.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/errors/not_found.js":
/*!**********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/errors/not_found.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NotFoundError = void 0;\nvar _network = __webpack_require__(/*! ./network */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/network.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar NotFoundError = exports.NotFoundError = function (_NetworkError) {\n  function NotFoundError(message, response) {\n    var _this;\n    _classCallCheck(this, NotFoundError);\n    var trueProto = (this instanceof NotFoundError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, NotFoundError, [message, response]);\n    _this.__proto__ = trueProto;\n    _this.constructor = NotFoundError;\n    _this.name = \"NotFoundError\";\n    return _this;\n  }\n  _inherits(NotFoundError, _NetworkError);\n  return _createClass(NotFoundError);\n}(_network.NetworkError);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2Vycm9ycy9ub3RfZm91bmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YscUJBQXFCO0FBQ3JCLGVBQWUsbUJBQU8sQ0FBQyx5RUFBVztBQUNsQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSixvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9lcnJvcnMvbm90X2ZvdW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5Ob3RGb3VuZEVycm9yID0gdm9pZCAwO1xudmFyIF9uZXR3b3JrID0gcmVxdWlyZShcIi4vbmV0d29ya1wiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIE5vdEZvdW5kRXJyb3IgPSBleHBvcnRzLk5vdEZvdW5kRXJyb3IgPSBmdW5jdGlvbiAoX05ldHdvcmtFcnJvcikge1xuICBmdW5jdGlvbiBOb3RGb3VuZEVycm9yKG1lc3NhZ2UsIHJlc3BvbnNlKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBOb3RGb3VuZEVycm9yKTtcbiAgICB2YXIgdHJ1ZVByb3RvID0gKHRoaXMgaW5zdGFuY2VvZiBOb3RGb3VuZEVycm9yID8gdGhpcy5jb25zdHJ1Y3RvciA6IHZvaWQgMCkucHJvdG90eXBlO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBOb3RGb3VuZEVycm9yLCBbbWVzc2FnZSwgcmVzcG9uc2VdKTtcbiAgICBfdGhpcy5fX3Byb3RvX18gPSB0cnVlUHJvdG87XG4gICAgX3RoaXMuY29uc3RydWN0b3IgPSBOb3RGb3VuZEVycm9yO1xuICAgIF90aGlzLm5hbWUgPSBcIk5vdEZvdW5kRXJyb3JcIjtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKE5vdEZvdW5kRXJyb3IsIF9OZXR3b3JrRXJyb3IpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKE5vdEZvdW5kRXJyb3IpO1xufShfbmV0d29yay5OZXR3b3JrRXJyb3IpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/errors/not_found.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/federation/api.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/federation/api.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nvar Api;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZlZGVyYXRpb24vYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLFdBQVc7QUFDWCIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZlZGVyYXRpb24vYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5BcGkgPSB2b2lkIDA7XG52YXIgQXBpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/federation/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/federation/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/federation/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Server: true,\n  FEDERATION_RESPONSE_MAX_SIZE: true\n};\nObject.defineProperty(exports, \"FEDERATION_RESPONSE_MAX_SIZE\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.FEDERATION_RESPONSE_MAX_SIZE;\n  }\n}));\nObject.defineProperty(exports, \"Server\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.FederationServer;\n  }\n}));\nvar _server = __webpack_require__(/*! ./server */ \"(ssr)/./node_modules/stellar-sdk/lib/federation/server.js\");\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/federation/api.js\");\nObject.keys(_api).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _api[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _api[key];\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZlZGVyYXRpb24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRiwwQ0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixjQUFjLG1CQUFPLENBQUMsMkVBQVU7QUFDaEMsV0FBVyxtQkFBTyxDQUFDLHFFQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvZmVkZXJhdGlvbi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7XG4gIFNlcnZlcjogdHJ1ZSxcbiAgRkVERVJBVElPTl9SRVNQT05TRV9NQVhfU0laRTogdHJ1ZVxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZFREVSQVRJT05fUkVTUE9OU0VfTUFYX1NJWkVcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX3NlcnZlci5GRURFUkFUSU9OX1JFU1BPTlNFX01BWF9TSVpFO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNlcnZlclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfc2VydmVyLkZlZGVyYXRpb25TZXJ2ZXI7XG4gIH1cbn0pO1xudmFyIF9zZXJ2ZXIgPSByZXF1aXJlKFwiLi9zZXJ2ZXJcIik7XG52YXIgX2FwaSA9IHJlcXVpcmUoXCIuL2FwaVwiKTtcbk9iamVjdC5rZXlzKF9hcGkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9hcGlba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfYXBpW2tleV07XG4gICAgfVxuICB9KTtcbn0pOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/federation/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/federation/server.js":
/*!***********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/federation/server.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FederationServer = exports.FEDERATION_RESPONSE_MAX_SIZE = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _config = __webpack_require__(/*! ../config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/index.js\");\nvar _stellartoml = __webpack_require__(/*! ../stellartoml */ \"(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js\");\nvar _httpClient = __webpack_require__(/*! ../http-client */ \"(ssr)/./node_modules/stellar-sdk/lib/http-client/index.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar FEDERATION_RESPONSE_MAX_SIZE = exports.FEDERATION_RESPONSE_MAX_SIZE = 100 * 1024;\nvar FederationServer = exports.FederationServer = function () {\n  function FederationServer(serverURL, domain) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, FederationServer);\n    this.serverURL = (0, _urijs.default)(serverURL);\n    this.domain = domain;\n    var allowHttp = typeof opts.allowHttp === \"undefined\" ? _config.Config.isAllowHttp() : opts.allowHttp;\n    this.timeout = typeof opts.timeout === \"undefined\" ? _config.Config.getTimeout() : opts.timeout;\n    if (this.serverURL.protocol() !== \"https\" && !allowHttp) {\n      throw new Error(\"Cannot connect to insecure federation server\");\n    }\n  }\n  return _createClass(FederationServer, [{\n    key: \"resolveAddress\",\n    value: (function () {\n      var _resolveAddress = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {\n        var stellarAddress, url;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              stellarAddress = address;\n              if (!(address.indexOf(\"*\") < 0)) {\n                _context.next = 5;\n                break;\n              }\n              if (this.domain) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", Promise.reject(new Error(\"Unknown domain. Make sure `address` contains a domain (ex. `bob*stellar.org`) or pass `domain` parameter when instantiating the server object.\")));\n            case 4:\n              stellarAddress = \"\".concat(address, \"*\").concat(this.domain);\n            case 5:\n              url = this.serverURL.query({\n                type: \"name\",\n                q: stellarAddress\n              });\n              return _context.abrupt(\"return\", this._sendRequest(url));\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function resolveAddress(_x) {\n        return _resolveAddress.apply(this, arguments);\n      }\n      return resolveAddress;\n    }())\n  }, {\n    key: \"resolveAccountId\",\n    value: (function () {\n      var _resolveAccountId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(accountId) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              url = this.serverURL.query({\n                type: \"id\",\n                q: accountId\n              });\n              return _context2.abrupt(\"return\", this._sendRequest(url));\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function resolveAccountId(_x2) {\n        return _resolveAccountId.apply(this, arguments);\n      }\n      return resolveAccountId;\n    }())\n  }, {\n    key: \"resolveTransactionId\",\n    value: (function () {\n      var _resolveTransactionId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(transactionId) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              url = this.serverURL.query({\n                type: \"txid\",\n                q: transactionId\n              });\n              return _context3.abrupt(\"return\", this._sendRequest(url));\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function resolveTransactionId(_x3) {\n        return _resolveTransactionId.apply(this, arguments);\n      }\n      return resolveTransactionId;\n    }())\n  }, {\n    key: \"_sendRequest\",\n    value: function () {\n      var _sendRequest2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(url) {\n        var timeout;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              timeout = this.timeout;\n              return _context4.abrupt(\"return\", _httpClient.httpClient.get(url.toString(), {\n                maxContentLength: FEDERATION_RESPONSE_MAX_SIZE,\n                timeout: timeout\n              }).then(function (response) {\n                if (typeof response.data.memo !== \"undefined\" && typeof response.data.memo !== \"string\") {\n                  throw new Error(\"memo value should be of type string\");\n                }\n                return response.data;\n              }).catch(function (response) {\n                if (response instanceof Error) {\n                  if (response.message.match(/^maxContentLength size/)) {\n                    throw new Error(\"federation response exceeds allowed size of \".concat(FEDERATION_RESPONSE_MAX_SIZE));\n                  } else {\n                    return Promise.reject(response);\n                  }\n                } else {\n                  return Promise.reject(new _errors.BadResponseError(\"Server query failed. Server responded: \".concat(response.status, \" \").concat(response.statusText), response.data));\n                }\n              }));\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function _sendRequest(_x4) {\n        return _sendRequest2.apply(this, arguments);\n      }\n      return _sendRequest;\n    }()\n  }], [{\n    key: \"resolve\",\n    value: (function () {\n      var _resolve = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(value) {\n        var opts,\n          addressParts,\n          _addressParts,\n          domain,\n          federationServer,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              opts = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n              if (!(value.indexOf(\"*\") < 0)) {\n                _context5.next = 5;\n                break;\n              }\n              if (_stellarBase.StrKey.isValidEd25519PublicKey(value)) {\n                _context5.next = 4;\n                break;\n              }\n              return _context5.abrupt(\"return\", Promise.reject(new Error(\"Invalid Account ID\")));\n            case 4:\n              return _context5.abrupt(\"return\", Promise.resolve({\n                account_id: value\n              }));\n            case 5:\n              addressParts = value.split(\"*\");\n              _addressParts = _slicedToArray(addressParts, 2), domain = _addressParts[1];\n              if (!(addressParts.length !== 2 || !domain)) {\n                _context5.next = 9;\n                break;\n              }\n              return _context5.abrupt(\"return\", Promise.reject(new Error(\"Invalid Stellar address\")));\n            case 9:\n              _context5.next = 11;\n              return FederationServer.createForDomain(domain, opts);\n            case 11:\n              federationServer = _context5.sent;\n              return _context5.abrupt(\"return\", federationServer.resolveAddress(value));\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function resolve(_x5) {\n        return _resolve.apply(this, arguments);\n      }\n      return resolve;\n    }())\n  }, {\n    key: \"createForDomain\",\n    value: (function () {\n      var _createForDomain = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(domain) {\n        var opts,\n          tomlObject,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              opts = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              _context6.next = 3;\n              return _stellartoml.Resolver.resolve(domain, opts);\n            case 3:\n              tomlObject = _context6.sent;\n              if (tomlObject.FEDERATION_SERVER) {\n                _context6.next = 6;\n                break;\n              }\n              return _context6.abrupt(\"return\", Promise.reject(new Error(\"stellar.toml does not contain FEDERATION_SERVER field\")));\n            case 6:\n              return _context6.abrupt(\"return\", new FederationServer(tomlObject.FEDERATION_SERVER, domain, opts));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function createForDomain(_x6) {\n        return _createForDomain.apply(this, arguments);\n      }\n      return createForDomain;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/federation/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/friendbot/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/friendbot/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nvar Api;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZyaWVuZGJvdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixXQUFXO0FBQ1giLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9mcmllbmRib3QvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkFwaSA9IHZvaWQgMDtcbnZhciBBcGk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/friendbot/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/account_call_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/account_call_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AccountCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar AccountCallBuilder = exports.AccountCallBuilder = function (_CallBuilder) {\n  function AccountCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, AccountCallBuilder);\n    _this = _callSuper(this, AccountCallBuilder, [serverUrl]);\n    _this.url.segment(\"accounts\");\n    return _this;\n  }\n  _inherits(AccountCallBuilder, _CallBuilder);\n  return _createClass(AccountCallBuilder, [{\n    key: \"accountId\",\n    value: function accountId(id) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([id]);\n      return builder;\n    }\n  }, {\n    key: \"forSigner\",\n    value: function forSigner(id) {\n      this.url.setQuery(\"signer\", id);\n      return this;\n    }\n  }, {\n    key: \"forAsset\",\n    value: function forAsset(asset) {\n      this.url.setQuery(\"asset\", \"\".concat(asset));\n      return this;\n    }\n  }, {\n    key: \"sponsor\",\n    value: function sponsor(id) {\n      this.url.setQuery(\"sponsor\", id);\n      return this;\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(id) {\n      this.url.setQuery(\"liquidity_pool\", id);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYWNjb3VudF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMEJBQTBCO0FBQzFCLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSix5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL2FjY291bnRfY2FsbF9idWlsZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5BY2NvdW50Q2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIEFjY291bnRDYWxsQnVpbGRlciA9IGV4cG9ydHMuQWNjb3VudENhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBBY2NvdW50Q2FsbEJ1aWxkZXIoc2VydmVyVXJsKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBY2NvdW50Q2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBBY2NvdW50Q2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcImFjY291bnRzXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoQWNjb3VudENhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEFjY291bnRDYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwiYWNjb3VudElkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFjY291bnRJZChpZCkge1xuICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcih0aGlzLnVybC5jbG9uZSgpKTtcbiAgICAgIGJ1aWxkZXIuZmlsdGVyLnB1c2goW2lkXSk7XG4gICAgICByZXR1cm4gYnVpbGRlcjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yU2lnbmVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvclNpZ25lcihpZCkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJzaWduZXJcIiwgaWQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckFzc2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckFzc2V0KGFzc2V0KSB7XG4gICAgICB0aGlzLnVybC5zZXRRdWVyeShcImFzc2V0XCIsIFwiXCIuY29uY2F0KGFzc2V0KSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic3BvbnNvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzcG9uc29yKGlkKSB7XG4gICAgICB0aGlzLnVybC5zZXRRdWVyeShcInNwb25zb3JcIiwgaWQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckxpcXVpZGl0eVBvb2xcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yTGlxdWlkaXR5UG9vbChpZCkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJsaXF1aWRpdHlfcG9vbFwiLCBpZCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/account_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js":
/*!******************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/account_response.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AccountResponse = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar AccountResponse = exports.AccountResponse = function () {\n  function AccountResponse(response) {\n    var _this = this;\n    _classCallCheck(this, AccountResponse);\n    this._baseAccount = new _stellarBase.Account(response.account_id, response.sequence);\n    Object.entries(response).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      _this[key] = value;\n    });\n  }\n  return _createClass(AccountResponse, [{\n    key: \"accountId\",\n    value: function accountId() {\n      return this._baseAccount.accountId();\n    }\n  }, {\n    key: \"sequenceNumber\",\n    value: function sequenceNumber() {\n      return this._baseAccount.sequenceNumber();\n    }\n  }, {\n    key: \"incrementSequenceNumber\",\n    value: function incrementSequenceNumber() {\n      this._baseAccount.incrementSequenceNumber();\n      this.sequence = this._baseAccount.sequenceNumber();\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYWNjb3VudF9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix1QkFBdUI7QUFDdkIsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ2xELHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLGdDQUFnQztBQUNoQyw4QkFBOEI7QUFDOUIsNkNBQTZDLFNBQVMsMERBQTBELFVBQVUsZ0NBQWdDO0FBQzFKLG1DQUFtQywrQ0FBK0MsOEJBQThCLE9BQU8sa0JBQWtCO0FBQ3pJLHVDQUF1QyxrR0FBa0csaUJBQWlCLHdDQUF3QyxNQUFNLHlDQUF5Qyw2QkFBNkIsVUFBVSxZQUFZLGtFQUFrRSxXQUFXLFlBQVksaUJBQWlCLFVBQVUsTUFBTSwyRUFBMkUsVUFBVSxvQkFBb0I7QUFDdmdCLDhCQUE4QjtBQUM5QixpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1Esc0JBQXNCLHVCQUF1QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYWNjb3VudF9yZXNwb25zZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQWNjb3VudFJlc3BvbnNlID0gdm9pZCAwO1xudmFyIF9zdGVsbGFyQmFzZSA9IHJlcXVpcmUoXCJAc3RlbGxhci9zdGVsbGFyLWJhc2VcIik7XG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShyLCBlKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMocikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KHIsIGUpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBlKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBhKSB7IGlmIChyKSB7IGlmIChcInN0cmluZ1wiID09IHR5cGVvZiByKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkociwgYSk7IHZhciB0ID0ge30udG9TdHJpbmcuY2FsbChyKS5zbGljZSg4LCAtMSk7IHJldHVybiBcIk9iamVjdFwiID09PSB0ICYmIHIuY29uc3RydWN0b3IgJiYgKHQgPSByLmNvbnN0cnVjdG9yLm5hbWUpLCBcIk1hcFwiID09PSB0IHx8IFwiU2V0XCIgPT09IHQgPyBBcnJheS5mcm9tKHIpIDogXCJBcmd1bWVudHNcIiA9PT0gdCB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdCh0KSA/IF9hcnJheUxpa2VUb0FycmF5KHIsIGEpIDogdm9pZCAwOyB9IH1cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpIHsgKG51bGwgPT0gYSB8fCBhID4gci5sZW5ndGgpICYmIChhID0gci5sZW5ndGgpOyBmb3IgKHZhciBlID0gMCwgbiA9IEFycmF5KGEpOyBlIDwgYTsgZSsrKSBuW2VdID0gcltlXTsgcmV0dXJuIG47IH1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChyLCBsKSB7IHZhciB0ID0gbnVsbCA9PSByID8gbnVsbCA6IFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIFN5bWJvbCAmJiByW1N5bWJvbC5pdGVyYXRvcl0gfHwgcltcIkBAaXRlcmF0b3JcIl07IGlmIChudWxsICE9IHQpIHsgdmFyIGUsIG4sIGksIHUsIGEgPSBbXSwgZiA9ICEwLCBvID0gITE7IHRyeSB7IGlmIChpID0gKHQgPSB0LmNhbGwocikpLm5leHQsIDAgPT09IGwpIHsgaWYgKE9iamVjdCh0KSAhPT0gdCkgcmV0dXJuOyBmID0gITE7IH0gZWxzZSBmb3IgKDsgIShmID0gKGUgPSBpLmNhbGwodCkpLmRvbmUpICYmIChhLnB1c2goZS52YWx1ZSksIGEubGVuZ3RoICE9PSBsKTsgZiA9ICEwKTsgfSBjYXRjaCAocikgeyBvID0gITAsIG4gPSByOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIWYgJiYgbnVsbCAhPSB0LnJldHVybiAmJiAodSA9IHQucmV0dXJuKCksIE9iamVjdCh1KSAhPT0gdSkpIHJldHVybjsgfSBmaW5hbGx5IHsgaWYgKG8pIHRocm93IG47IH0gfSByZXR1cm4gYTsgfSB9XG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMocikgeyBpZiAoQXJyYXkuaXNBcnJheShyKSkgcmV0dXJuIHI7IH1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbnZhciBBY2NvdW50UmVzcG9uc2UgPSBleHBvcnRzLkFjY291bnRSZXNwb25zZSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQWNjb3VudFJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWNjb3VudFJlc3BvbnNlKTtcbiAgICB0aGlzLl9iYXNlQWNjb3VudCA9IG5ldyBfc3RlbGxhckJhc2UuQWNjb3VudChyZXNwb25zZS5hY2NvdW50X2lkLCByZXNwb25zZS5zZXF1ZW5jZSk7XG4gICAgT2JqZWN0LmVudHJpZXMocmVzcG9uc2UpLmZvckVhY2goZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpLFxuICAgICAgICBrZXkgPSBfcmVmMlswXSxcbiAgICAgICAgdmFsdWUgPSBfcmVmMlsxXTtcbiAgICAgIF90aGlzW2tleV0gPSB2YWx1ZTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEFjY291bnRSZXNwb25zZSwgW3tcbiAgICBrZXk6IFwiYWNjb3VudElkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFjY291bnRJZCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9iYXNlQWNjb3VudC5hY2NvdW50SWQoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2VxdWVuY2VOdW1iZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2VxdWVuY2VOdW1iZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fYmFzZUFjY291bnQuc2VxdWVuY2VOdW1iZXIoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaW5jcmVtZW50U2VxdWVuY2VOdW1iZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5jcmVtZW50U2VxdWVuY2VOdW1iZXIoKSB7XG4gICAgICB0aGlzLl9iYXNlQWNjb3VudC5pbmNyZW1lbnRTZXF1ZW5jZU51bWJlcigpO1xuICAgICAgdGhpcy5zZXF1ZW5jZSA9IHRoaXMuX2Jhc2VBY2NvdW50LnNlcXVlbmNlTnVtYmVyKCk7XG4gICAgfVxuICB9XSk7XG59KCk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AssetsCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar AssetsCallBuilder = exports.AssetsCallBuilder = function (_CallBuilder) {\n  function AssetsCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, AssetsCallBuilder);\n    _this = _callSuper(this, AssetsCallBuilder, [serverUrl]);\n    _this.url.segment(\"assets\");\n    return _this;\n  }\n  _inherits(AssetsCallBuilder, _CallBuilder);\n  return _createClass(AssetsCallBuilder, [{\n    key: \"forCode\",\n    value: function forCode(value) {\n      this.url.setQuery(\"asset_code\", value);\n      return this;\n    }\n  }, {\n    key: \"forIssuer\",\n    value: function forIssuer(value) {\n      this.url.setQuery(\"asset_issuer\", value);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYXNzZXRzX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL2Fzc2V0c19jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkFzc2V0c0NhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBBc3NldHNDYWxsQnVpbGRlciA9IGV4cG9ydHMuQXNzZXRzQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIEFzc2V0c0NhbGxCdWlsZGVyKHNlcnZlclVybCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXNzZXRzQ2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBBc3NldHNDYWxsQnVpbGRlciwgW3NlcnZlclVybF0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwiYXNzZXRzXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoQXNzZXRzQ2FsbEJ1aWxkZXIsIF9DYWxsQnVpbGRlcik7XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoQXNzZXRzQ2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImZvckNvZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yQ29kZSh2YWx1ZSkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJhc3NldF9jb2RlXCIsIHZhbHVlKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JJc3N1ZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ySXNzdWVyKHZhbHVlKSB7XG4gICAgICB0aGlzLnVybC5zZXRRdWVyeShcImFzc2V0X2lzc3VlclwiLCB2YWx1ZSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js":
/*!**************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/call_builder.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CallBuilder = void 0;\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _URITemplate = _interopRequireDefault(__webpack_require__(/*! urijs/src/URITemplate */ \"(ssr)/./node_modules/urijs/src/URITemplate.js\"));\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/index.js\");\nvar _horizon_axios_client = __webpack_require__(/*! ./horizon_axios_client */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar JOINABLE = [\"transaction\"];\nvar anyGlobal = global;\nvar EventSource;\nif (true) {\n  var _ref, _anyGlobal$EventSourc, _anyGlobal$window;\n  EventSource = (_ref = (_anyGlobal$EventSourc = anyGlobal.EventSource) !== null && _anyGlobal$EventSourc !== void 0 ? _anyGlobal$EventSourc : (_anyGlobal$window = anyGlobal.window) === null || _anyGlobal$window === void 0 ? void 0 : _anyGlobal$window.EventSource) !== null && _ref !== void 0 ? _ref : __webpack_require__(/*! eventsource */ \"(ssr)/./node_modules/eventsource/lib/eventsource.js\");\n}\nvar CallBuilder = exports.CallBuilder = function () {\n  function CallBuilder(serverUrl) {\n    var neighborRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    _classCallCheck(this, CallBuilder);\n    this.url = serverUrl.clone();\n    this.filter = [];\n    this.originalSegments = this.url.segment() || [];\n    this.neighborRoot = neighborRoot;\n  }\n  return _createClass(CallBuilder, [{\n    key: \"call\",\n    value: function call() {\n      var _this = this;\n      this.checkFilter();\n      return this._sendNormalRequest(this.url).then(function (r) {\n        return _this._parseResponse(r);\n      });\n    }\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var _this2 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (EventSource === undefined) {\n        throw new Error(\"Streaming requires eventsource to be enabled. If you need this functionality, compile with USE_EVENTSOURCE=true.\");\n      }\n      this.checkFilter();\n      this.url.setQuery(\"X-Client-Name\", \"js-stellar-sdk\");\n      this.url.setQuery(\"X-Client-Version\", _horizon_axios_client.version);\n      var es;\n      var timeout;\n      var createTimeout = function createTimeout() {\n        timeout = setTimeout(function () {\n          var _es;\n          (_es = es) === null || _es === void 0 || _es.close();\n          es = _createEventSource();\n        }, options.reconnectTimeout || 15 * 1000);\n      };\n      var _createEventSource = function createEventSource() {\n        try {\n          es = new EventSource(_this2.url.toString());\n        } catch (err) {\n          if (options.onerror) {\n            options.onerror(err);\n          }\n        }\n        createTimeout();\n        if (!es) {\n          return es;\n        }\n        var closed = false;\n        var onClose = function onClose() {\n          if (closed) {\n            return;\n          }\n          clearTimeout(timeout);\n          es.close();\n          _createEventSource();\n          closed = true;\n        };\n        var onMessage = function onMessage(message) {\n          if (message.type === \"close\") {\n            onClose();\n            return;\n          }\n          var result = message.data ? _this2._parseRecord(JSON.parse(message.data)) : message;\n          if (result.paging_token) {\n            _this2.url.setQuery(\"cursor\", result.paging_token);\n          }\n          clearTimeout(timeout);\n          createTimeout();\n          if (typeof options.onmessage !== \"undefined\") {\n            options.onmessage(result);\n          }\n        };\n        var onError = function onError(error) {\n          if (options.onerror) {\n            options.onerror(error);\n          }\n        };\n        if (es.addEventListener) {\n          es.addEventListener(\"message\", onMessage.bind(_this2));\n          es.addEventListener(\"error\", onError.bind(_this2));\n          es.addEventListener(\"close\", onClose.bind(_this2));\n        } else {\n          es.onmessage = onMessage.bind(_this2);\n          es.onerror = onError.bind(_this2);\n        }\n        return es;\n      };\n      _createEventSource();\n      return function () {\n        var _es2;\n        clearTimeout(timeout);\n        (_es2 = es) === null || _es2 === void 0 || _es2.close();\n      };\n    }\n  }, {\n    key: \"cursor\",\n    value: function cursor(_cursor) {\n      this.url.setQuery(\"cursor\", _cursor);\n      return this;\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(recordsNumber) {\n      this.url.setQuery(\"limit\", recordsNumber.toString());\n      return this;\n    }\n  }, {\n    key: \"order\",\n    value: function order(direction) {\n      this.url.setQuery(\"order\", direction);\n      return this;\n    }\n  }, {\n    key: \"join\",\n    value: function join(include) {\n      this.url.setQuery(\"join\", include);\n      return this;\n    }\n  }, {\n    key: \"forEndpoint\",\n    value: function forEndpoint(endpoint, param) {\n      if (this.neighborRoot === \"\") {\n        throw new Error(\"Invalid usage: neighborRoot not set in constructor\");\n      }\n      this.filter.push([endpoint, param, this.neighborRoot]);\n      return this;\n    }\n  }, {\n    key: \"checkFilter\",\n    value: function checkFilter() {\n      if (this.filter.length >= 2) {\n        throw new _errors.BadRequestError(\"Too many filters specified\", this.filter);\n      }\n      if (this.filter.length === 1) {\n        var newSegment = this.originalSegments.concat(this.filter[0]);\n        this.url.segment(newSegment);\n      }\n    }\n  }, {\n    key: \"_requestFnForLink\",\n    value: function _requestFnForLink(link) {\n      var _this3 = this;\n      return _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {\n        var opts,\n          uri,\n          template,\n          r,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              opts = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              if (link.templated) {\n                template = (0, _URITemplate.default)(link.href);\n                uri = (0, _urijs.default)(template.expand(opts));\n              } else {\n                uri = (0, _urijs.default)(link.href);\n              }\n              _context.next = 4;\n              return _this3._sendNormalRequest(uri);\n            case 4:\n              r = _context.sent;\n              return _context.abrupt(\"return\", _this3._parseResponse(r));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"_parseRecord\",\n    value: function _parseRecord(json) {\n      var _this4 = this;\n      if (!json._links) {\n        return json;\n      }\n      Object.keys(json._links).forEach(function (key) {\n        var n = json._links[key];\n        var included = false;\n        if (typeof json[key] !== \"undefined\") {\n          json[\"\".concat(key, \"_attr\")] = json[key];\n          included = true;\n        }\n        if (included && JOINABLE.indexOf(key) >= 0) {\n          var record = _this4._parseRecord(json[key]);\n          json[key] = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  return _context2.abrupt(\"return\", record);\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n        } else {\n          json[key] = _this4._requestFnForLink(n);\n        }\n      });\n      return json;\n    }\n  }, {\n    key: \"_sendNormalRequest\",\n    value: function () {\n      var _sendNormalRequest2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(initialUrl) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              url = initialUrl;\n              if (url.authority() === \"\") {\n                url = url.authority(this.url.authority());\n              }\n              if (url.protocol() === \"\") {\n                url = url.protocol(this.url.protocol());\n              }\n              return _context3.abrupt(\"return\", _horizon_axios_client.AxiosClient.get(url.toString()).then(function (response) {\n                return response.data;\n              }).catch(this._handleNetworkError));\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _sendNormalRequest(_x) {\n        return _sendNormalRequest2.apply(this, arguments);\n      }\n      return _sendNormalRequest;\n    }()\n  }, {\n    key: \"_parseResponse\",\n    value: function _parseResponse(json) {\n      if (json._embedded && json._embedded.records) {\n        return this._toCollectionPage(json);\n      }\n      return this._parseRecord(json);\n    }\n  }, {\n    key: \"_toCollectionPage\",\n    value: function _toCollectionPage(json) {\n      var _this5 = this;\n      for (var i = 0; i < json._embedded.records.length; i += 1) {\n        json._embedded.records[i] = this._parseRecord(json._embedded.records[i]);\n      }\n      return {\n        records: json._embedded.records,\n        next: function () {\n          var _next2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {\n            var r;\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _this5._sendNormalRequest((0, _urijs.default)(json._links.next.href));\n                case 2:\n                  r = _context4.sent;\n                  return _context4.abrupt(\"return\", _this5._toCollectionPage(r));\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }));\n          function next() {\n            return _next2.apply(this, arguments);\n          }\n          return next;\n        }(),\n        prev: function () {\n          var _prev = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5() {\n            var r;\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return _this5._sendNormalRequest((0, _urijs.default)(json._links.prev.href));\n                case 2:\n                  r = _context5.sent;\n                  return _context5.abrupt(\"return\", _this5._toCollectionPage(r));\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _callee5);\n          }));\n          function prev() {\n            return _prev.apply(this, arguments);\n          }\n          return prev;\n        }()\n      };\n    }\n  }, {\n    key: \"_handleNetworkError\",\n    value: (function () {\n      var _handleNetworkError2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(error) {\n        var _error$response$statu, _error$response$statu2;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(error.response && error.response.status)) {\n                _context6.next = 8;\n                break;\n              }\n              _context6.t0 = error.response.status;\n              _context6.next = _context6.t0 === 404 ? 4 : 5;\n              break;\n            case 4:\n              return _context6.abrupt(\"return\", Promise.reject(new _errors.NotFoundError((_error$response$statu = error.response.statusText) !== null && _error$response$statu !== void 0 ? _error$response$statu : \"Not Found\", error.response.data)));\n            case 5:\n              return _context6.abrupt(\"return\", Promise.reject(new _errors.NetworkError((_error$response$statu2 = error.response.statusText) !== null && _error$response$statu2 !== void 0 ? _error$response$statu2 : \"Unknown\", error.response.data)));\n            case 6:\n              _context6.next = 9;\n              break;\n            case 8:\n              return _context6.abrupt(\"return\", Promise.reject(new Error(error.message)));\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function _handleNetworkError(_x2) {\n        return _handleNetworkError2.apply(this, arguments);\n      }\n      return _handleNetworkError;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ClaimableBalanceCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar ClaimableBalanceCallBuilder = exports.ClaimableBalanceCallBuilder = function (_CallBuilder) {\n  function ClaimableBalanceCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, ClaimableBalanceCallBuilder);\n    _this = _callSuper(this, ClaimableBalanceCallBuilder, [serverUrl]);\n    _this.url.segment(\"claimable_balances\");\n    return _this;\n  }\n  _inherits(ClaimableBalanceCallBuilder, _CallBuilder);\n  return _createClass(ClaimableBalanceCallBuilder, [{\n    key: \"claimableBalance\",\n    value: function claimableBalance(claimableBalanceId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([claimableBalanceId]);\n      return builder;\n    }\n  }, {\n    key: \"sponsor\",\n    value: function sponsor(_sponsor) {\n      this.url.setQuery(\"sponsor\", _sponsor);\n      return this;\n    }\n  }, {\n    key: \"claimant\",\n    value: function claimant(_claimant) {\n      this.url.setQuery(\"claimant\", _claimant);\n      return this;\n    }\n  }, {\n    key: \"asset\",\n    value: function asset(_asset) {\n      this.url.setQuery(\"asset\", _asset.toString());\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vY2xhaW1hYmxlX2JhbGFuY2VzX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixtQ0FBbUM7QUFDbkMsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLGtDQUFrQyxtQ0FBbUM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL2NsYWltYWJsZV9iYWxhbmNlc19jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkNsYWltYWJsZUJhbGFuY2VDYWxsQnVpbGRlciA9IHZvaWQgMDtcbnZhciBfY2FsbF9idWlsZGVyID0gcmVxdWlyZShcIi4vY2FsbF9idWlsZGVyXCIpO1xuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG52YXIgQ2xhaW1hYmxlQmFsYW5jZUNhbGxCdWlsZGVyID0gZXhwb3J0cy5DbGFpbWFibGVCYWxhbmNlQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIENsYWltYWJsZUJhbGFuY2VDYWxsQnVpbGRlcihzZXJ2ZXJVcmwpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENsYWltYWJsZUJhbGFuY2VDYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIENsYWltYWJsZUJhbGFuY2VDYWxsQnVpbGRlciwgW3NlcnZlclVybF0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwiY2xhaW1hYmxlX2JhbGFuY2VzXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoQ2xhaW1hYmxlQmFsYW5jZUNhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKENsYWltYWJsZUJhbGFuY2VDYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwiY2xhaW1hYmxlQmFsYW5jZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbGFpbWFibGVCYWxhbmNlKGNsYWltYWJsZUJhbGFuY2VJZCkge1xuICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcih0aGlzLnVybC5jbG9uZSgpKTtcbiAgICAgIGJ1aWxkZXIuZmlsdGVyLnB1c2goW2NsYWltYWJsZUJhbGFuY2VJZF0pO1xuICAgICAgcmV0dXJuIGJ1aWxkZXI7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNwb25zb3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3BvbnNvcihfc3BvbnNvcikge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJzcG9uc29yXCIsIF9zcG9uc29yKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbGFpbWFudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbGFpbWFudChfY2xhaW1hbnQpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiY2xhaW1hbnRcIiwgX2NsYWltYW50KTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhc3NldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhc3NldChfYXNzZXQpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiYXNzZXRcIiwgX2Fzc2V0LnRvU3RyaW5nKCkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EffectCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar EffectCallBuilder = exports.EffectCallBuilder = function (_CallBuilder) {\n  function EffectCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, EffectCallBuilder);\n    _this = _callSuper(this, EffectCallBuilder, [serverUrl, \"effects\"]);\n    _this.url.segment(\"effects\");\n    return _this;\n  }\n  _inherits(EffectCallBuilder, _CallBuilder);\n  return _createClass(EffectCallBuilder, [{\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forTransaction\",\n    value: function forTransaction(transactionId) {\n      return this.forEndpoint(\"transactions\", transactionId);\n    }\n  }, {\n    key: \"forOperation\",\n    value: function forOperation(operationId) {\n      return this.forEndpoint(\"operations\", operationId);\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(poolId) {\n      return this.forEndpoint(\"liquidity_pools\", poolId);\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vZWZmZWN0X2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vZWZmZWN0X2NhbGxfYnVpbGRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuRWZmZWN0Q2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIEVmZmVjdENhbGxCdWlsZGVyID0gZXhwb3J0cy5FZmZlY3RDYWxsQnVpbGRlciA9IGZ1bmN0aW9uIChfQ2FsbEJ1aWxkZXIpIHtcbiAgZnVuY3Rpb24gRWZmZWN0Q2FsbEJ1aWxkZXIoc2VydmVyVXJsKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBFZmZlY3RDYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIEVmZmVjdENhbGxCdWlsZGVyLCBbc2VydmVyVXJsLCBcImVmZmVjdHNcIl0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwiZWZmZWN0c1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKEVmZmVjdENhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEVmZmVjdENhbGxCdWlsZGVyLCBbe1xuICAgIGtleTogXCJmb3JBY2NvdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckFjY291bnQoYWNjb3VudElkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImFjY291bnRzXCIsIGFjY291bnRJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckxlZGdlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JMZWRnZXIoc2VxdWVuY2UpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwibGVkZ2Vyc1wiLCBzZXF1ZW5jZS50b1N0cmluZygpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yVHJhbnNhY3Rpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yVHJhbnNhY3Rpb24odHJhbnNhY3Rpb25JZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJ0cmFuc2FjdGlvbnNcIiwgdHJhbnNhY3Rpb25JZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvck9wZXJhdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JPcGVyYXRpb24ob3BlcmF0aW9uSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwib3BlcmF0aW9uc1wiLCBvcGVyYXRpb25JZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckxpcXVpZGl0eVBvb2xcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yTGlxdWlkaXR5UG9vbChwb29sSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwibGlxdWlkaXR5X3Bvb2xzXCIsIHBvb2xJZCk7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FriendbotBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar FriendbotBuilder = exports.FriendbotBuilder = function (_CallBuilder) {\n  function FriendbotBuilder(serverUrl, address) {\n    var _this;\n    _classCallCheck(this, FriendbotBuilder);\n    _this = _callSuper(this, FriendbotBuilder, [serverUrl]);\n    _this.url.segment(\"friendbot\");\n    _this.url.setQuery(\"addr\", address);\n    return _this;\n  }\n  _inherits(FriendbotBuilder, _CallBuilder);\n  return _createClass(FriendbotBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vZnJpZW5kYm90X2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSix1QkFBdUIsd0JBQXdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vZnJpZW5kYm90X2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkZyaWVuZGJvdEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIEZyaWVuZGJvdEJ1aWxkZXIgPSBleHBvcnRzLkZyaWVuZGJvdEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIEZyaWVuZGJvdEJ1aWxkZXIoc2VydmVyVXJsLCBhZGRyZXNzKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGcmllbmRib3RCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgRnJpZW5kYm90QnVpbGRlciwgW3NlcnZlclVybF0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwiZnJpZW5kYm90XCIpO1xuICAgIF90aGlzLnVybC5zZXRRdWVyeShcImFkZHJcIiwgYWRkcmVzcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhGcmllbmRib3RCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEZyaWVuZGJvdEJ1aWxkZXIpO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/horizon_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.HorizonApi = void 0;\nvar HorizonApi;\n(function (_HorizonApi) {\n  var LiquidityPoolType = function (LiquidityPoolType) {\n    LiquidityPoolType[\"constantProduct\"] = \"constant_product\";\n    return LiquidityPoolType;\n  }({});\n  _HorizonApi.LiquidityPoolType = LiquidityPoolType;\n  var OperationResponseType = function (OperationResponseType) {\n    OperationResponseType[\"createAccount\"] = \"create_account\";\n    OperationResponseType[\"payment\"] = \"payment\";\n    OperationResponseType[\"pathPayment\"] = \"path_payment_strict_receive\";\n    OperationResponseType[\"createPassiveOffer\"] = \"create_passive_sell_offer\";\n    OperationResponseType[\"manageOffer\"] = \"manage_sell_offer\";\n    OperationResponseType[\"setOptions\"] = \"set_options\";\n    OperationResponseType[\"changeTrust\"] = \"change_trust\";\n    OperationResponseType[\"allowTrust\"] = \"allow_trust\";\n    OperationResponseType[\"accountMerge\"] = \"account_merge\";\n    OperationResponseType[\"inflation\"] = \"inflation\";\n    OperationResponseType[\"manageData\"] = \"manage_data\";\n    OperationResponseType[\"bumpSequence\"] = \"bump_sequence\";\n    OperationResponseType[\"manageBuyOffer\"] = \"manage_buy_offer\";\n    OperationResponseType[\"pathPaymentStrictSend\"] = \"path_payment_strict_send\";\n    OperationResponseType[\"createClaimableBalance\"] = \"create_claimable_balance\";\n    OperationResponseType[\"claimClaimableBalance\"] = \"claim_claimable_balance\";\n    OperationResponseType[\"beginSponsoringFutureReserves\"] = \"begin_sponsoring_future_reserves\";\n    OperationResponseType[\"endSponsoringFutureReserves\"] = \"end_sponsoring_future_reserves\";\n    OperationResponseType[\"revokeSponsorship\"] = \"revoke_sponsorship\";\n    OperationResponseType[\"clawback\"] = \"clawback\";\n    OperationResponseType[\"clawbackClaimableBalance\"] = \"clawback_claimable_balance\";\n    OperationResponseType[\"setTrustLineFlags\"] = \"set_trust_line_flags\";\n    OperationResponseType[\"liquidityPoolDeposit\"] = \"liquidity_pool_deposit\";\n    OperationResponseType[\"liquidityPoolWithdraw\"] = \"liquidity_pool_withdraw\";\n    OperationResponseType[\"invokeHostFunction\"] = \"invoke_host_function\";\n    OperationResponseType[\"bumpFootprintExpiration\"] = \"bump_footprint_expiration\";\n    OperationResponseType[\"restoreFootprint\"] = \"restore_footprint\";\n    return OperationResponseType;\n  }({});\n  _HorizonApi.OperationResponseType = OperationResponseType;\n  var OperationResponseTypeI = function (OperationResponseTypeI) {\n    OperationResponseTypeI[OperationResponseTypeI[\"createAccount\"] = 0] = \"createAccount\";\n    OperationResponseTypeI[OperationResponseTypeI[\"payment\"] = 1] = \"payment\";\n    OperationResponseTypeI[OperationResponseTypeI[\"pathPayment\"] = 2] = \"pathPayment\";\n    OperationResponseTypeI[OperationResponseTypeI[\"createPassiveOffer\"] = 3] = \"createPassiveOffer\";\n    OperationResponseTypeI[OperationResponseTypeI[\"manageOffer\"] = 4] = \"manageOffer\";\n    OperationResponseTypeI[OperationResponseTypeI[\"setOptions\"] = 5] = \"setOptions\";\n    OperationResponseTypeI[OperationResponseTypeI[\"changeTrust\"] = 6] = \"changeTrust\";\n    OperationResponseTypeI[OperationResponseTypeI[\"allowTrust\"] = 7] = \"allowTrust\";\n    OperationResponseTypeI[OperationResponseTypeI[\"accountMerge\"] = 8] = \"accountMerge\";\n    OperationResponseTypeI[OperationResponseTypeI[\"inflation\"] = 9] = \"inflation\";\n    OperationResponseTypeI[OperationResponseTypeI[\"manageData\"] = 10] = \"manageData\";\n    OperationResponseTypeI[OperationResponseTypeI[\"bumpSequence\"] = 11] = \"bumpSequence\";\n    OperationResponseTypeI[OperationResponseTypeI[\"manageBuyOffer\"] = 12] = \"manageBuyOffer\";\n    OperationResponseTypeI[OperationResponseTypeI[\"pathPaymentStrictSend\"] = 13] = \"pathPaymentStrictSend\";\n    OperationResponseTypeI[OperationResponseTypeI[\"createClaimableBalance\"] = 14] = \"createClaimableBalance\";\n    OperationResponseTypeI[OperationResponseTypeI[\"claimClaimableBalance\"] = 15] = \"claimClaimableBalance\";\n    OperationResponseTypeI[OperationResponseTypeI[\"beginSponsoringFutureReserves\"] = 16] = \"beginSponsoringFutureReserves\";\n    OperationResponseTypeI[OperationResponseTypeI[\"endSponsoringFutureReserves\"] = 17] = \"endSponsoringFutureReserves\";\n    OperationResponseTypeI[OperationResponseTypeI[\"revokeSponsorship\"] = 18] = \"revokeSponsorship\";\n    OperationResponseTypeI[OperationResponseTypeI[\"clawback\"] = 19] = \"clawback\";\n    OperationResponseTypeI[OperationResponseTypeI[\"clawbackClaimableBalance\"] = 20] = \"clawbackClaimableBalance\";\n    OperationResponseTypeI[OperationResponseTypeI[\"setTrustLineFlags\"] = 21] = \"setTrustLineFlags\";\n    OperationResponseTypeI[OperationResponseTypeI[\"liquidityPoolDeposit\"] = 22] = \"liquidityPoolDeposit\";\n    OperationResponseTypeI[OperationResponseTypeI[\"liquidityPoolWithdraw\"] = 23] = \"liquidityPoolWithdraw\";\n    OperationResponseTypeI[OperationResponseTypeI[\"invokeHostFunction\"] = 24] = \"invokeHostFunction\";\n    OperationResponseTypeI[OperationResponseTypeI[\"bumpFootprintExpiration\"] = 25] = \"bumpFootprintExpiration\";\n    OperationResponseTypeI[OperationResponseTypeI[\"restoreFootprint\"] = 26] = \"restoreFootprint\";\n    return OperationResponseTypeI;\n  }({});\n  _HorizonApi.OperationResponseTypeI = OperationResponseTypeI;\n  ;\n  var TransactionFailedResultCodes = function (TransactionFailedResultCodes) {\n    TransactionFailedResultCodes[\"TX_FAILED\"] = \"tx_failed\";\n    TransactionFailedResultCodes[\"TX_BAD_SEQ\"] = \"tx_bad_seq\";\n    TransactionFailedResultCodes[\"TX_BAD_AUTH\"] = \"tx_bad_auth\";\n    TransactionFailedResultCodes[\"TX_BAD_AUTH_EXTRA\"] = \"tx_bad_auth_extra\";\n    TransactionFailedResultCodes[\"TX_FEE_BUMP_INNER_SUCCESS\"] = \"tx_fee_bump_inner_success\";\n    TransactionFailedResultCodes[\"TX_FEE_BUMP_INNER_FAILED\"] = \"tx_fee_bump_inner_failed\";\n    TransactionFailedResultCodes[\"TX_NOT_SUPPORTED\"] = \"tx_not_supported\";\n    TransactionFailedResultCodes[\"TX_SUCCESS\"] = \"tx_success\";\n    TransactionFailedResultCodes[\"TX_TOO_EARLY\"] = \"tx_too_early\";\n    TransactionFailedResultCodes[\"TX_TOO_LATE\"] = \"tx_too_late\";\n    TransactionFailedResultCodes[\"TX_MISSING_OPERATION\"] = \"tx_missing_operation\";\n    TransactionFailedResultCodes[\"TX_INSUFFICIENT_BALANCE\"] = \"tx_insufficient_balance\";\n    TransactionFailedResultCodes[\"TX_NO_SOURCE_ACCOUNT\"] = \"tx_no_source_account\";\n    TransactionFailedResultCodes[\"TX_INSUFFICIENT_FEE\"] = \"tx_insufficient_fee\";\n    TransactionFailedResultCodes[\"TX_INTERNAL_ERROR\"] = \"tx_internal_error\";\n    return TransactionFailedResultCodes;\n  }({});\n  _HorizonApi.TransactionFailedResultCodes = TransactionFailedResultCodes;\n})(HorizonApi || (exports.HorizonApi = HorizonApi = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaG9yaXpvbl9hcGkuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsR0FBRztBQUNOO0FBQ0EsQ0FBQyxpQkFBaUIsa0JBQWtCLGtCQUFrQiIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaG9yaXpvbl9hcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkhvcml6b25BcGkgPSB2b2lkIDA7XG52YXIgSG9yaXpvbkFwaTtcbihmdW5jdGlvbiAoX0hvcml6b25BcGkpIHtcbiAgdmFyIExpcXVpZGl0eVBvb2xUeXBlID0gZnVuY3Rpb24gKExpcXVpZGl0eVBvb2xUeXBlKSB7XG4gICAgTGlxdWlkaXR5UG9vbFR5cGVbXCJjb25zdGFudFByb2R1Y3RcIl0gPSBcImNvbnN0YW50X3Byb2R1Y3RcIjtcbiAgICByZXR1cm4gTGlxdWlkaXR5UG9vbFR5cGU7XG4gIH0oe30pO1xuICBfSG9yaXpvbkFwaS5MaXF1aWRpdHlQb29sVHlwZSA9IExpcXVpZGl0eVBvb2xUeXBlO1xuICB2YXIgT3BlcmF0aW9uUmVzcG9uc2VUeXBlID0gZnVuY3Rpb24gKE9wZXJhdGlvblJlc3BvbnNlVHlwZSkge1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImNyZWF0ZUFjY291bnRcIl0gPSBcImNyZWF0ZV9hY2NvdW50XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wicGF5bWVudFwiXSA9IFwicGF5bWVudFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcInBhdGhQYXltZW50XCJdID0gXCJwYXRoX3BheW1lbnRfc3RyaWN0X3JlY2VpdmVcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJjcmVhdGVQYXNzaXZlT2ZmZXJcIl0gPSBcImNyZWF0ZV9wYXNzaXZlX3NlbGxfb2ZmZXJcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJtYW5hZ2VPZmZlclwiXSA9IFwibWFuYWdlX3NlbGxfb2ZmZXJcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJzZXRPcHRpb25zXCJdID0gXCJzZXRfb3B0aW9uc1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImNoYW5nZVRydXN0XCJdID0gXCJjaGFuZ2VfdHJ1c3RcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJhbGxvd1RydXN0XCJdID0gXCJhbGxvd190cnVzdFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImFjY291bnRNZXJnZVwiXSA9IFwiYWNjb3VudF9tZXJnZVwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImluZmxhdGlvblwiXSA9IFwiaW5mbGF0aW9uXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wibWFuYWdlRGF0YVwiXSA9IFwibWFuYWdlX2RhdGFcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJidW1wU2VxdWVuY2VcIl0gPSBcImJ1bXBfc2VxdWVuY2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJtYW5hZ2VCdXlPZmZlclwiXSA9IFwibWFuYWdlX2J1eV9vZmZlclwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcInBhdGhQYXltZW50U3RyaWN0U2VuZFwiXSA9IFwicGF0aF9wYXltZW50X3N0cmljdF9zZW5kXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wiY3JlYXRlQ2xhaW1hYmxlQmFsYW5jZVwiXSA9IFwiY3JlYXRlX2NsYWltYWJsZV9iYWxhbmNlXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wiY2xhaW1DbGFpbWFibGVCYWxhbmNlXCJdID0gXCJjbGFpbV9jbGFpbWFibGVfYmFsYW5jZVwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImJlZ2luU3BvbnNvcmluZ0Z1dHVyZVJlc2VydmVzXCJdID0gXCJiZWdpbl9zcG9uc29yaW5nX2Z1dHVyZV9yZXNlcnZlc1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImVuZFNwb25zb3JpbmdGdXR1cmVSZXNlcnZlc1wiXSA9IFwiZW5kX3Nwb25zb3JpbmdfZnV0dXJlX3Jlc2VydmVzXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wicmV2b2tlU3BvbnNvcnNoaXBcIl0gPSBcInJldm9rZV9zcG9uc29yc2hpcFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImNsYXdiYWNrXCJdID0gXCJjbGF3YmFja1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImNsYXdiYWNrQ2xhaW1hYmxlQmFsYW5jZVwiXSA9IFwiY2xhd2JhY2tfY2xhaW1hYmxlX2JhbGFuY2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJzZXRUcnVzdExpbmVGbGFnc1wiXSA9IFwic2V0X3RydXN0X2xpbmVfZmxhZ3NcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJsaXF1aWRpdHlQb29sRGVwb3NpdFwiXSA9IFwibGlxdWlkaXR5X3Bvb2xfZGVwb3NpdFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImxpcXVpZGl0eVBvb2xXaXRoZHJhd1wiXSA9IFwibGlxdWlkaXR5X3Bvb2xfd2l0aGRyYXdcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJpbnZva2VIb3N0RnVuY3Rpb25cIl0gPSBcImludm9rZV9ob3N0X2Z1bmN0aW9uXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wiYnVtcEZvb3RwcmludEV4cGlyYXRpb25cIl0gPSBcImJ1bXBfZm9vdHByaW50X2V4cGlyYXRpb25cIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJyZXN0b3JlRm9vdHByaW50XCJdID0gXCJyZXN0b3JlX2Zvb3RwcmludFwiO1xuICAgIHJldHVybiBPcGVyYXRpb25SZXNwb25zZVR5cGU7XG4gIH0oe30pO1xuICBfSG9yaXpvbkFwaS5PcGVyYXRpb25SZXNwb25zZVR5cGUgPSBPcGVyYXRpb25SZXNwb25zZVR5cGU7XG4gIHZhciBPcGVyYXRpb25SZXNwb25zZVR5cGVJID0gZnVuY3Rpb24gKE9wZXJhdGlvblJlc3BvbnNlVHlwZUkpIHtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJjcmVhdGVBY2NvdW50XCJdID0gMF0gPSBcImNyZWF0ZUFjY291bnRcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJwYXltZW50XCJdID0gMV0gPSBcInBheW1lbnRcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJwYXRoUGF5bWVudFwiXSA9IDJdID0gXCJwYXRoUGF5bWVudFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImNyZWF0ZVBhc3NpdmVPZmZlclwiXSA9IDNdID0gXCJjcmVhdGVQYXNzaXZlT2ZmZXJcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJtYW5hZ2VPZmZlclwiXSA9IDRdID0gXCJtYW5hZ2VPZmZlclwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcInNldE9wdGlvbnNcIl0gPSA1XSA9IFwic2V0T3B0aW9uc1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImNoYW5nZVRydXN0XCJdID0gNl0gPSBcImNoYW5nZVRydXN0XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiYWxsb3dUcnVzdFwiXSA9IDddID0gXCJhbGxvd1RydXN0XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiYWNjb3VudE1lcmdlXCJdID0gOF0gPSBcImFjY291bnRNZXJnZVwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImluZmxhdGlvblwiXSA9IDldID0gXCJpbmZsYXRpb25cIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJtYW5hZ2VEYXRhXCJdID0gMTBdID0gXCJtYW5hZ2VEYXRhXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiYnVtcFNlcXVlbmNlXCJdID0gMTFdID0gXCJidW1wU2VxdWVuY2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJtYW5hZ2VCdXlPZmZlclwiXSA9IDEyXSA9IFwibWFuYWdlQnV5T2ZmZXJcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJwYXRoUGF5bWVudFN0cmljdFNlbmRcIl0gPSAxM10gPSBcInBhdGhQYXltZW50U3RyaWN0U2VuZFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImNyZWF0ZUNsYWltYWJsZUJhbGFuY2VcIl0gPSAxNF0gPSBcImNyZWF0ZUNsYWltYWJsZUJhbGFuY2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJjbGFpbUNsYWltYWJsZUJhbGFuY2VcIl0gPSAxNV0gPSBcImNsYWltQ2xhaW1hYmxlQmFsYW5jZVwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImJlZ2luU3BvbnNvcmluZ0Z1dHVyZVJlc2VydmVzXCJdID0gMTZdID0gXCJiZWdpblNwb25zb3JpbmdGdXR1cmVSZXNlcnZlc1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImVuZFNwb25zb3JpbmdGdXR1cmVSZXNlcnZlc1wiXSA9IDE3XSA9IFwiZW5kU3BvbnNvcmluZ0Z1dHVyZVJlc2VydmVzXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wicmV2b2tlU3BvbnNvcnNoaXBcIl0gPSAxOF0gPSBcInJldm9rZVNwb25zb3JzaGlwXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiY2xhd2JhY2tcIl0gPSAxOV0gPSBcImNsYXdiYWNrXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiY2xhd2JhY2tDbGFpbWFibGVCYWxhbmNlXCJdID0gMjBdID0gXCJjbGF3YmFja0NsYWltYWJsZUJhbGFuY2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJzZXRUcnVzdExpbmVGbGFnc1wiXSA9IDIxXSA9IFwic2V0VHJ1c3RMaW5lRmxhZ3NcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJsaXF1aWRpdHlQb29sRGVwb3NpdFwiXSA9IDIyXSA9IFwibGlxdWlkaXR5UG9vbERlcG9zaXRcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJsaXF1aWRpdHlQb29sV2l0aGRyYXdcIl0gPSAyM10gPSBcImxpcXVpZGl0eVBvb2xXaXRoZHJhd1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImludm9rZUhvc3RGdW5jdGlvblwiXSA9IDI0XSA9IFwiaW52b2tlSG9zdEZ1bmN0aW9uXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiYnVtcEZvb3RwcmludEV4cGlyYXRpb25cIl0gPSAyNV0gPSBcImJ1bXBGb290cHJpbnRFeHBpcmF0aW9uXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wicmVzdG9yZUZvb3RwcmludFwiXSA9IDI2XSA9IFwicmVzdG9yZUZvb3RwcmludFwiO1xuICAgIHJldHVybiBPcGVyYXRpb25SZXNwb25zZVR5cGVJO1xuICB9KHt9KTtcbiAgX0hvcml6b25BcGkuT3BlcmF0aW9uUmVzcG9uc2VUeXBlSSA9IE9wZXJhdGlvblJlc3BvbnNlVHlwZUk7XG4gIDtcbiAgdmFyIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXMgPSBmdW5jdGlvbiAoVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlcykge1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9GQUlMRURcIl0gPSBcInR4X2ZhaWxlZFwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9CQURfU0VRXCJdID0gXCJ0eF9iYWRfc2VxXCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX0JBRF9BVVRIXCJdID0gXCJ0eF9iYWRfYXV0aFwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9CQURfQVVUSF9FWFRSQVwiXSA9IFwidHhfYmFkX2F1dGhfZXh0cmFcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfRkVFX0JVTVBfSU5ORVJfU1VDQ0VTU1wiXSA9IFwidHhfZmVlX2J1bXBfaW5uZXJfc3VjY2Vzc1wiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9GRUVfQlVNUF9JTk5FUl9GQUlMRURcIl0gPSBcInR4X2ZlZV9idW1wX2lubmVyX2ZhaWxlZFwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9OT1RfU1VQUE9SVEVEXCJdID0gXCJ0eF9ub3Rfc3VwcG9ydGVkXCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX1NVQ0NFU1NcIl0gPSBcInR4X3N1Y2Nlc3NcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfVE9PX0VBUkxZXCJdID0gXCJ0eF90b29fZWFybHlcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfVE9PX0xBVEVcIl0gPSBcInR4X3Rvb19sYXRlXCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX01JU1NJTkdfT1BFUkFUSU9OXCJdID0gXCJ0eF9taXNzaW5nX29wZXJhdGlvblwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9JTlNVRkZJQ0lFTlRfQkFMQU5DRVwiXSA9IFwidHhfaW5zdWZmaWNpZW50X2JhbGFuY2VcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfTk9fU09VUkNFX0FDQ09VTlRcIl0gPSBcInR4X25vX3NvdXJjZV9hY2NvdW50XCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX0lOU1VGRklDSUVOVF9GRUVcIl0gPSBcInR4X2luc3VmZmljaWVudF9mZWVcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfSU5URVJOQUxfRVJST1JcIl0gPSBcInR4X2ludGVybmFsX2Vycm9yXCI7XG4gICAgcmV0dXJuIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXM7XG4gIH0oe30pO1xuICBfSG9yaXpvbkFwaS5UcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzID0gVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlcztcbn0pKEhvcml6b25BcGkgfHwgKGV4cG9ydHMuSG9yaXpvbkFwaSA9IEhvcml6b25BcGkgPSB7fSkpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.SERVER_TIME_MAP = exports.AxiosClient = void 0;\nexports.getCurrentServerTime = getCurrentServerTime;\nexports.version = void 0;\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _httpClient = __webpack_require__(/*! ../http-client */ \"(ssr)/./node_modules/stellar-sdk/lib/http-client/index.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar version = exports.version = \"13.3.0\";\nvar SERVER_TIME_MAP = exports.SERVER_TIME_MAP = {};\nvar AxiosClient = exports.AxiosClient = (0, _httpClient.create)({\n  headers: {\n    \"X-Client-Name\": \"js-stellar-sdk\",\n    \"X-Client-Version\": version\n  }\n});\nfunction toSeconds(ms) {\n  return Math.floor(ms / 1000);\n}\nAxiosClient.interceptors.response.use(function (response) {\n  var hostname = (0, _urijs.default)(response.config.url).hostname();\n  var serverTime = 0;\n  if (response.headers instanceof Headers) {\n    var dateHeader = response.headers.get('date');\n    if (dateHeader) {\n      serverTime = toSeconds(Date.parse(dateHeader));\n    }\n  } else if (_typeof(response.headers) === 'object' && 'date' in response.headers) {\n    var headers = response.headers;\n    if (typeof headers.date === 'string') {\n      serverTime = toSeconds(Date.parse(headers.date));\n    }\n  }\n  var localTimeRecorded = toSeconds(new Date().getTime());\n  if (!Number.isNaN(serverTime)) {\n    SERVER_TIME_MAP[hostname] = {\n      serverTime: serverTime,\n      localTimeRecorded: localTimeRecorded\n    };\n  }\n  return response;\n});\nvar _default = exports[\"default\"] = AxiosClient;\nfunction getCurrentServerTime(hostname) {\n  var entry = SERVER_TIME_MAP[hostname];\n  if (!entry || !entry.localTimeRecorded || !entry.serverTime) {\n    return null;\n  }\n  var serverTime = entry.serverTime,\n    localTimeRecorded = entry.localTimeRecorded;\n  var currentTime = toSeconds(new Date().getTime());\n  if (currentTime - localTimeRecorded > 60 * 5) {\n    return null;\n  }\n  return currentTime - localTimeRecorded + serverTime;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaG9yaXpvbl9heGlvc19jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWUsR0FBRyx1QkFBdUIsR0FBRyxtQkFBbUI7QUFDL0QsNEJBQTRCO0FBQzVCLGVBQWU7QUFDZixvQ0FBb0MsbUJBQU8sQ0FBQyxvREFBTztBQUNuRCxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7QUFDMUMscUNBQXFDLGlDQUFpQztBQUN0RSxzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyxjQUFjLGVBQWU7QUFDN0Isc0JBQXNCLHVCQUF1QjtBQUM3QyxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsZUFBZSxrQkFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaG9yaXpvbl9heGlvc19jbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLlNFUlZFUl9USU1FX01BUCA9IGV4cG9ydHMuQXhpb3NDbGllbnQgPSB2b2lkIDA7XG5leHBvcnRzLmdldEN1cnJlbnRTZXJ2ZXJUaW1lID0gZ2V0Q3VycmVudFNlcnZlclRpbWU7XG5leHBvcnRzLnZlcnNpb24gPSB2b2lkIDA7XG52YXIgX3VyaWpzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwidXJpanNcIikpO1xudmFyIF9odHRwQ2xpZW50ID0gcmVxdWlyZShcIi4uL2h0dHAtY2xpZW50XCIpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChlKSB7IHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsgfVxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxudmFyIHZlcnNpb24gPSBleHBvcnRzLnZlcnNpb24gPSBcIjEzLjMuMFwiO1xudmFyIFNFUlZFUl9USU1FX01BUCA9IGV4cG9ydHMuU0VSVkVSX1RJTUVfTUFQID0ge307XG52YXIgQXhpb3NDbGllbnQgPSBleHBvcnRzLkF4aW9zQ2xpZW50ID0gKDAsIF9odHRwQ2xpZW50LmNyZWF0ZSkoe1xuICBoZWFkZXJzOiB7XG4gICAgXCJYLUNsaWVudC1OYW1lXCI6IFwianMtc3RlbGxhci1zZGtcIixcbiAgICBcIlgtQ2xpZW50LVZlcnNpb25cIjogdmVyc2lvblxuICB9XG59KTtcbmZ1bmN0aW9uIHRvU2Vjb25kcyhtcykge1xuICByZXR1cm4gTWF0aC5mbG9vcihtcyAvIDEwMDApO1xufVxuQXhpb3NDbGllbnQuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgdmFyIGhvc3RuYW1lID0gKDAsIF91cmlqcy5kZWZhdWx0KShyZXNwb25zZS5jb25maWcudXJsKS5ob3N0bmFtZSgpO1xuICB2YXIgc2VydmVyVGltZSA9IDA7XG4gIGlmIChyZXNwb25zZS5oZWFkZXJzIGluc3RhbmNlb2YgSGVhZGVycykge1xuICAgIHZhciBkYXRlSGVhZGVyID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2RhdGUnKTtcbiAgICBpZiAoZGF0ZUhlYWRlcikge1xuICAgICAgc2VydmVyVGltZSA9IHRvU2Vjb25kcyhEYXRlLnBhcnNlKGRhdGVIZWFkZXIpKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoX3R5cGVvZihyZXNwb25zZS5oZWFkZXJzKSA9PT0gJ29iamVjdCcgJiYgJ2RhdGUnIGluIHJlc3BvbnNlLmhlYWRlcnMpIHtcbiAgICB2YXIgaGVhZGVycyA9IHJlc3BvbnNlLmhlYWRlcnM7XG4gICAgaWYgKHR5cGVvZiBoZWFkZXJzLmRhdGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICBzZXJ2ZXJUaW1lID0gdG9TZWNvbmRzKERhdGUucGFyc2UoaGVhZGVycy5kYXRlKSk7XG4gICAgfVxuICB9XG4gIHZhciBsb2NhbFRpbWVSZWNvcmRlZCA9IHRvU2Vjb25kcyhuZXcgRGF0ZSgpLmdldFRpbWUoKSk7XG4gIGlmICghTnVtYmVyLmlzTmFOKHNlcnZlclRpbWUpKSB7XG4gICAgU0VSVkVSX1RJTUVfTUFQW2hvc3RuYW1lXSA9IHtcbiAgICAgIHNlcnZlclRpbWU6IHNlcnZlclRpbWUsXG4gICAgICBsb2NhbFRpbWVSZWNvcmRlZDogbG9jYWxUaW1lUmVjb3JkZWRcbiAgICB9O1xuICB9XG4gIHJldHVybiByZXNwb25zZTtcbn0pO1xudmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gQXhpb3NDbGllbnQ7XG5mdW5jdGlvbiBnZXRDdXJyZW50U2VydmVyVGltZShob3N0bmFtZSkge1xuICB2YXIgZW50cnkgPSBTRVJWRVJfVElNRV9NQVBbaG9zdG5hbWVdO1xuICBpZiAoIWVudHJ5IHx8ICFlbnRyeS5sb2NhbFRpbWVSZWNvcmRlZCB8fCAhZW50cnkuc2VydmVyVGltZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciBzZXJ2ZXJUaW1lID0gZW50cnkuc2VydmVyVGltZSxcbiAgICBsb2NhbFRpbWVSZWNvcmRlZCA9IGVudHJ5LmxvY2FsVGltZVJlY29yZGVkO1xuICB2YXIgY3VycmVudFRpbWUgPSB0b1NlY29uZHMobmV3IERhdGUoKS5nZXRUaW1lKCkpO1xuICBpZiAoY3VycmVudFRpbWUgLSBsb2NhbFRpbWVSZWNvcmRlZCA+IDYwICogNSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBjdXJyZW50VGltZSAtIGxvY2FsVGltZVJlY29yZGVkICsgc2VydmVyVGltZTtcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/index.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Server: true,\n  AxiosClient: true,\n  SERVER_TIME_MAP: true,\n  getCurrentServerTime: true\n};\nObject.defineProperty(exports, \"AxiosClient\", ({\n  enumerable: true,\n  get: function get() {\n    return _horizon_axios_client.default;\n  }\n}));\nObject.defineProperty(exports, \"SERVER_TIME_MAP\", ({\n  enumerable: true,\n  get: function get() {\n    return _horizon_axios_client.SERVER_TIME_MAP;\n  }\n}));\nObject.defineProperty(exports, \"Server\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.HorizonServer;\n  }\n}));\nexports[\"default\"] = void 0;\nObject.defineProperty(exports, \"getCurrentServerTime\", ({\n  enumerable: true,\n  get: function get() {\n    return _horizon_axios_client.getCurrentServerTime;\n  }\n}));\nvar _horizon_api = __webpack_require__(/*! ./horizon_api */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js\");\nObject.keys(_horizon_api).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _horizon_api[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _horizon_api[key];\n    }\n  });\n});\nvar _server_api = __webpack_require__(/*! ./server_api */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/server_api.js\");\nObject.keys(_server_api).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _server_api[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _server_api[key];\n    }\n  });\n});\nvar _account_response = __webpack_require__(/*! ./account_response */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js\");\nObject.keys(_account_response).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _account_response[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _account_response[key];\n    }\n  });\n});\nvar _server = __webpack_require__(/*! ./server */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/server.js\");\nvar _horizon_axios_client = _interopRequireWildcard(__webpack_require__(/*! ./horizon_axios_client */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsbURBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMENBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZix3REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixtQkFBbUIsbUJBQU8sQ0FBQyxrRkFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELGtCQUFrQixtQkFBTyxDQUFDLGdGQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Qsd0JBQXdCLG1CQUFPLENBQUMsNEZBQW9CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLHdFQUFVO0FBQ2hDLG9EQUFvRCxtQkFBTyxDQUFDLG9HQUF3QjtBQUNwRix1Q0FBdUMsK0NBQStDLDBDQUEwQywwRUFBMEUsbUJBQW1CO0FBQzdOLHlDQUF5Qyx1Q0FBdUMsNkVBQTZFLGNBQWMscUNBQXFDLG9DQUFvQyxVQUFVLGlCQUFpQixnRUFBZ0UsMENBQTBDLDhCQUE4QiwwREFBMEQsd0VBQXdFO0FBQ3poQixlQUFlLGtCQUFlIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7XG4gIFNlcnZlcjogdHJ1ZSxcbiAgQXhpb3NDbGllbnQ6IHRydWUsXG4gIFNFUlZFUl9USU1FX01BUDogdHJ1ZSxcbiAgZ2V0Q3VycmVudFNlcnZlclRpbWU6IHRydWVcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBeGlvc0NsaWVudFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfaG9yaXpvbl9heGlvc19jbGllbnQuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTRVJWRVJfVElNRV9NQVBcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2hvcml6b25fYXhpb3NfY2xpZW50LlNFUlZFUl9USU1FX01BUDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTZXJ2ZXJcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX3NlcnZlci5Ib3Jpem9uU2VydmVyO1xuICB9XG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldEN1cnJlbnRTZXJ2ZXJUaW1lXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9ob3Jpem9uX2F4aW9zX2NsaWVudC5nZXRDdXJyZW50U2VydmVyVGltZTtcbiAgfVxufSk7XG52YXIgX2hvcml6b25fYXBpID0gcmVxdWlyZShcIi4vaG9yaXpvbl9hcGlcIik7XG5PYmplY3Qua2V5cyhfaG9yaXpvbl9hcGkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9ob3Jpem9uX2FwaVtrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9ob3Jpem9uX2FwaVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc2VydmVyX2FwaSA9IHJlcXVpcmUoXCIuL3NlcnZlcl9hcGlcIik7XG5PYmplY3Qua2V5cyhfc2VydmVyX2FwaSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3NlcnZlcl9hcGlba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfc2VydmVyX2FwaVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfYWNjb3VudF9yZXNwb25zZSA9IHJlcXVpcmUoXCIuL2FjY291bnRfcmVzcG9uc2VcIik7XG5PYmplY3Qua2V5cyhfYWNjb3VudF9yZXNwb25zZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX2FjY291bnRfcmVzcG9uc2Vba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfYWNjb3VudF9yZXNwb25zZVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc2VydmVyID0gcmVxdWlyZShcIi4vc2VydmVyXCIpO1xudmFyIF9ob3Jpem9uX2F4aW9zX2NsaWVudCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL2hvcml6b25fYXhpb3NfY2xpZW50XCIpKTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIFdlYWtNYXApIHJldHVybiBudWxsOyB2YXIgciA9IG5ldyBXZWFrTWFwKCksIHQgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IHJldHVybiBlID8gdCA6IHI7IH0pKGUpOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChlLCByKSB7IGlmICghciAmJiBlICYmIGUuX19lc01vZHVsZSkgcmV0dXJuIGU7IGlmIChudWxsID09PSBlIHx8IFwib2JqZWN0XCIgIT0gX3R5cGVvZihlKSAmJiBcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUpIHJldHVybiB7IGRlZmF1bHQ6IGUgfTsgdmFyIHQgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUocik7IGlmICh0ICYmIHQuaGFzKGUpKSByZXR1cm4gdC5nZXQoZSk7IHZhciBuID0geyBfX3Byb3RvX186IG51bGwgfSwgYSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciB1IGluIGUpIGlmIChcImRlZmF1bHRcIiAhPT0gdSAmJiB7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsIHUpKSB7IHZhciBpID0gYSA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgdSkgOiBudWxsOyBpICYmIChpLmdldCB8fCBpLnNldCkgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkobiwgdSwgaSkgOiBuW3VdID0gZVt1XTsgfSByZXR1cm4gbi5kZWZhdWx0ID0gZSwgdCAmJiB0LnNldChlLCBuKSwgbjsgfVxudmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.LedgerCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar LedgerCallBuilder = exports.LedgerCallBuilder = function (_CallBuilder) {\n  function LedgerCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, LedgerCallBuilder);\n    _this = _callSuper(this, LedgerCallBuilder, [serverUrl]);\n    _this.url.segment(\"ledgers\");\n    return _this;\n  }\n  _inherits(LedgerCallBuilder, _CallBuilder);\n  return _createClass(LedgerCallBuilder, [{\n    key: \"ledger\",\n    value: function ledger(sequence) {\n      this.filter.push([\"ledgers\", sequence.toString()]);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vbGVkZ2VyX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9sZWRnZXJfY2FsbF9idWlsZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5MZWRnZXJDYWxsQnVpbGRlciA9IHZvaWQgMDtcbnZhciBfY2FsbF9idWlsZGVyID0gcmVxdWlyZShcIi4vY2FsbF9idWlsZGVyXCIpO1xuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG52YXIgTGVkZ2VyQ2FsbEJ1aWxkZXIgPSBleHBvcnRzLkxlZGdlckNhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBMZWRnZXJDYWxsQnVpbGRlcihzZXJ2ZXJVcmwpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExlZGdlckNhbGxCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgTGVkZ2VyQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcImxlZGdlcnNcIik7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhMZWRnZXJDYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhMZWRnZXJDYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwibGVkZ2VyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxlZGdlcihzZXF1ZW5jZSkge1xuICAgICAgdGhpcy5maWx0ZXIucHVzaChbXCJsZWRnZXJzXCIsIHNlcXVlbmNlLnRvU3RyaW5nKCldKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.LiquidityPoolCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar LiquidityPoolCallBuilder = exports.LiquidityPoolCallBuilder = function (_CallBuilder) {\n  function LiquidityPoolCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, LiquidityPoolCallBuilder);\n    _this = _callSuper(this, LiquidityPoolCallBuilder, [serverUrl]);\n    _this.url.segment(\"liquidity_pools\");\n    return _this;\n  }\n  _inherits(LiquidityPoolCallBuilder, _CallBuilder);\n  return _createClass(LiquidityPoolCallBuilder, [{\n    key: \"forAssets\",\n    value: function forAssets() {\n      for (var _len = arguments.length, assets = new Array(_len), _key = 0; _key < _len; _key++) {\n        assets[_key] = arguments[_key];\n      }\n      var assetList = assets.map(function (asset) {\n        return asset.toString();\n      }).join(\",\");\n      this.url.setQuery(\"reserves\", assetList);\n      return this;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(id) {\n      this.url.setQuery(\"account\", id);\n      return this;\n    }\n  }, {\n    key: \"liquidityPoolId\",\n    value: function liquidityPoolId(id) {\n      if (!id.match(/[a-fA-F0-9]{64}/)) {\n        throw new TypeError(\"\".concat(id, \" does not look like a liquidity pool ID\"));\n      }\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([id.toLowerCase()]);\n      return builder;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vbGlxdWlkaXR5X3Bvb2xfY2FsbF9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGdDQUFnQztBQUNoQyxvQkFBb0IsbUJBQU8sQ0FBQyxvRkFBZ0I7QUFDNUMsaUNBQWlDO0FBQ2pDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLCtCQUErQjtBQUMvQiw0Q0FBNEMsdUVBQXVFLG1HQUFtRztBQUN0TixxQ0FBcUMseUdBQXlHO0FBQzlJLHVDQUF1QyxNQUFNLHFGQUFxRixNQUFNLGFBQWEsMkVBQTJFLGFBQWE7QUFDN08sOEJBQThCLCtGQUErRixpREFBaUQ7QUFDOUssMkJBQTJCLHFIQUFxSCxnREFBZ0QsZUFBZSw0Q0FBNEMsMkNBQTJDLGNBQWM7QUFDcFQsaUNBQWlDLGtHQUFrRyw0QkFBNEI7QUFDL0osK0JBQStCLGdDQUFnQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLGFBQWE7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGlDQUFpQyxHQUFHO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9saXF1aWRpdHlfcG9vbF9jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkxpcXVpZGl0eVBvb2xDYWxsQnVpbGRlciA9IHZvaWQgMDtcbnZhciBfY2FsbF9idWlsZGVyID0gcmVxdWlyZShcIi4vY2FsbF9idWlsZGVyXCIpO1xuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG52YXIgTGlxdWlkaXR5UG9vbENhbGxCdWlsZGVyID0gZXhwb3J0cy5MaXF1aWRpdHlQb29sQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIExpcXVpZGl0eVBvb2xDYWxsQnVpbGRlcihzZXJ2ZXJVcmwpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExpcXVpZGl0eVBvb2xDYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIExpcXVpZGl0eVBvb2xDYWxsQnVpbGRlciwgW3NlcnZlclVybF0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwibGlxdWlkaXR5X3Bvb2xzXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoTGlxdWlkaXR5UG9vbENhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKExpcXVpZGl0eVBvb2xDYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwiZm9yQXNzZXRzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckFzc2V0cygpIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhc3NldHMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFzc2V0c1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cbiAgICAgIHZhciBhc3NldExpc3QgPSBhc3NldHMubWFwKGZ1bmN0aW9uIChhc3NldCkge1xuICAgICAgICByZXR1cm4gYXNzZXQudG9TdHJpbmcoKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJyZXNlcnZlc1wiLCBhc3NldExpc3QpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckFjY291bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yQWNjb3VudChpZCkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJhY2NvdW50XCIsIGlkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsaXF1aWRpdHlQb29sSWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbGlxdWlkaXR5UG9vbElkKGlkKSB7XG4gICAgICBpZiAoIWlkLm1hdGNoKC9bYS1mQS1GMC05XXs2NH0vKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiXCIuY29uY2F0KGlkLCBcIiBkb2VzIG5vdCBsb29rIGxpa2UgYSBsaXF1aWRpdHkgcG9vbCBJRFwiKSk7XG4gICAgICB9XG4gICAgICB2YXIgYnVpbGRlciA9IG5ldyBfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKHRoaXMudXJsLmNsb25lKCkpO1xuICAgICAgYnVpbGRlci5maWx0ZXIucHVzaChbaWQudG9Mb3dlckNhc2UoKV0pO1xuICAgICAgcmV0dXJuIGJ1aWxkZXI7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OfferCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar OfferCallBuilder = exports.OfferCallBuilder = function (_CallBuilder) {\n  function OfferCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, OfferCallBuilder);\n    _this = _callSuper(this, OfferCallBuilder, [serverUrl, \"offers\"]);\n    _this.url.segment(\"offers\");\n    return _this;\n  }\n  _inherits(OfferCallBuilder, _CallBuilder);\n  return _createClass(OfferCallBuilder, [{\n    key: \"offer\",\n    value: function offer(offerId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([offerId]);\n      return builder;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(id) {\n      return this.forEndpoint(\"accounts\", id);\n    }\n  }, {\n    key: \"buying\",\n    value: function buying(asset) {\n      if (!asset.isNative()) {\n        this.url.setQuery(\"buying_asset_type\", asset.getAssetType());\n        this.url.setQuery(\"buying_asset_code\", asset.getCode());\n        this.url.setQuery(\"buying_asset_issuer\", asset.getIssuer());\n      } else {\n        this.url.setQuery(\"buying_asset_type\", \"native\");\n      }\n      return this;\n    }\n  }, {\n    key: \"selling\",\n    value: function selling(asset) {\n      if (!asset.isNative()) {\n        this.url.setQuery(\"selling_asset_type\", asset.getAssetType());\n        this.url.setQuery(\"selling_asset_code\", asset.getCode());\n        this.url.setQuery(\"selling_asset_issuer\", asset.getIssuer());\n      } else {\n        this.url.setQuery(\"selling_asset_type\", \"native\");\n      }\n      return this;\n    }\n  }, {\n    key: \"sponsor\",\n    value: function sponsor(id) {\n      this.url.setQuery(\"sponsor\", id);\n      return this;\n    }\n  }, {\n    key: \"seller\",\n    value: function seller(_seller) {\n      this.url.setQuery(\"seller\", _seller);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js":
/*!************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OperationCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar OperationCallBuilder = exports.OperationCallBuilder = function (_CallBuilder) {\n  function OperationCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, OperationCallBuilder);\n    _this = _callSuper(this, OperationCallBuilder, [serverUrl, \"operations\"]);\n    _this.url.segment(\"operations\");\n    return _this;\n  }\n  _inherits(OperationCallBuilder, _CallBuilder);\n  return _createClass(OperationCallBuilder, [{\n    key: \"operation\",\n    value: function operation(operationId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([operationId]);\n      return builder;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forClaimableBalance\",\n    value: function forClaimableBalance(claimableBalanceId) {\n      return this.forEndpoint(\"claimable_balances\", claimableBalanceId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forTransaction\",\n    value: function forTransaction(transactionId) {\n      return this.forEndpoint(\"transactions\", transactionId);\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(poolId) {\n      return this.forEndpoint(\"liquidity_pools\", poolId);\n    }\n  }, {\n    key: \"includeFailed\",\n    value: function includeFailed(value) {\n      this.url.setQuery(\"include_failed\", value.toString());\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vb3BlcmF0aW9uX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiw0QkFBNEI7QUFDNUIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLDJCQUEyQiw0QkFBNEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vb3BlcmF0aW9uX2NhbGxfYnVpbGRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuT3BlcmF0aW9uQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIE9wZXJhdGlvbkNhbGxCdWlsZGVyID0gZXhwb3J0cy5PcGVyYXRpb25DYWxsQnVpbGRlciA9IGZ1bmN0aW9uIChfQ2FsbEJ1aWxkZXIpIHtcbiAgZnVuY3Rpb24gT3BlcmF0aW9uQ2FsbEJ1aWxkZXIoc2VydmVyVXJsKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPcGVyYXRpb25DYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIE9wZXJhdGlvbkNhbGxCdWlsZGVyLCBbc2VydmVyVXJsLCBcIm9wZXJhdGlvbnNcIl0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwib3BlcmF0aW9uc1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKE9wZXJhdGlvbkNhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKE9wZXJhdGlvbkNhbGxCdWlsZGVyLCBbe1xuICAgIGtleTogXCJvcGVyYXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlcmF0aW9uKG9wZXJhdGlvbklkKSB7XG4gICAgICB2YXIgYnVpbGRlciA9IG5ldyBfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKHRoaXMudXJsLmNsb25lKCkpO1xuICAgICAgYnVpbGRlci5maWx0ZXIucHVzaChbb3BlcmF0aW9uSWRdKTtcbiAgICAgIHJldHVybiBidWlsZGVyO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JBY2NvdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckFjY291bnQoYWNjb3VudElkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImFjY291bnRzXCIsIGFjY291bnRJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckNsYWltYWJsZUJhbGFuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yQ2xhaW1hYmxlQmFsYW5jZShjbGFpbWFibGVCYWxhbmNlSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwiY2xhaW1hYmxlX2JhbGFuY2VzXCIsIGNsYWltYWJsZUJhbGFuY2VJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckxlZGdlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JMZWRnZXIoc2VxdWVuY2UpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwibGVkZ2Vyc1wiLCBzZXF1ZW5jZS50b1N0cmluZygpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yVHJhbnNhY3Rpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yVHJhbnNhY3Rpb24odHJhbnNhY3Rpb25JZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJ0cmFuc2FjdGlvbnNcIiwgdHJhbnNhY3Rpb25JZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckxpcXVpZGl0eVBvb2xcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yTGlxdWlkaXR5UG9vbChwb29sSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwibGlxdWlkaXR5X3Bvb2xzXCIsIHBvb2xJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImluY2x1ZGVGYWlsZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5jbHVkZUZhaWxlZCh2YWx1ZSkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJpbmNsdWRlX2ZhaWxlZFwiLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js":
/*!************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OrderbookCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar OrderbookCallBuilder = exports.OrderbookCallBuilder = function (_CallBuilder) {\n  function OrderbookCallBuilder(serverUrl, selling, buying) {\n    var _this;\n    _classCallCheck(this, OrderbookCallBuilder);\n    _this = _callSuper(this, OrderbookCallBuilder, [serverUrl]);\n    _this.url.segment(\"order_book\");\n    if (!selling.isNative()) {\n      _this.url.setQuery(\"selling_asset_type\", selling.getAssetType());\n      _this.url.setQuery(\"selling_asset_code\", selling.getCode());\n      _this.url.setQuery(\"selling_asset_issuer\", selling.getIssuer());\n    } else {\n      _this.url.setQuery(\"selling_asset_type\", \"native\");\n    }\n    if (!buying.isNative()) {\n      _this.url.setQuery(\"buying_asset_type\", buying.getAssetType());\n      _this.url.setQuery(\"buying_asset_code\", buying.getCode());\n      _this.url.setQuery(\"buying_asset_issuer\", buying.getIssuer());\n    } else {\n      _this.url.setQuery(\"buying_asset_type\", \"native\");\n    }\n    return _this;\n  }\n  _inherits(OrderbookCallBuilder, _CallBuilder);\n  return _createClass(OrderbookCallBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vb3JkZXJib29rX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiw0QkFBNEI7QUFDNUIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLGlDQUFpQztBQUNqQywrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLDJCQUEyQiw0QkFBNEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9vcmRlcmJvb2tfY2FsbF9idWlsZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5PcmRlcmJvb2tDYWxsQnVpbGRlciA9IHZvaWQgMDtcbnZhciBfY2FsbF9idWlsZGVyID0gcmVxdWlyZShcIi4vY2FsbF9idWlsZGVyXCIpO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG52YXIgT3JkZXJib29rQ2FsbEJ1aWxkZXIgPSBleHBvcnRzLk9yZGVyYm9va0NhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBPcmRlcmJvb2tDYWxsQnVpbGRlcihzZXJ2ZXJVcmwsIHNlbGxpbmcsIGJ1eWluZykge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgT3JkZXJib29rQ2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBPcmRlcmJvb2tDYWxsQnVpbGRlciwgW3NlcnZlclVybF0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwib3JkZXJfYm9va1wiKTtcbiAgICBpZiAoIXNlbGxpbmcuaXNOYXRpdmUoKSkge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic2VsbGluZ19hc3NldF90eXBlXCIsIHNlbGxpbmcuZ2V0QXNzZXRUeXBlKCkpO1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic2VsbGluZ19hc3NldF9jb2RlXCIsIHNlbGxpbmcuZ2V0Q29kZSgpKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcInNlbGxpbmdfYXNzZXRfaXNzdWVyXCIsIHNlbGxpbmcuZ2V0SXNzdWVyKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzZWxsaW5nX2Fzc2V0X3R5cGVcIiwgXCJuYXRpdmVcIik7XG4gICAgfVxuICAgIGlmICghYnV5aW5nLmlzTmF0aXZlKCkpIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImJ1eWluZ19hc3NldF90eXBlXCIsIGJ1eWluZy5nZXRBc3NldFR5cGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJidXlpbmdfYXNzZXRfY29kZVwiLCBidXlpbmcuZ2V0Q29kZSgpKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImJ1eWluZ19hc3NldF9pc3N1ZXJcIiwgYnV5aW5nLmdldElzc3VlcigpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwiYnV5aW5nX2Fzc2V0X3R5cGVcIiwgXCJuYXRpdmVcIik7XG4gICAgfVxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoT3JkZXJib29rQ2FsbEJ1aWxkZXIsIF9DYWxsQnVpbGRlcik7XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoT3JkZXJib29rQ2FsbEJ1aWxkZXIpO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PaymentCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar PaymentCallBuilder = exports.PaymentCallBuilder = function (_CallBuilder) {\n  function PaymentCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, PaymentCallBuilder);\n    _this = _callSuper(this, PaymentCallBuilder, [serverUrl, \"payments\"]);\n    _this.url.segment(\"payments\");\n    return _this;\n  }\n  _inherits(PaymentCallBuilder, _CallBuilder);\n  return _createClass(PaymentCallBuilder, [{\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forTransaction\",\n    value: function forTransaction(transactionId) {\n      return this.forEndpoint(\"transactions\", transactionId);\n    }\n  }, {\n    key: \"includeFailed\",\n    value: function includeFailed(value) {\n      this.url.setQuery(\"include_failed\", value.toString());\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vcGF5bWVudF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMEJBQTBCO0FBQzFCLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSix5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vcGF5bWVudF9jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlBheW1lbnRDYWxsQnVpbGRlciA9IHZvaWQgMDtcbnZhciBfY2FsbF9idWlsZGVyID0gcmVxdWlyZShcIi4vY2FsbF9idWlsZGVyXCIpO1xuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG52YXIgUGF5bWVudENhbGxCdWlsZGVyID0gZXhwb3J0cy5QYXltZW50Q2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIFBheW1lbnRDYWxsQnVpbGRlcihzZXJ2ZXJVcmwpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBheW1lbnRDYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIFBheW1lbnRDYWxsQnVpbGRlciwgW3NlcnZlclVybCwgXCJwYXltZW50c1wiXSk7XG4gICAgX3RoaXMudXJsLnNlZ21lbnQoXCJwYXltZW50c1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKFBheW1lbnRDYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhQYXltZW50Q2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImZvckFjY291bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yQWNjb3VudChhY2NvdW50SWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwiYWNjb3VudHNcIiwgYWNjb3VudElkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yTGVkZ2VyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckxlZGdlcihzZXF1ZW5jZSkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJsZWRnZXJzXCIsIHNlcXVlbmNlLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JUcmFuc2FjdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JUcmFuc2FjdGlvbih0cmFuc2FjdGlvbklkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcInRyYW5zYWN0aW9uc1wiLCB0cmFuc2FjdGlvbklkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaW5jbHVkZUZhaWxlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbmNsdWRlRmFpbGVkKHZhbHVlKSB7XG4gICAgICB0aGlzLnVybC5zZXRRdWVyeShcImluY2x1ZGVfZmFpbGVkXCIsIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/server.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/server.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SUBMIT_TRANSACTION_TIMEOUT = exports.HorizonServer = void 0;\nvar _bignumber = _interopRequireDefault(__webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.js\"));\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nvar _config = __webpack_require__(/*! ../config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/index.js\");\nvar _account_call_builder = __webpack_require__(/*! ./account_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/account_call_builder.js\");\nvar _account_response = __webpack_require__(/*! ./account_response */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js\");\nvar _assets_call_builder = __webpack_require__(/*! ./assets_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js\");\nvar _claimable_balances_call_builder = __webpack_require__(/*! ./claimable_balances_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js\");\nvar _effect_call_builder = __webpack_require__(/*! ./effect_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js\");\nvar _friendbot_builder = __webpack_require__(/*! ./friendbot_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js\");\nvar _ledger_call_builder = __webpack_require__(/*! ./ledger_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js\");\nvar _liquidity_pool_call_builder = __webpack_require__(/*! ./liquidity_pool_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js\");\nvar _offer_call_builder = __webpack_require__(/*! ./offer_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js\");\nvar _operation_call_builder = __webpack_require__(/*! ./operation_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js\");\nvar _orderbook_call_builder = __webpack_require__(/*! ./orderbook_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js\");\nvar _payment_call_builder = __webpack_require__(/*! ./payment_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js\");\nvar _strict_receive_path_call_builder = __webpack_require__(/*! ./strict_receive_path_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js\");\nvar _strict_send_path_call_builder = __webpack_require__(/*! ./strict_send_path_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js\");\nvar _trade_aggregation_call_builder = __webpack_require__(/*! ./trade_aggregation_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js\");\nvar _trades_call_builder = __webpack_require__(/*! ./trades_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js\");\nvar _transaction_call_builder = __webpack_require__(/*! ./transaction_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js\");\nvar _horizon_axios_client = _interopRequireWildcard(__webpack_require__(/*! ./horizon_axios_client */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1000;\nvar STROOPS_IN_LUMEN = 10000000;\nvar ACCOUNT_REQUIRES_MEMO = \"MQ==\";\nfunction getAmountInLumens(amt) {\n  return new _bignumber.default(amt).div(STROOPS_IN_LUMEN).toString();\n}\nvar HorizonServer = exports.HorizonServer = function () {\n  function HorizonServer(serverURL) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, HorizonServer);\n    this.serverURL = (0, _urijs.default)(serverURL);\n    var allowHttp = typeof opts.allowHttp === \"undefined\" ? _config.Config.isAllowHttp() : opts.allowHttp;\n    var customHeaders = {};\n    if (opts.appName) {\n      customHeaders[\"X-App-Name\"] = opts.appName;\n    }\n    if (opts.appVersion) {\n      customHeaders[\"X-App-Version\"] = opts.appVersion;\n    }\n    if (opts.authToken) {\n      customHeaders[\"X-Auth-Token\"] = opts.authToken;\n    }\n    if (opts.headers) {\n      Object.assign(customHeaders, opts.headers);\n    }\n    if (Object.keys(customHeaders).length > 0) {\n      _horizon_axios_client.default.interceptors.request.use(function (config) {\n        config.headers = config.headers || {};\n        config.headers = Object.assign(config.headers, customHeaders);\n        return config;\n      });\n    }\n    if (this.serverURL.protocol() !== \"https\" && !allowHttp) {\n      throw new Error(\"Cannot connect to insecure horizon server\");\n    }\n  }\n  return _createClass(HorizonServer, [{\n    key: \"fetchTimebounds\",\n    value: (function () {\n      var _fetchTimebounds = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(seconds) {\n        var _isRetry,\n          currentTime,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _isRetry = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n              currentTime = (0, _horizon_axios_client.getCurrentServerTime)(this.serverURL.hostname());\n              if (!currentTime) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                minTime: 0,\n                maxTime: currentTime + seconds\n              });\n            case 4:\n              if (!_isRetry) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                minTime: 0,\n                maxTime: Math.floor(new Date().getTime() / 1000) + seconds\n              });\n            case 6:\n              _context.next = 8;\n              return _horizon_axios_client.default.get((0, _urijs.default)(this.serverURL).toString());\n            case 8:\n              return _context.abrupt(\"return\", this.fetchTimebounds(seconds, true));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function fetchTimebounds(_x) {\n        return _fetchTimebounds.apply(this, arguments);\n      }\n      return fetchTimebounds;\n    }())\n  }, {\n    key: \"fetchBaseFee\",\n    value: (function () {\n      var _fetchBaseFee = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.feeStats();\n            case 2:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", parseInt(response.last_ledger_base_fee, 10) || 100);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function fetchBaseFee() {\n        return _fetchBaseFee.apply(this, arguments);\n      }\n      return fetchBaseFee;\n    }())\n  }, {\n    key: \"feeStats\",\n    value: (function () {\n      var _feeStats = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {\n        var cb;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              cb = new _call_builder.CallBuilder((0, _urijs.default)(this.serverURL));\n              cb.filter.push([\"fee_stats\"]);\n              return _context3.abrupt(\"return\", cb.call());\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function feeStats() {\n        return _feeStats.apply(this, arguments);\n      }\n      return feeStats;\n    }())\n  }, {\n    key: \"root\",\n    value: (function () {\n      var _root = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {\n        var cb;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              cb = new _call_builder.CallBuilder((0, _urijs.default)(this.serverURL));\n              return _context4.abrupt(\"return\", cb.call());\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function root() {\n        return _root.apply(this, arguments);\n      }\n      return root;\n    }())\n  }, {\n    key: \"submitTransaction\",\n    value: (function () {\n      var _submitTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(transaction) {\n        var opts,\n          tx,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              opts = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {\n                skipMemoRequiredCheck: false\n              };\n              if (opts.skipMemoRequiredCheck) {\n                _context5.next = 4;\n                break;\n              }\n              _context5.next = 4;\n              return this.checkMemoRequired(transaction);\n            case 4:\n              tx = encodeURIComponent(transaction.toEnvelope().toXDR().toString(\"base64\"));\n              return _context5.abrupt(\"return\", _horizon_axios_client.default.post((0, _urijs.default)(this.serverURL).segment(\"transactions\").toString(), \"tx=\".concat(tx), {\n                timeout: SUBMIT_TRANSACTION_TIMEOUT\n              }).then(function (response) {\n                if (!response.data.result_xdr) {\n                  return response.data;\n                }\n                var responseXDR = _stellarBase.xdr.TransactionResult.fromXDR(response.data.result_xdr, \"base64\");\n                var results = responseXDR.result().value();\n                var offerResults;\n                var hasManageOffer;\n                if (results.length) {\n                  offerResults = results.map(function (result, i) {\n                    if (result.value().switch().name !== \"manageBuyOffer\" && result.value().switch().name !== \"manageSellOffer\") {\n                      return null;\n                    }\n                    hasManageOffer = true;\n                    var amountBought = new _bignumber.default(0);\n                    var amountSold = new _bignumber.default(0);\n                    var offerSuccess = result.value().value().success();\n                    var offersClaimed = offerSuccess.offersClaimed().map(function (offerClaimedAtom) {\n                      var offerClaimed = offerClaimedAtom.value();\n                      var sellerId = \"\";\n                      switch (offerClaimedAtom.switch()) {\n                        case _stellarBase.xdr.ClaimAtomType.claimAtomTypeV0():\n                          sellerId = _stellarBase.StrKey.encodeEd25519PublicKey(offerClaimed.sellerEd25519());\n                          break;\n                        case _stellarBase.xdr.ClaimAtomType.claimAtomTypeOrderBook():\n                          sellerId = _stellarBase.StrKey.encodeEd25519PublicKey(offerClaimed.sellerId().ed25519());\n                          break;\n                        default:\n                          throw new Error(\"Invalid offer result type: \".concat(offerClaimedAtom.switch()));\n                      }\n                      var claimedOfferAmountBought = new _bignumber.default(offerClaimed.amountBought().toString());\n                      var claimedOfferAmountSold = new _bignumber.default(offerClaimed.amountSold().toString());\n                      amountBought = amountBought.plus(claimedOfferAmountSold);\n                      amountSold = amountSold.plus(claimedOfferAmountBought);\n                      var sold = _stellarBase.Asset.fromOperation(offerClaimed.assetSold());\n                      var bought = _stellarBase.Asset.fromOperation(offerClaimed.assetBought());\n                      var assetSold = {\n                        type: sold.getAssetType(),\n                        assetCode: sold.getCode(),\n                        issuer: sold.getIssuer()\n                      };\n                      var assetBought = {\n                        type: bought.getAssetType(),\n                        assetCode: bought.getCode(),\n                        issuer: bought.getIssuer()\n                      };\n                      return {\n                        sellerId: sellerId,\n                        offerId: offerClaimed.offerId().toString(),\n                        assetSold: assetSold,\n                        amountSold: getAmountInLumens(claimedOfferAmountSold),\n                        assetBought: assetBought,\n                        amountBought: getAmountInLumens(claimedOfferAmountBought)\n                      };\n                    });\n                    var effect = offerSuccess.offer().switch().name;\n                    var currentOffer;\n                    if (typeof offerSuccess.offer().value === \"function\" && offerSuccess.offer().value()) {\n                      var offerXDR = offerSuccess.offer().value();\n                      currentOffer = {\n                        offerId: offerXDR.offerId().toString(),\n                        selling: {},\n                        buying: {},\n                        amount: getAmountInLumens(offerXDR.amount().toString()),\n                        price: {\n                          n: offerXDR.price().n(),\n                          d: offerXDR.price().d()\n                        }\n                      };\n                      var selling = _stellarBase.Asset.fromOperation(offerXDR.selling());\n                      currentOffer.selling = {\n                        type: selling.getAssetType(),\n                        assetCode: selling.getCode(),\n                        issuer: selling.getIssuer()\n                      };\n                      var buying = _stellarBase.Asset.fromOperation(offerXDR.buying());\n                      currentOffer.buying = {\n                        type: buying.getAssetType(),\n                        assetCode: buying.getCode(),\n                        issuer: buying.getIssuer()\n                      };\n                    }\n                    return {\n                      offersClaimed: offersClaimed,\n                      effect: effect,\n                      operationIndex: i,\n                      currentOffer: currentOffer,\n                      amountBought: getAmountInLumens(amountBought),\n                      amountSold: getAmountInLumens(amountSold),\n                      isFullyOpen: !offersClaimed.length && effect !== \"manageOfferDeleted\",\n                      wasPartiallyFilled: !!offersClaimed.length && effect !== \"manageOfferDeleted\",\n                      wasImmediatelyFilled: !!offersClaimed.length && effect === \"manageOfferDeleted\",\n                      wasImmediatelyDeleted: !offersClaimed.length && effect === \"manageOfferDeleted\"\n                    };\n                  }).filter(function (result) {\n                    return !!result;\n                  });\n                }\n                return _objectSpread(_objectSpread({}, response.data), {}, {\n                  offerResults: hasManageOffer ? offerResults : undefined\n                });\n              }).catch(function (response) {\n                if (response instanceof Error) {\n                  return Promise.reject(response);\n                }\n                return Promise.reject(new _errors.BadResponseError(\"Transaction submission failed. Server responded: \".concat(response.status, \" \").concat(response.statusText), response.data));\n              }));\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function submitTransaction(_x2) {\n        return _submitTransaction.apply(this, arguments);\n      }\n      return submitTransaction;\n    }())\n  }, {\n    key: \"submitAsyncTransaction\",\n    value: (function () {\n      var _submitAsyncTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(transaction) {\n        var opts,\n          tx,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              opts = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {\n                skipMemoRequiredCheck: false\n              };\n              if (opts.skipMemoRequiredCheck) {\n                _context6.next = 4;\n                break;\n              }\n              _context6.next = 4;\n              return this.checkMemoRequired(transaction);\n            case 4:\n              tx = encodeURIComponent(transaction.toEnvelope().toXDR().toString(\"base64\"));\n              return _context6.abrupt(\"return\", _horizon_axios_client.default.post((0, _urijs.default)(this.serverURL).segment(\"transactions_async\").toString(), \"tx=\".concat(tx)).then(function (response) {\n                return response.data;\n              }).catch(function (response) {\n                if (response instanceof Error) {\n                  return Promise.reject(response);\n                }\n                return Promise.reject(new _errors.BadResponseError(\"Transaction submission failed. Server responded: \".concat(response.status, \" \").concat(response.statusText), response.data));\n              }));\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function submitAsyncTransaction(_x3) {\n        return _submitAsyncTransaction.apply(this, arguments);\n      }\n      return submitAsyncTransaction;\n    }())\n  }, {\n    key: \"accounts\",\n    value: function accounts() {\n      return new _account_call_builder.AccountCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"claimableBalances\",\n    value: function claimableBalances() {\n      return new _claimable_balances_call_builder.ClaimableBalanceCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"ledgers\",\n    value: function ledgers() {\n      return new _ledger_call_builder.LedgerCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"transactions\",\n    value: function transactions() {\n      return new _transaction_call_builder.TransactionCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"offers\",\n    value: function offers() {\n      return new _offer_call_builder.OfferCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"orderbook\",\n    value: function orderbook(selling, buying) {\n      return new _orderbook_call_builder.OrderbookCallBuilder((0, _urijs.default)(this.serverURL), selling, buying);\n    }\n  }, {\n    key: \"trades\",\n    value: function trades() {\n      return new _trades_call_builder.TradesCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"operations\",\n    value: function operations() {\n      return new _operation_call_builder.OperationCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"liquidityPools\",\n    value: function liquidityPools() {\n      return new _liquidity_pool_call_builder.LiquidityPoolCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"strictReceivePaths\",\n    value: function strictReceivePaths(source, destinationAsset, destinationAmount) {\n      return new _strict_receive_path_call_builder.StrictReceivePathCallBuilder((0, _urijs.default)(this.serverURL), source, destinationAsset, destinationAmount);\n    }\n  }, {\n    key: \"strictSendPaths\",\n    value: function strictSendPaths(sourceAsset, sourceAmount, destination) {\n      return new _strict_send_path_call_builder.StrictSendPathCallBuilder((0, _urijs.default)(this.serverURL), sourceAsset, sourceAmount, destination);\n    }\n  }, {\n    key: \"payments\",\n    value: function payments() {\n      return new _payment_call_builder.PaymentCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"effects\",\n    value: function effects() {\n      return new _effect_call_builder.EffectCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"friendbot\",\n    value: function friendbot(address) {\n      return new _friendbot_builder.FriendbotBuilder((0, _urijs.default)(this.serverURL), address);\n    }\n  }, {\n    key: \"assets\",\n    value: function assets() {\n      return new _assets_call_builder.AssetsCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"loadAccount\",\n    value: (function () {\n      var _loadAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7(accountId) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this.accounts().accountId(accountId).call();\n            case 2:\n              res = _context7.sent;\n              return _context7.abrupt(\"return\", new _account_response.AccountResponse(res));\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function loadAccount(_x4) {\n        return _loadAccount.apply(this, arguments);\n      }\n      return loadAccount;\n    }())\n  }, {\n    key: \"tradeAggregation\",\n    value: function tradeAggregation(base, counter, start_time, end_time, resolution, offset) {\n      return new _trade_aggregation_call_builder.TradeAggregationCallBuilder((0, _urijs.default)(this.serverURL), base, counter, start_time, end_time, resolution, offset);\n    }\n  }, {\n    key: \"checkMemoRequired\",\n    value: (function () {\n      var _checkMemoRequired = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(transaction) {\n        var destinations, i, operation, destination, account;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (transaction instanceof _stellarBase.FeeBumpTransaction) {\n                transaction = transaction.innerTransaction;\n              }\n              if (!(transaction.memo.type !== \"none\")) {\n                _context8.next = 3;\n                break;\n              }\n              return _context8.abrupt(\"return\");\n            case 3:\n              destinations = new Set();\n              i = 0;\n            case 5:\n              if (!(i < transaction.operations.length)) {\n                _context8.next = 36;\n                break;\n              }\n              operation = transaction.operations[i];\n              _context8.t0 = operation.type;\n              _context8.next = _context8.t0 === \"payment\" ? 10 : _context8.t0 === \"pathPaymentStrictReceive\" ? 10 : _context8.t0 === \"pathPaymentStrictSend\" ? 10 : _context8.t0 === \"accountMerge\" ? 10 : 11;\n              break;\n            case 10:\n              return _context8.abrupt(\"break\", 12);\n            case 11:\n              return _context8.abrupt(\"continue\", 33);\n            case 12:\n              destination = operation.destination;\n              if (!destinations.has(destination)) {\n                _context8.next = 15;\n                break;\n              }\n              return _context8.abrupt(\"continue\", 33);\n            case 15:\n              destinations.add(destination);\n              if (!destination.startsWith(\"M\")) {\n                _context8.next = 18;\n                break;\n              }\n              return _context8.abrupt(\"continue\", 33);\n            case 18:\n              _context8.prev = 18;\n              _context8.next = 21;\n              return this.loadAccount(destination);\n            case 21:\n              account = _context8.sent;\n              if (!(account.data_attr[\"config.memo_required\"] === ACCOUNT_REQUIRES_MEMO)) {\n                _context8.next = 24;\n                break;\n              }\n              throw new _errors.AccountRequiresMemoError(\"account requires memo\", destination, i);\n            case 24:\n              _context8.next = 33;\n              break;\n            case 26:\n              _context8.prev = 26;\n              _context8.t1 = _context8[\"catch\"](18);\n              if (!(_context8.t1 instanceof _errors.AccountRequiresMemoError)) {\n                _context8.next = 30;\n                break;\n              }\n              throw _context8.t1;\n            case 30:\n              if (_context8.t1 instanceof _errors.NotFoundError) {\n                _context8.next = 32;\n                break;\n              }\n              throw _context8.t1;\n            case 32:\n              return _context8.abrupt(\"continue\", 33);\n            case 33:\n              i += 1;\n              _context8.next = 5;\n              break;\n            case 36:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[18, 26]]);\n      }));\n      function checkMemoRequired(_x5) {\n        return _checkMemoRequired.apply(this, arguments);\n      }\n      return checkMemoRequired;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/server_api.js":
/*!************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/server_api.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ServerApi = void 0;\nvar _horizon_api = __webpack_require__(/*! ./horizon_api */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js\");\nvar Effects = _interopRequireWildcard(__webpack_require__(/*! ./types/effects */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/types/effects.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar ServerApi;\n(function (_ServerApi) {\n  var EffectType = _ServerApi.EffectType = Effects.EffectType;\n  var TradeType = function (TradeType) {\n    TradeType[\"all\"] = \"all\";\n    TradeType[\"liquidityPools\"] = \"liquidity_pool\";\n    TradeType[\"orderbook\"] = \"orderbook\";\n    return TradeType;\n  }({});\n  _ServerApi.TradeType = TradeType;\n  var OperationResponseType = _horizon_api.HorizonApi.OperationResponseType;\n  var OperationResponseTypeI = _horizon_api.HorizonApi.OperationResponseTypeI;\n})(ServerApi || (exports.ServerApi = ServerApi = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc2VydmVyX2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixpQkFBaUI7QUFDakIsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQWU7QUFDMUMsc0NBQXNDLG1CQUFPLENBQUMsc0ZBQWlCO0FBQy9ELHVDQUF1QywrQ0FBK0MsMENBQTBDLDBFQUEwRSxtQkFBbUI7QUFDN04seUNBQXlDLHVDQUF1Qyw2RUFBNkUsY0FBYyxxQ0FBcUMsb0NBQW9DLFVBQVUsaUJBQWlCLGdFQUFnRSwwQ0FBMEMsOEJBQThCLDBEQUEwRCx3RUFBd0U7QUFDemhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQixpQkFBaUIsaUJBQWlCIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9zZXJ2ZXJfYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5TZXJ2ZXJBcGkgPSB2b2lkIDA7XG52YXIgX2hvcml6b25fYXBpID0gcmVxdWlyZShcIi4vaG9yaXpvbl9hcGlcIik7XG52YXIgRWZmZWN0cyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL3R5cGVzL2VmZmVjdHNcIikpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgV2Vha01hcCkgcmV0dXJuIG51bGw7IHZhciByID0gbmV3IFdlYWtNYXAoKSwgdCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKGUpIHsgcmV0dXJuIGUgPyB0IDogcjsgfSkoZSk7IH1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKGUsIHIpIHsgaWYgKCFyICYmIGUgJiYgZS5fX2VzTW9kdWxlKSByZXR1cm4gZTsgaWYgKG51bGwgPT09IGUgfHwgXCJvYmplY3RcIiAhPSBfdHlwZW9mKGUpICYmIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSkgcmV0dXJuIHsgZGVmYXVsdDogZSB9OyB2YXIgdCA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShyKTsgaWYgKHQgJiYgdC5oYXMoZSkpIHJldHVybiB0LmdldChlKTsgdmFyIG4gPSB7IF9fcHJvdG9fXzogbnVsbCB9LCBhID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIHUgaW4gZSkgaWYgKFwiZGVmYXVsdFwiICE9PSB1ICYmIHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSwgdSkpIHsgdmFyIGkgPSBhID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCB1KSA6IG51bGw7IGkgJiYgKGkuZ2V0IHx8IGkuc2V0KSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCB1LCBpKSA6IG5bdV0gPSBlW3VdOyB9IHJldHVybiBuLmRlZmF1bHQgPSBlLCB0ICYmIHQuc2V0KGUsIG4pLCBuOyB9XG52YXIgU2VydmVyQXBpO1xuKGZ1bmN0aW9uIChfU2VydmVyQXBpKSB7XG4gIHZhciBFZmZlY3RUeXBlID0gX1NlcnZlckFwaS5FZmZlY3RUeXBlID0gRWZmZWN0cy5FZmZlY3RUeXBlO1xuICB2YXIgVHJhZGVUeXBlID0gZnVuY3Rpb24gKFRyYWRlVHlwZSkge1xuICAgIFRyYWRlVHlwZVtcImFsbFwiXSA9IFwiYWxsXCI7XG4gICAgVHJhZGVUeXBlW1wibGlxdWlkaXR5UG9vbHNcIl0gPSBcImxpcXVpZGl0eV9wb29sXCI7XG4gICAgVHJhZGVUeXBlW1wib3JkZXJib29rXCJdID0gXCJvcmRlcmJvb2tcIjtcbiAgICByZXR1cm4gVHJhZGVUeXBlO1xuICB9KHt9KTtcbiAgX1NlcnZlckFwaS5UcmFkZVR5cGUgPSBUcmFkZVR5cGU7XG4gIHZhciBPcGVyYXRpb25SZXNwb25zZVR5cGUgPSBfaG9yaXpvbl9hcGkuSG9yaXpvbkFwaS5PcGVyYXRpb25SZXNwb25zZVR5cGU7XG4gIHZhciBPcGVyYXRpb25SZXNwb25zZVR5cGVJID0gX2hvcml6b25fYXBpLkhvcml6b25BcGkuT3BlcmF0aW9uUmVzcG9uc2VUeXBlSTtcbn0pKFNlcnZlckFwaSB8fCAoZXhwb3J0cy5TZXJ2ZXJBcGkgPSBTZXJ2ZXJBcGkgPSB7fSkpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/server_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StrictReceivePathCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar StrictReceivePathCallBuilder = exports.StrictReceivePathCallBuilder = function (_CallBuilder) {\n  function StrictReceivePathCallBuilder(serverUrl, source, destinationAsset, destinationAmount) {\n    var _this;\n    _classCallCheck(this, StrictReceivePathCallBuilder);\n    _this = _callSuper(this, StrictReceivePathCallBuilder, [serverUrl]);\n    _this.url.segment(\"paths/strict-receive\");\n    if (typeof source === \"string\") {\n      _this.url.setQuery(\"source_account\", source);\n    } else {\n      var assets = source.map(function (asset) {\n        if (asset.isNative()) {\n          return \"native\";\n        }\n        return \"\".concat(asset.getCode(), \":\").concat(asset.getIssuer());\n      }).join(\",\");\n      _this.url.setQuery(\"source_assets\", assets);\n    }\n    _this.url.setQuery(\"destination_amount\", destinationAmount);\n    if (!destinationAsset.isNative()) {\n      _this.url.setQuery(\"destination_asset_type\", destinationAsset.getAssetType());\n      _this.url.setQuery(\"destination_asset_code\", destinationAsset.getCode());\n      _this.url.setQuery(\"destination_asset_issuer\", destinationAsset.getIssuer());\n    } else {\n      _this.url.setQuery(\"destination_asset_type\", \"native\");\n    }\n    return _this;\n  }\n  _inherits(StrictReceivePathCallBuilder, _CallBuilder);\n  return _createClass(StrictReceivePathCallBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc3RyaWN0X3JlY2VpdmVfcGF0aF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysb0NBQW9DO0FBQ3BDLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSixtQ0FBbUMsb0NBQW9DO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc3RyaWN0X3JlY2VpdmVfcGF0aF9jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlN0cmljdFJlY2VpdmVQYXRoQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIFN0cmljdFJlY2VpdmVQYXRoQ2FsbEJ1aWxkZXIgPSBleHBvcnRzLlN0cmljdFJlY2VpdmVQYXRoQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIFN0cmljdFJlY2VpdmVQYXRoQ2FsbEJ1aWxkZXIoc2VydmVyVXJsLCBzb3VyY2UsIGRlc3RpbmF0aW9uQXNzZXQsIGRlc3RpbmF0aW9uQW1vdW50KSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTdHJpY3RSZWNlaXZlUGF0aENhbGxCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgU3RyaWN0UmVjZWl2ZVBhdGhDYWxsQnVpbGRlciwgW3NlcnZlclVybF0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwicGF0aHMvc3RyaWN0LXJlY2VpdmVcIik7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcInNvdXJjZV9hY2NvdW50XCIsIHNvdXJjZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhc3NldHMgPSBzb3VyY2UubWFwKGZ1bmN0aW9uIChhc3NldCkge1xuICAgICAgICBpZiAoYXNzZXQuaXNOYXRpdmUoKSkge1xuICAgICAgICAgIHJldHVybiBcIm5hdGl2ZVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChhc3NldC5nZXRDb2RlKCksIFwiOlwiKS5jb25jYXQoYXNzZXQuZ2V0SXNzdWVyKCkpO1xuICAgICAgfSkuam9pbihcIixcIik7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzb3VyY2VfYXNzZXRzXCIsIGFzc2V0cyk7XG4gICAgfVxuICAgIF90aGlzLnVybC5zZXRRdWVyeShcImRlc3RpbmF0aW9uX2Ftb3VudFwiLCBkZXN0aW5hdGlvbkFtb3VudCk7XG4gICAgaWYgKCFkZXN0aW5hdGlvbkFzc2V0LmlzTmF0aXZlKCkpIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImRlc3RpbmF0aW9uX2Fzc2V0X3R5cGVcIiwgZGVzdGluYXRpb25Bc3NldC5nZXRBc3NldFR5cGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJkZXN0aW5hdGlvbl9hc3NldF9jb2RlXCIsIGRlc3RpbmF0aW9uQXNzZXQuZ2V0Q29kZSgpKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImRlc3RpbmF0aW9uX2Fzc2V0X2lzc3VlclwiLCBkZXN0aW5hdGlvbkFzc2V0LmdldElzc3VlcigpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwiZGVzdGluYXRpb25fYXNzZXRfdHlwZVwiLCBcIm5hdGl2ZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhTdHJpY3RSZWNlaXZlUGF0aENhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKFN0cmljdFJlY2VpdmVQYXRoQ2FsbEJ1aWxkZXIpO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StrictSendPathCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar StrictSendPathCallBuilder = exports.StrictSendPathCallBuilder = function (_CallBuilder) {\n  function StrictSendPathCallBuilder(serverUrl, sourceAsset, sourceAmount, destination) {\n    var _this;\n    _classCallCheck(this, StrictSendPathCallBuilder);\n    _this = _callSuper(this, StrictSendPathCallBuilder, [serverUrl]);\n    _this.url.segment(\"paths/strict-send\");\n    if (sourceAsset.isNative()) {\n      _this.url.setQuery(\"source_asset_type\", \"native\");\n    } else {\n      _this.url.setQuery(\"source_asset_type\", sourceAsset.getAssetType());\n      _this.url.setQuery(\"source_asset_code\", sourceAsset.getCode());\n      _this.url.setQuery(\"source_asset_issuer\", sourceAsset.getIssuer());\n    }\n    _this.url.setQuery(\"source_amount\", sourceAmount);\n    if (typeof destination === \"string\") {\n      _this.url.setQuery(\"destination_account\", destination);\n    } else {\n      var assets = destination.map(function (asset) {\n        if (asset.isNative()) {\n          return \"native\";\n        }\n        return \"\".concat(asset.getCode(), \":\").concat(asset.getIssuer());\n      }).join(\",\");\n      _this.url.setQuery(\"destination_assets\", assets);\n    }\n    return _this;\n  }\n  _inherits(StrictSendPathCallBuilder, _CallBuilder);\n  return _createClass(StrictSendPathCallBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc3RyaWN0X3NlbmRfcGF0aF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsaUNBQWlDO0FBQ2pDLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSixnQ0FBZ0MsaUNBQWlDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc3RyaWN0X3NlbmRfcGF0aF9jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIFN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIgPSBleHBvcnRzLlN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIFN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIoc2VydmVyVXJsLCBzb3VyY2VBc3NldCwgc291cmNlQW1vdW50LCBkZXN0aW5hdGlvbikge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3RyaWN0U2VuZFBhdGhDYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIFN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcInBhdGhzL3N0cmljdC1zZW5kXCIpO1xuICAgIGlmIChzb3VyY2VBc3NldC5pc05hdGl2ZSgpKSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzb3VyY2VfYXNzZXRfdHlwZVwiLCBcIm5hdGl2ZVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic291cmNlX2Fzc2V0X3R5cGVcIiwgc291cmNlQXNzZXQuZ2V0QXNzZXRUeXBlKCkpO1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic291cmNlX2Fzc2V0X2NvZGVcIiwgc291cmNlQXNzZXQuZ2V0Q29kZSgpKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcInNvdXJjZV9hc3NldF9pc3N1ZXJcIiwgc291cmNlQXNzZXQuZ2V0SXNzdWVyKCkpO1xuICAgIH1cbiAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzb3VyY2VfYW1vdW50XCIsIHNvdXJjZUFtb3VudCk7XG4gICAgaWYgKHR5cGVvZiBkZXN0aW5hdGlvbiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwiZGVzdGluYXRpb25fYWNjb3VudFwiLCBkZXN0aW5hdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhc3NldHMgPSBkZXN0aW5hdGlvbi5tYXAoZnVuY3Rpb24gKGFzc2V0KSB7XG4gICAgICAgIGlmIChhc3NldC5pc05hdGl2ZSgpKSB7XG4gICAgICAgICAgcmV0dXJuIFwibmF0aXZlXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KGFzc2V0LmdldENvZGUoKSwgXCI6XCIpLmNvbmNhdChhc3NldC5nZXRJc3N1ZXIoKSk7XG4gICAgICB9KS5qb2luKFwiLFwiKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImRlc3RpbmF0aW9uX2Fzc2V0c1wiLCBhc3NldHMpO1xuICAgIH1cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKFN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIsIF9DYWxsQnVpbGRlcik7XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoU3RyaWN0U2VuZFBhdGhDYWxsQnVpbGRlcik7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TradeAggregationCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/index.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar allowedResolutions = [60000, 300000, 900000, 3600000, 86400000, 604800000];\nvar TradeAggregationCallBuilder = exports.TradeAggregationCallBuilder = function (_CallBuilder) {\n  function TradeAggregationCallBuilder(serverUrl, base, counter, start_time, end_time, resolution, offset) {\n    var _this;\n    _classCallCheck(this, TradeAggregationCallBuilder);\n    _this = _callSuper(this, TradeAggregationCallBuilder, [serverUrl]);\n    _this.url.segment(\"trade_aggregations\");\n    if (!base.isNative()) {\n      _this.url.setQuery(\"base_asset_type\", base.getAssetType());\n      _this.url.setQuery(\"base_asset_code\", base.getCode());\n      _this.url.setQuery(\"base_asset_issuer\", base.getIssuer());\n    } else {\n      _this.url.setQuery(\"base_asset_type\", \"native\");\n    }\n    if (!counter.isNative()) {\n      _this.url.setQuery(\"counter_asset_type\", counter.getAssetType());\n      _this.url.setQuery(\"counter_asset_code\", counter.getCode());\n      _this.url.setQuery(\"counter_asset_issuer\", counter.getIssuer());\n    } else {\n      _this.url.setQuery(\"counter_asset_type\", \"native\");\n    }\n    if (typeof start_time !== \"number\" || typeof end_time !== \"number\") {\n      throw new _errors.BadRequestError(\"Invalid time bounds\", [start_time, end_time]);\n    } else {\n      _this.url.setQuery(\"start_time\", start_time.toString());\n      _this.url.setQuery(\"end_time\", end_time.toString());\n    }\n    if (!_this.isValidResolution(resolution)) {\n      throw new _errors.BadRequestError(\"Invalid resolution\", resolution);\n    } else {\n      _this.url.setQuery(\"resolution\", resolution.toString());\n    }\n    if (!_this.isValidOffset(offset, resolution)) {\n      throw new _errors.BadRequestError(\"Invalid offset\", offset);\n    } else {\n      _this.url.setQuery(\"offset\", offset.toString());\n    }\n    return _this;\n  }\n  _inherits(TradeAggregationCallBuilder, _CallBuilder);\n  return _createClass(TradeAggregationCallBuilder, [{\n    key: \"isValidResolution\",\n    value: function isValidResolution(resolution) {\n      return allowedResolutions.some(function (allowed) {\n        return allowed === resolution;\n      });\n    }\n  }, {\n    key: \"isValidOffset\",\n    value: function isValidOffset(offset, resolution) {\n      var hour = 3600000;\n      return !(offset > resolution || offset >= 24 * hour || offset % hour !== 0);\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vdHJhZGVfYWdncmVnYXRpb25fY2FsbF9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLG1DQUFtQztBQUNuQyxvQkFBb0IsbUJBQU8sQ0FBQyxvRkFBZ0I7QUFDNUMsY0FBYyxtQkFBTyxDQUFDLHVFQUFXO0FBQ2pDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KO0FBQ0Esa0NBQWtDLG1DQUFtQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi90cmFkZV9hZ2dyZWdhdGlvbl9jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlRyYWRlQWdncmVnYXRpb25DYWxsQnVpbGRlciA9IHZvaWQgMDtcbnZhciBfY2FsbF9idWlsZGVyID0gcmVxdWlyZShcIi4vY2FsbF9idWlsZGVyXCIpO1xudmFyIF9lcnJvcnMgPSByZXF1aXJlKFwiLi4vZXJyb3JzXCIpO1xuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG52YXIgYWxsb3dlZFJlc29sdXRpb25zID0gWzYwMDAwLCAzMDAwMDAsIDkwMDAwMCwgMzYwMDAwMCwgODY0MDAwMDAsIDYwNDgwMDAwMF07XG52YXIgVHJhZGVBZ2dyZWdhdGlvbkNhbGxCdWlsZGVyID0gZXhwb3J0cy5UcmFkZUFnZ3JlZ2F0aW9uQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIFRyYWRlQWdncmVnYXRpb25DYWxsQnVpbGRlcihzZXJ2ZXJVcmwsIGJhc2UsIGNvdW50ZXIsIHN0YXJ0X3RpbWUsIGVuZF90aW1lLCByZXNvbHV0aW9uLCBvZmZzZXQpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyYWRlQWdncmVnYXRpb25DYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIFRyYWRlQWdncmVnYXRpb25DYWxsQnVpbGRlciwgW3NlcnZlclVybF0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwidHJhZGVfYWdncmVnYXRpb25zXCIpO1xuICAgIGlmICghYmFzZS5pc05hdGl2ZSgpKSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJiYXNlX2Fzc2V0X3R5cGVcIiwgYmFzZS5nZXRBc3NldFR5cGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJiYXNlX2Fzc2V0X2NvZGVcIiwgYmFzZS5nZXRDb2RlKCkpO1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwiYmFzZV9hc3NldF9pc3N1ZXJcIiwgYmFzZS5nZXRJc3N1ZXIoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImJhc2VfYXNzZXRfdHlwZVwiLCBcIm5hdGl2ZVwiKTtcbiAgICB9XG4gICAgaWYgKCFjb3VudGVyLmlzTmF0aXZlKCkpIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImNvdW50ZXJfYXNzZXRfdHlwZVwiLCBjb3VudGVyLmdldEFzc2V0VHlwZSgpKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImNvdW50ZXJfYXNzZXRfY29kZVwiLCBjb3VudGVyLmdldENvZGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJjb3VudGVyX2Fzc2V0X2lzc3VlclwiLCBjb3VudGVyLmdldElzc3VlcigpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwiY291bnRlcl9hc3NldF90eXBlXCIsIFwibmF0aXZlXCIpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHN0YXJ0X3RpbWUgIT09IFwibnVtYmVyXCIgfHwgdHlwZW9mIGVuZF90aW1lICE9PSBcIm51bWJlclwiKSB7XG4gICAgICB0aHJvdyBuZXcgX2Vycm9ycy5CYWRSZXF1ZXN0RXJyb3IoXCJJbnZhbGlkIHRpbWUgYm91bmRzXCIsIFtzdGFydF90aW1lLCBlbmRfdGltZV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzdGFydF90aW1lXCIsIHN0YXJ0X3RpbWUudG9TdHJpbmcoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJlbmRfdGltZVwiLCBlbmRfdGltZS50b1N0cmluZygpKTtcbiAgICB9XG4gICAgaWYgKCFfdGhpcy5pc1ZhbGlkUmVzb2x1dGlvbihyZXNvbHV0aW9uKSkge1xuICAgICAgdGhyb3cgbmV3IF9lcnJvcnMuQmFkUmVxdWVzdEVycm9yKFwiSW52YWxpZCByZXNvbHV0aW9uXCIsIHJlc29sdXRpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJyZXNvbHV0aW9uXCIsIHJlc29sdXRpb24udG9TdHJpbmcoKSk7XG4gICAgfVxuICAgIGlmICghX3RoaXMuaXNWYWxpZE9mZnNldChvZmZzZXQsIHJlc29sdXRpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgX2Vycm9ycy5CYWRSZXF1ZXN0RXJyb3IoXCJJbnZhbGlkIG9mZnNldFwiLCBvZmZzZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJvZmZzZXRcIiwgb2Zmc2V0LnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKFRyYWRlQWdncmVnYXRpb25DYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhUcmFkZUFnZ3JlZ2F0aW9uQ2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImlzVmFsaWRSZXNvbHV0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzVmFsaWRSZXNvbHV0aW9uKHJlc29sdXRpb24pIHtcbiAgICAgIHJldHVybiBhbGxvd2VkUmVzb2x1dGlvbnMuc29tZShmdW5jdGlvbiAoYWxsb3dlZCkge1xuICAgICAgICByZXR1cm4gYWxsb3dlZCA9PT0gcmVzb2x1dGlvbjtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc1ZhbGlkT2Zmc2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzVmFsaWRPZmZzZXQob2Zmc2V0LCByZXNvbHV0aW9uKSB7XG4gICAgICB2YXIgaG91ciA9IDM2MDAwMDA7XG4gICAgICByZXR1cm4gIShvZmZzZXQgPiByZXNvbHV0aW9uIHx8IG9mZnNldCA+PSAyNCAqIGhvdXIgfHwgb2Zmc2V0ICUgaG91ciAhPT0gMCk7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TradesCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar TradesCallBuilder = exports.TradesCallBuilder = function (_CallBuilder) {\n  function TradesCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, TradesCallBuilder);\n    _this = _callSuper(this, TradesCallBuilder, [serverUrl, \"trades\"]);\n    _this.url.segment(\"trades\");\n    return _this;\n  }\n  _inherits(TradesCallBuilder, _CallBuilder);\n  return _createClass(TradesCallBuilder, [{\n    key: \"forAssetPair\",\n    value: function forAssetPair(base, counter) {\n      if (!base.isNative()) {\n        this.url.setQuery(\"base_asset_type\", base.getAssetType());\n        this.url.setQuery(\"base_asset_code\", base.getCode());\n        this.url.setQuery(\"base_asset_issuer\", base.getIssuer());\n      } else {\n        this.url.setQuery(\"base_asset_type\", \"native\");\n      }\n      if (!counter.isNative()) {\n        this.url.setQuery(\"counter_asset_type\", counter.getAssetType());\n        this.url.setQuery(\"counter_asset_code\", counter.getCode());\n        this.url.setQuery(\"counter_asset_issuer\", counter.getIssuer());\n      } else {\n        this.url.setQuery(\"counter_asset_type\", \"native\");\n      }\n      return this;\n    }\n  }, {\n    key: \"forOffer\",\n    value: function forOffer(offerId) {\n      this.url.setQuery(\"offer_id\", offerId);\n      return this;\n    }\n  }, {\n    key: \"forType\",\n    value: function forType(tradeType) {\n      this.url.setQuery(\"trade_type\", tradeType);\n      return this;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(liquidityPoolId) {\n      return this.forEndpoint(\"liquidity_pools\", liquidityPoolId);\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TransactionCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar TransactionCallBuilder = exports.TransactionCallBuilder = function (_CallBuilder) {\n  function TransactionCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, TransactionCallBuilder);\n    _this = _callSuper(this, TransactionCallBuilder, [serverUrl, \"transactions\"]);\n    _this.url.segment(\"transactions\");\n    return _this;\n  }\n  _inherits(TransactionCallBuilder, _CallBuilder);\n  return _createClass(TransactionCallBuilder, [{\n    key: \"transaction\",\n    value: function transaction(transactionId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([transactionId]);\n      return builder;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forClaimableBalance\",\n    value: function forClaimableBalance(claimableBalanceId) {\n      return this.forEndpoint(\"claimable_balances\", claimableBalanceId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(poolId) {\n      return this.forEndpoint(\"liquidity_pools\", poolId);\n    }\n  }, {\n    key: \"includeFailed\",\n    value: function includeFailed(value) {\n      this.url.setQuery(\"include_failed\", value.toString());\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vdHJhbnNhY3Rpb25fY2FsbF9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDhCQUE4QjtBQUM5QixvQkFBb0IsbUJBQU8sQ0FBQyxvRkFBZ0I7QUFDNUMsaUNBQWlDO0FBQ2pDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLCtCQUErQjtBQUMvQiw0Q0FBNEMsdUVBQXVFLG1HQUFtRztBQUN0TixxQ0FBcUMseUdBQXlHO0FBQzlJLHVDQUF1QyxNQUFNLHFGQUFxRixNQUFNLGFBQWEsMkVBQTJFLGFBQWE7QUFDN08sOEJBQThCLCtGQUErRixpREFBaUQ7QUFDOUssMkJBQTJCLHFIQUFxSCxnREFBZ0QsZUFBZSw0Q0FBNEMsMkNBQTJDLGNBQWM7QUFDcFQsaUNBQWlDLGtHQUFrRyw0QkFBNEI7QUFDL0osNkJBQTZCLDhCQUE4QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi90cmFuc2FjdGlvbl9jYWxsX2J1aWxkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlRyYW5zYWN0aW9uQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIFRyYW5zYWN0aW9uQ2FsbEJ1aWxkZXIgPSBleHBvcnRzLlRyYW5zYWN0aW9uQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIFRyYW5zYWN0aW9uQ2FsbEJ1aWxkZXIoc2VydmVyVXJsKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUcmFuc2FjdGlvbkNhbGxCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgVHJhbnNhY3Rpb25DYWxsQnVpbGRlciwgW3NlcnZlclVybCwgXCJ0cmFuc2FjdGlvbnNcIl0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwidHJhbnNhY3Rpb25zXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoVHJhbnNhY3Rpb25DYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhUcmFuc2FjdGlvbkNhbGxCdWlsZGVyLCBbe1xuICAgIGtleTogXCJ0cmFuc2FjdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0cmFuc2FjdGlvbih0cmFuc2FjdGlvbklkKSB7XG4gICAgICB2YXIgYnVpbGRlciA9IG5ldyBfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKHRoaXMudXJsLmNsb25lKCkpO1xuICAgICAgYnVpbGRlci5maWx0ZXIucHVzaChbdHJhbnNhY3Rpb25JZF0pO1xuICAgICAgcmV0dXJuIGJ1aWxkZXI7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckFjY291bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yQWNjb3VudChhY2NvdW50SWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwiYWNjb3VudHNcIiwgYWNjb3VudElkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yQ2xhaW1hYmxlQmFsYW5jZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JDbGFpbWFibGVCYWxhbmNlKGNsYWltYWJsZUJhbGFuY2VJZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJjbGFpbWFibGVfYmFsYW5jZXNcIiwgY2xhaW1hYmxlQmFsYW5jZUlkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yTGVkZ2VyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckxlZGdlcihzZXF1ZW5jZSkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJsZWRnZXJzXCIsIHNlcXVlbmNlLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMaXF1aWRpdHlQb29sXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckxpcXVpZGl0eVBvb2wocG9vbElkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImxpcXVpZGl0eV9wb29sc1wiLCBwb29sSWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpbmNsdWRlRmFpbGVkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluY2x1ZGVGYWlsZWQodmFsdWUpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiaW5jbHVkZV9mYWlsZWRcIiwgdmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/types/effects.js":
/*!***************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/types/effects.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EffectType = void 0;\nvar EffectType = exports.EffectType = function (EffectType) {\n  EffectType[EffectType[\"account_created\"] = 0] = \"account_created\";\n  EffectType[EffectType[\"account_removed\"] = 1] = \"account_removed\";\n  EffectType[EffectType[\"account_credited\"] = 2] = \"account_credited\";\n  EffectType[EffectType[\"account_debited\"] = 3] = \"account_debited\";\n  EffectType[EffectType[\"account_thresholds_updated\"] = 4] = \"account_thresholds_updated\";\n  EffectType[EffectType[\"account_home_domain_updated\"] = 5] = \"account_home_domain_updated\";\n  EffectType[EffectType[\"account_flags_updated\"] = 6] = \"account_flags_updated\";\n  EffectType[EffectType[\"account_inflation_destination_updated\"] = 7] = \"account_inflation_destination_updated\";\n  EffectType[EffectType[\"signer_created\"] = 10] = \"signer_created\";\n  EffectType[EffectType[\"signer_removed\"] = 11] = \"signer_removed\";\n  EffectType[EffectType[\"signer_updated\"] = 12] = \"signer_updated\";\n  EffectType[EffectType[\"trustline_created\"] = 20] = \"trustline_created\";\n  EffectType[EffectType[\"trustline_removed\"] = 21] = \"trustline_removed\";\n  EffectType[EffectType[\"trustline_updated\"] = 22] = \"trustline_updated\";\n  EffectType[EffectType[\"trustline_authorized\"] = 23] = \"trustline_authorized\";\n  EffectType[EffectType[\"trustline_deauthorized\"] = 24] = \"trustline_deauthorized\";\n  EffectType[EffectType[\"trustline_authorized_to_maintain_liabilities\"] = 25] = \"trustline_authorized_to_maintain_liabilities\";\n  EffectType[EffectType[\"trustline_flags_updated\"] = 26] = \"trustline_flags_updated\";\n  EffectType[EffectType[\"offer_created\"] = 30] = \"offer_created\";\n  EffectType[EffectType[\"offer_removed\"] = 31] = \"offer_removed\";\n  EffectType[EffectType[\"offer_updated\"] = 32] = \"offer_updated\";\n  EffectType[EffectType[\"trade\"] = 33] = \"trade\";\n  EffectType[EffectType[\"data_created\"] = 40] = \"data_created\";\n  EffectType[EffectType[\"data_removed\"] = 41] = \"data_removed\";\n  EffectType[EffectType[\"data_updated\"] = 42] = \"data_updated\";\n  EffectType[EffectType[\"sequence_bumped\"] = 43] = \"sequence_bumped\";\n  EffectType[EffectType[\"claimable_balance_created\"] = 50] = \"claimable_balance_created\";\n  EffectType[EffectType[\"claimable_balance_claimant_created\"] = 51] = \"claimable_balance_claimant_created\";\n  EffectType[EffectType[\"claimable_balance_claimed\"] = 52] = \"claimable_balance_claimed\";\n  EffectType[EffectType[\"account_sponsorship_created\"] = 60] = \"account_sponsorship_created\";\n  EffectType[EffectType[\"account_sponsorship_updated\"] = 61] = \"account_sponsorship_updated\";\n  EffectType[EffectType[\"account_sponsorship_removed\"] = 62] = \"account_sponsorship_removed\";\n  EffectType[EffectType[\"trustline_sponsorship_created\"] = 63] = \"trustline_sponsorship_created\";\n  EffectType[EffectType[\"trustline_sponsorship_updated\"] = 64] = \"trustline_sponsorship_updated\";\n  EffectType[EffectType[\"trustline_sponsorship_removed\"] = 65] = \"trustline_sponsorship_removed\";\n  EffectType[EffectType[\"data_sponsorship_created\"] = 66] = \"data_sponsorship_created\";\n  EffectType[EffectType[\"data_sponsorship_updated\"] = 67] = \"data_sponsorship_updated\";\n  EffectType[EffectType[\"data_sponsorship_removed\"] = 68] = \"data_sponsorship_removed\";\n  EffectType[EffectType[\"claimable_balance_sponsorship_created\"] = 69] = \"claimable_balance_sponsorship_created\";\n  EffectType[EffectType[\"claimable_balance_sponsorship_updated\"] = 70] = \"claimable_balance_sponsorship_updated\";\n  EffectType[EffectType[\"claimable_balance_sponsorship_removed\"] = 71] = \"claimable_balance_sponsorship_removed\";\n  EffectType[EffectType[\"signer_sponsorship_created\"] = 72] = \"signer_sponsorship_created\";\n  EffectType[EffectType[\"signer_sponsorship_updated\"] = 73] = \"signer_sponsorship_updated\";\n  EffectType[EffectType[\"signer_sponsorship_removed\"] = 74] = \"signer_sponsorship_removed\";\n  EffectType[EffectType[\"claimable_balance_clawed_back\"] = 80] = \"claimable_balance_clawed_back\";\n  EffectType[EffectType[\"liquidity_pool_deposited\"] = 90] = \"liquidity_pool_deposited\";\n  EffectType[EffectType[\"liquidity_pool_withdrew\"] = 91] = \"liquidity_pool_withdrew\";\n  EffectType[EffectType[\"liquidity_pool_trade\"] = 92] = \"liquidity_pool_trade\";\n  EffectType[EffectType[\"liquidity_pool_created\"] = 93] = \"liquidity_pool_created\";\n  EffectType[EffectType[\"liquidity_pool_removed\"] = 94] = \"liquidity_pool_removed\";\n  EffectType[EffectType[\"liquidity_pool_revoked\"] = 95] = \"liquidity_pool_revoked\";\n  EffectType[EffectType[\"contract_credited\"] = 96] = \"contract_credited\";\n  EffectType[EffectType[\"contract_debited\"] = 97] = \"contract_debited\";\n  return EffectType;\n}({});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vdHlwZXMvZWZmZWN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBa0I7QUFDbEIsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEdBQUciLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL3R5cGVzL2VmZmVjdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkVmZmVjdFR5cGUgPSB2b2lkIDA7XG52YXIgRWZmZWN0VHlwZSA9IGV4cG9ydHMuRWZmZWN0VHlwZSA9IGZ1bmN0aW9uIChFZmZlY3RUeXBlKSB7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImFjY291bnRfY3JlYXRlZFwiXSA9IDBdID0gXCJhY2NvdW50X2NyZWF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wiYWNjb3VudF9yZW1vdmVkXCJdID0gMV0gPSBcImFjY291bnRfcmVtb3ZlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJhY2NvdW50X2NyZWRpdGVkXCJdID0gMl0gPSBcImFjY291bnRfY3JlZGl0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wiYWNjb3VudF9kZWJpdGVkXCJdID0gM10gPSBcImFjY291bnRfZGViaXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJhY2NvdW50X3RocmVzaG9sZHNfdXBkYXRlZFwiXSA9IDRdID0gXCJhY2NvdW50X3RocmVzaG9sZHNfdXBkYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJhY2NvdW50X2hvbWVfZG9tYWluX3VwZGF0ZWRcIl0gPSA1XSA9IFwiYWNjb3VudF9ob21lX2RvbWFpbl91cGRhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImFjY291bnRfZmxhZ3NfdXBkYXRlZFwiXSA9IDZdID0gXCJhY2NvdW50X2ZsYWdzX3VwZGF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wiYWNjb3VudF9pbmZsYXRpb25fZGVzdGluYXRpb25fdXBkYXRlZFwiXSA9IDddID0gXCJhY2NvdW50X2luZmxhdGlvbl9kZXN0aW5hdGlvbl91cGRhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcInNpZ25lcl9jcmVhdGVkXCJdID0gMTBdID0gXCJzaWduZXJfY3JlYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJzaWduZXJfcmVtb3ZlZFwiXSA9IDExXSA9IFwic2lnbmVyX3JlbW92ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wic2lnbmVyX3VwZGF0ZWRcIl0gPSAxMl0gPSBcInNpZ25lcl91cGRhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcInRydXN0bGluZV9jcmVhdGVkXCJdID0gMjBdID0gXCJ0cnVzdGxpbmVfY3JlYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJ0cnVzdGxpbmVfcmVtb3ZlZFwiXSA9IDIxXSA9IFwidHJ1c3RsaW5lX3JlbW92ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1widHJ1c3RsaW5lX3VwZGF0ZWRcIl0gPSAyMl0gPSBcInRydXN0bGluZV91cGRhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcInRydXN0bGluZV9hdXRob3JpemVkXCJdID0gMjNdID0gXCJ0cnVzdGxpbmVfYXV0aG9yaXplZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJ0cnVzdGxpbmVfZGVhdXRob3JpemVkXCJdID0gMjRdID0gXCJ0cnVzdGxpbmVfZGVhdXRob3JpemVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcInRydXN0bGluZV9hdXRob3JpemVkX3RvX21haW50YWluX2xpYWJpbGl0aWVzXCJdID0gMjVdID0gXCJ0cnVzdGxpbmVfYXV0aG9yaXplZF90b19tYWludGFpbl9saWFiaWxpdGllc1wiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJ0cnVzdGxpbmVfZmxhZ3NfdXBkYXRlZFwiXSA9IDI2XSA9IFwidHJ1c3RsaW5lX2ZsYWdzX3VwZGF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wib2ZmZXJfY3JlYXRlZFwiXSA9IDMwXSA9IFwib2ZmZXJfY3JlYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJvZmZlcl9yZW1vdmVkXCJdID0gMzFdID0gXCJvZmZlcl9yZW1vdmVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcIm9mZmVyX3VwZGF0ZWRcIl0gPSAzMl0gPSBcIm9mZmVyX3VwZGF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1widHJhZGVcIl0gPSAzM10gPSBcInRyYWRlXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImRhdGFfY3JlYXRlZFwiXSA9IDQwXSA9IFwiZGF0YV9jcmVhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImRhdGFfcmVtb3ZlZFwiXSA9IDQxXSA9IFwiZGF0YV9yZW1vdmVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImRhdGFfdXBkYXRlZFwiXSA9IDQyXSA9IFwiZGF0YV91cGRhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcInNlcXVlbmNlX2J1bXBlZFwiXSA9IDQzXSA9IFwic2VxdWVuY2VfYnVtcGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImNsYWltYWJsZV9iYWxhbmNlX2NyZWF0ZWRcIl0gPSA1MF0gPSBcImNsYWltYWJsZV9iYWxhbmNlX2NyZWF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wiY2xhaW1hYmxlX2JhbGFuY2VfY2xhaW1hbnRfY3JlYXRlZFwiXSA9IDUxXSA9IFwiY2xhaW1hYmxlX2JhbGFuY2VfY2xhaW1hbnRfY3JlYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJjbGFpbWFibGVfYmFsYW5jZV9jbGFpbWVkXCJdID0gNTJdID0gXCJjbGFpbWFibGVfYmFsYW5jZV9jbGFpbWVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImFjY291bnRfc3BvbnNvcnNoaXBfY3JlYXRlZFwiXSA9IDYwXSA9IFwiYWNjb3VudF9zcG9uc29yc2hpcF9jcmVhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImFjY291bnRfc3BvbnNvcnNoaXBfdXBkYXRlZFwiXSA9IDYxXSA9IFwiYWNjb3VudF9zcG9uc29yc2hpcF91cGRhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImFjY291bnRfc3BvbnNvcnNoaXBfcmVtb3ZlZFwiXSA9IDYyXSA9IFwiYWNjb3VudF9zcG9uc29yc2hpcF9yZW1vdmVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcInRydXN0bGluZV9zcG9uc29yc2hpcF9jcmVhdGVkXCJdID0gNjNdID0gXCJ0cnVzdGxpbmVfc3BvbnNvcnNoaXBfY3JlYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJ0cnVzdGxpbmVfc3BvbnNvcnNoaXBfdXBkYXRlZFwiXSA9IDY0XSA9IFwidHJ1c3RsaW5lX3Nwb25zb3JzaGlwX3VwZGF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1widHJ1c3RsaW5lX3Nwb25zb3JzaGlwX3JlbW92ZWRcIl0gPSA2NV0gPSBcInRydXN0bGluZV9zcG9uc29yc2hpcF9yZW1vdmVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImRhdGFfc3BvbnNvcnNoaXBfY3JlYXRlZFwiXSA9IDY2XSA9IFwiZGF0YV9zcG9uc29yc2hpcF9jcmVhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImRhdGFfc3BvbnNvcnNoaXBfdXBkYXRlZFwiXSA9IDY3XSA9IFwiZGF0YV9zcG9uc29yc2hpcF91cGRhdGVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImRhdGFfc3BvbnNvcnNoaXBfcmVtb3ZlZFwiXSA9IDY4XSA9IFwiZGF0YV9zcG9uc29yc2hpcF9yZW1vdmVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImNsYWltYWJsZV9iYWxhbmNlX3Nwb25zb3JzaGlwX2NyZWF0ZWRcIl0gPSA2OV0gPSBcImNsYWltYWJsZV9iYWxhbmNlX3Nwb25zb3JzaGlwX2NyZWF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wiY2xhaW1hYmxlX2JhbGFuY2Vfc3BvbnNvcnNoaXBfdXBkYXRlZFwiXSA9IDcwXSA9IFwiY2xhaW1hYmxlX2JhbGFuY2Vfc3BvbnNvcnNoaXBfdXBkYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJjbGFpbWFibGVfYmFsYW5jZV9zcG9uc29yc2hpcF9yZW1vdmVkXCJdID0gNzFdID0gXCJjbGFpbWFibGVfYmFsYW5jZV9zcG9uc29yc2hpcF9yZW1vdmVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcInNpZ25lcl9zcG9uc29yc2hpcF9jcmVhdGVkXCJdID0gNzJdID0gXCJzaWduZXJfc3BvbnNvcnNoaXBfY3JlYXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJzaWduZXJfc3BvbnNvcnNoaXBfdXBkYXRlZFwiXSA9IDczXSA9IFwic2lnbmVyX3Nwb25zb3JzaGlwX3VwZGF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wic2lnbmVyX3Nwb25zb3JzaGlwX3JlbW92ZWRcIl0gPSA3NF0gPSBcInNpZ25lcl9zcG9uc29yc2hpcF9yZW1vdmVkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImNsYWltYWJsZV9iYWxhbmNlX2NsYXdlZF9iYWNrXCJdID0gODBdID0gXCJjbGFpbWFibGVfYmFsYW5jZV9jbGF3ZWRfYmFja1wiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJsaXF1aWRpdHlfcG9vbF9kZXBvc2l0ZWRcIl0gPSA5MF0gPSBcImxpcXVpZGl0eV9wb29sX2RlcG9zaXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJsaXF1aWRpdHlfcG9vbF93aXRoZHJld1wiXSA9IDkxXSA9IFwibGlxdWlkaXR5X3Bvb2xfd2l0aGRyZXdcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wibGlxdWlkaXR5X3Bvb2xfdHJhZGVcIl0gPSA5Ml0gPSBcImxpcXVpZGl0eV9wb29sX3RyYWRlXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImxpcXVpZGl0eV9wb29sX2NyZWF0ZWRcIl0gPSA5M10gPSBcImxpcXVpZGl0eV9wb29sX2NyZWF0ZWRcIjtcbiAgRWZmZWN0VHlwZVtFZmZlY3RUeXBlW1wibGlxdWlkaXR5X3Bvb2xfcmVtb3ZlZFwiXSA9IDk0XSA9IFwibGlxdWlkaXR5X3Bvb2xfcmVtb3ZlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJsaXF1aWRpdHlfcG9vbF9yZXZva2VkXCJdID0gOTVdID0gXCJsaXF1aWRpdHlfcG9vbF9yZXZva2VkXCI7XG4gIEVmZmVjdFR5cGVbRWZmZWN0VHlwZVtcImNvbnRyYWN0X2NyZWRpdGVkXCJdID0gOTZdID0gXCJjb250cmFjdF9jcmVkaXRlZFwiO1xuICBFZmZlY3RUeXBlW0VmZmVjdFR5cGVbXCJjb250cmFjdF9kZWJpdGVkXCJdID0gOTddID0gXCJjb250cmFjdF9kZWJpdGVkXCI7XG4gIHJldHVybiBFZmZlY3RUeXBlO1xufSh7fSk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/types/effects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/http-client/axios-client.js":
/*!******************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/http-client/axios-client.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.create = exports.axiosClient = void 0;\nvar _axios = _interopRequireDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar axiosClient = exports.axiosClient = _axios.default;\nvar create = exports.create = _axios.default.create;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2h0dHAtY2xpZW50L2F4aW9zLWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixjQUFjLEdBQUcsbUJBQW1CO0FBQ3BDLG9DQUFvQyxtQkFBTyxDQUFDLDZEQUFPO0FBQ25ELHFDQUFxQyxpQ0FBaUM7QUFDdEUsa0JBQWtCLG1CQUFtQjtBQUNyQyxhQUFhLGNBQWMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9odHRwLWNsaWVudC9heGlvcy1jbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNyZWF0ZSA9IGV4cG9ydHMuYXhpb3NDbGllbnQgPSB2b2lkIDA7XG52YXIgX2F4aW9zID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiYXhpb3NcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChlKSB7IHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsgfVxudmFyIGF4aW9zQ2xpZW50ID0gZXhwb3J0cy5heGlvc0NsaWVudCA9IF9heGlvcy5kZWZhdWx0O1xudmFyIGNyZWF0ZSA9IGV4cG9ydHMuY3JlYXRlID0gX2F4aW9zLmRlZmF1bHQuY3JlYXRlOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/http-client/axios-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/http-client/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/http-client/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  httpClient: true,\n  create: true\n};\nexports.httpClient = exports.create = void 0;\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/http-client/types.js\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});\nvar httpClient;\nvar create;\nif (true) {\n  var axiosModule = __webpack_require__(/*! ./axios-client */ \"(ssr)/./node_modules/stellar-sdk/lib/http-client/axios-client.js\");\n  exports.httpClient = httpClient = axiosModule.axiosClient;\n  exports.create = create = axiosModule.create;\n} else { var fetchModule; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2h0dHAtY2xpZW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLEdBQUcsY0FBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsMEVBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0EsSUFBSSxJQUFJO0FBQ1Isb0JBQW9CLG1CQUFPLENBQUMsd0ZBQWdCO0FBQzVDLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsY0FBYztBQUNoQixFQUFFLEtBQUsiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9odHRwLWNsaWVudC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7XG4gIGh0dHBDbGllbnQ6IHRydWUsXG4gIGNyZWF0ZTogdHJ1ZVxufTtcbmV4cG9ydHMuaHR0cENsaWVudCA9IGV4cG9ydHMuY3JlYXRlID0gdm9pZCAwO1xudmFyIF90eXBlcyA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuT2JqZWN0LmtleXMoX3R5cGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfdHlwZXNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfdHlwZXNba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgaHR0cENsaWVudDtcbnZhciBjcmVhdGU7XG5pZiAodHJ1ZSkge1xuICB2YXIgYXhpb3NNb2R1bGUgPSByZXF1aXJlKCcuL2F4aW9zLWNsaWVudCcpO1xuICBleHBvcnRzLmh0dHBDbGllbnQgPSBodHRwQ2xpZW50ID0gYXhpb3NNb2R1bGUuYXhpb3NDbGllbnQ7XG4gIGV4cG9ydHMuY3JlYXRlID0gY3JlYXRlID0gYXhpb3NNb2R1bGUuY3JlYXRlO1xufSBlbHNlIHtcbiAgdmFyIGZldGNoTW9kdWxlID0gcmVxdWlyZSgnLi9mZXRjaC1jbGllbnQnKTtcbiAgZXhwb3J0cy5odHRwQ2xpZW50ID0gaHR0cENsaWVudCA9IGZldGNoTW9kdWxlLmZldGNoQ2xpZW50O1xuICBleHBvcnRzLmNyZWF0ZSA9IGNyZWF0ZSA9IGZldGNoTW9kdWxlLmNyZWF0ZTtcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/http-client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/http-client/types.js":
/*!***********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/http-client/types.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CancelToken = void 0;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar CancelToken = exports.CancelToken = function () {\n  function CancelToken(executor) {\n    var _this = this;\n    _classCallCheck(this, CancelToken);\n    var resolvePromise;\n    this.promise = new Promise(function (resolve) {\n      resolvePromise = resolve;\n    });\n    executor(function (reason) {\n      _this.reason = reason;\n      resolvePromise();\n    });\n  }\n  return _createClass(CancelToken, [{\n    key: \"throwIfRequested\",\n    value: function throwIfRequested() {\n      if (this.reason) {\n        throw new Error(this.reason);\n      }\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2h0dHAtY2xpZW50L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLG1CQUFtQjtBQUNuQixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsiL2hvbWUvVGFydW5TaW5naC9Eb2N1bWVudHMvc3RlbGxlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2h0dHAtY2xpZW50L3R5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5DYW5jZWxUb2tlbiA9IHZvaWQgMDtcbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbnZhciBDYW5jZWxUb2tlbiA9IGV4cG9ydHMuQ2FuY2VsVG9rZW4gPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FuY2VsVG9rZW4pO1xuICAgIHZhciByZXNvbHZlUHJvbWlzZTtcbiAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICAgIH0pO1xuICAgIGV4ZWN1dG9yKGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgIF90aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgICAgIHJlc29sdmVQcm9taXNlKCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhDYW5jZWxUb2tlbiwgW3tcbiAgICBrZXk6IFwidGhyb3dJZlJlcXVlc3RlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICAgICAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcih0aGlzLnJlYXNvbik7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG59KCk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/http-client/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/stellar-sdk/lib/index.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Config: true,\n  Utils: true,\n  StellarToml: true,\n  Federation: true,\n  WebAuth: true,\n  Friendbot: true,\n  Horizon: true,\n  rpc: true,\n  contract: true\n};\nObject.defineProperty(exports, \"Config\", ({\n  enumerable: true,\n  get: function get() {\n    return _config.Config;\n  }\n}));\nexports.StellarToml = exports.Horizon = exports.Friendbot = exports.Federation = void 0;\nObject.defineProperty(exports, \"Utils\", ({\n  enumerable: true,\n  get: function get() {\n    return _utils.Utils;\n  }\n}));\nexports.rpc = exports[\"default\"] = exports.contract = exports.WebAuth = void 0;\nvar _errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors/index.js\");\nObject.keys(_errors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _errors[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _errors[key];\n    }\n  });\n});\nvar _config = __webpack_require__(/*! ./config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/utils.js\");\nvar _StellarToml = _interopRequireWildcard(__webpack_require__(/*! ./stellartoml */ \"(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js\"));\nexports.StellarToml = _StellarToml;\nvar _Federation = _interopRequireWildcard(__webpack_require__(/*! ./federation */ \"(ssr)/./node_modules/stellar-sdk/lib/federation/index.js\"));\nexports.Federation = _Federation;\nvar _WebAuth = _interopRequireWildcard(__webpack_require__(/*! ./webauth */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/index.js\"));\nexports.WebAuth = _WebAuth;\nvar _Friendbot = _interopRequireWildcard(__webpack_require__(/*! ./friendbot */ \"(ssr)/./node_modules/stellar-sdk/lib/friendbot/index.js\"));\nexports.Friendbot = _Friendbot;\nvar _Horizon = _interopRequireWildcard(__webpack_require__(/*! ./horizon */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/index.js\"));\nexports.Horizon = _Horizon;\nvar _rpc = _interopRequireWildcard(__webpack_require__(/*! ./rpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\"));\nexports.rpc = _rpc;\nvar _contract = _interopRequireWildcard(__webpack_require__(/*! ./contract */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/index.js\"));\nexports.contract = _contract;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nObject.keys(_stellarBase).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _stellarBase[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stellarBase[key];\n    }\n  });\n});\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports[\"default\"] = module.exports;\nif (typeof global.__USE_AXIOS__ === 'undefined') {\n  global.__USE_AXIOS__ = true;\n}\nif (typeof global.__USE_EVENTSOURCE__ === 'undefined') {\n  global.__USE_EVENTSOURCE__ = false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixtQkFBbUIsR0FBRyxlQUFlLEdBQUcsaUJBQWlCLEdBQUcsa0JBQWtCO0FBQzlFLHlDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLFdBQVcsR0FBRyxrQkFBZSxHQUFHLGdCQUFnQixHQUFHLGVBQWU7QUFDbEUsY0FBYyxtQkFBTyxDQUFDLHNFQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLGdFQUFVO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyw4REFBUztBQUM5QiwyQ0FBMkMsbUJBQU8sQ0FBQyxnRkFBZTtBQUNsRSxtQkFBbUI7QUFDbkIsMENBQTBDLG1CQUFPLENBQUMsOEVBQWM7QUFDaEUsa0JBQWtCO0FBQ2xCLHVDQUF1QyxtQkFBTyxDQUFDLHdFQUFXO0FBQzFELGVBQWU7QUFDZix5Q0FBeUMsbUJBQU8sQ0FBQyw0RUFBYTtBQUM5RCxpQkFBaUI7QUFDakIsdUNBQXVDLG1CQUFPLENBQUMsd0VBQVc7QUFDMUQsZUFBZTtBQUNmLG1DQUFtQyxtQkFBTyxDQUFDLGdFQUFPO0FBQ2xELFdBQVc7QUFDWCx3Q0FBd0MsbUJBQU8sQ0FBQywwRUFBWTtBQUM1RCxnQkFBZ0I7QUFDaEIsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsdUNBQXVDLCtDQUErQywwQ0FBMEMsMEVBQTBFLG1CQUFtQjtBQUM3Tix5Q0FBeUMsdUNBQXVDLDZFQUE2RSxjQUFjLHFDQUFxQyxvQ0FBb0MsVUFBVSxpQkFBaUIsZ0VBQWdFLDBDQUEwQyw4QkFBOEIsMERBQTBELHdFQUF3RTtBQUN6aEIsZUFBZSxrQkFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7XG4gIENvbmZpZzogdHJ1ZSxcbiAgVXRpbHM6IHRydWUsXG4gIFN0ZWxsYXJUb21sOiB0cnVlLFxuICBGZWRlcmF0aW9uOiB0cnVlLFxuICBXZWJBdXRoOiB0cnVlLFxuICBGcmllbmRib3Q6IHRydWUsXG4gIEhvcml6b246IHRydWUsXG4gIHJwYzogdHJ1ZSxcbiAgY29udHJhY3Q6IHRydWVcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb25maWdcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2NvbmZpZy5Db25maWc7XG4gIH1cbn0pO1xuZXhwb3J0cy5TdGVsbGFyVG9tbCA9IGV4cG9ydHMuSG9yaXpvbiA9IGV4cG9ydHMuRnJpZW5kYm90ID0gZXhwb3J0cy5GZWRlcmF0aW9uID0gdm9pZCAwO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVXRpbHNcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX3V0aWxzLlV0aWxzO1xuICB9XG59KTtcbmV4cG9ydHMucnBjID0gZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5jb250cmFjdCA9IGV4cG9ydHMuV2ViQXV0aCA9IHZvaWQgMDtcbnZhciBfZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmtleXMoX2Vycm9ycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX2Vycm9yc1trZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9lcnJvcnNba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgX2NvbmZpZyA9IHJlcXVpcmUoXCIuL2NvbmZpZ1wiKTtcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbnZhciBfU3RlbGxhclRvbWwgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9zdGVsbGFydG9tbFwiKSk7XG5leHBvcnRzLlN0ZWxsYXJUb21sID0gX1N0ZWxsYXJUb21sO1xudmFyIF9GZWRlcmF0aW9uID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4vZmVkZXJhdGlvblwiKSk7XG5leHBvcnRzLkZlZGVyYXRpb24gPSBfRmVkZXJhdGlvbjtcbnZhciBfV2ViQXV0aCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL3dlYmF1dGhcIikpO1xuZXhwb3J0cy5XZWJBdXRoID0gX1dlYkF1dGg7XG52YXIgX0ZyaWVuZGJvdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL2ZyaWVuZGJvdFwiKSk7XG5leHBvcnRzLkZyaWVuZGJvdCA9IF9GcmllbmRib3Q7XG52YXIgX0hvcml6b24gPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9ob3Jpem9uXCIpKTtcbmV4cG9ydHMuSG9yaXpvbiA9IF9Ib3Jpem9uO1xudmFyIF9ycGMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9ycGNcIikpO1xuZXhwb3J0cy5ycGMgPSBfcnBjO1xudmFyIF9jb250cmFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL2NvbnRyYWN0XCIpKTtcbmV4cG9ydHMuY29udHJhY3QgPSBfY29udHJhY3Q7XG52YXIgX3N0ZWxsYXJCYXNlID0gcmVxdWlyZShcIkBzdGVsbGFyL3N0ZWxsYXItYmFzZVwiKTtcbk9iamVjdC5rZXlzKF9zdGVsbGFyQmFzZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3N0ZWxsYXJCYXNlW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX3N0ZWxsYXJCYXNlW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgV2Vha01hcCkgcmV0dXJuIG51bGw7IHZhciByID0gbmV3IFdlYWtNYXAoKSwgdCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKGUpIHsgcmV0dXJuIGUgPyB0IDogcjsgfSkoZSk7IH1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKGUsIHIpIHsgaWYgKCFyICYmIGUgJiYgZS5fX2VzTW9kdWxlKSByZXR1cm4gZTsgaWYgKG51bGwgPT09IGUgfHwgXCJvYmplY3RcIiAhPSBfdHlwZW9mKGUpICYmIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSkgcmV0dXJuIHsgZGVmYXVsdDogZSB9OyB2YXIgdCA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShyKTsgaWYgKHQgJiYgdC5oYXMoZSkpIHJldHVybiB0LmdldChlKTsgdmFyIG4gPSB7IF9fcHJvdG9fXzogbnVsbCB9LCBhID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIHUgaW4gZSkgaWYgKFwiZGVmYXVsdFwiICE9PSB1ICYmIHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSwgdSkpIHsgdmFyIGkgPSBhID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCB1KSA6IG51bGw7IGkgJiYgKGkuZ2V0IHx8IGkuc2V0KSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCB1LCBpKSA6IG5bdV0gPSBlW3VdOyB9IHJldHVybiBuLmRlZmF1bHQgPSBlLCB0ICYmIHQuc2V0KGUsIG4pLCBuOyB9XG52YXIgX2RlZmF1bHQgPSBleHBvcnRzLmRlZmF1bHQgPSBtb2R1bGUuZXhwb3J0cztcbmlmICh0eXBlb2YgZ2xvYmFsLl9fVVNFX0FYSU9TX18gPT09ICd1bmRlZmluZWQnKSB7XG4gIGdsb2JhbC5fX1VTRV9BWElPU19fID0gdHJ1ZTtcbn1cbmlmICh0eXBlb2YgZ2xvYmFsLl9fVVNFX0VWRU5UU09VUkNFX18gPT09ICd1bmRlZmluZWQnKSB7XG4gIGdsb2JhbC5fX1VTRV9FVkVOVFNPVVJDRV9fID0gZmFsc2U7XG59Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js":
/*!*************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/api.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nvar Api;\n(function (_Api) {\n  var GetTransactionStatus = function (GetTransactionStatus) {\n    GetTransactionStatus[\"SUCCESS\"] = \"SUCCESS\";\n    GetTransactionStatus[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    GetTransactionStatus[\"FAILED\"] = \"FAILED\";\n    return GetTransactionStatus;\n  }({});\n  _Api.GetTransactionStatus = GetTransactionStatus;\n  function isSimulationError(sim) {\n    return 'error' in sim;\n  }\n  _Api.isSimulationError = isSimulationError;\n  function isSimulationSuccess(sim) {\n    return 'transactionData' in sim;\n  }\n  _Api.isSimulationSuccess = isSimulationSuccess;\n  function isSimulationRestore(sim) {\n    return isSimulationSuccess(sim) && 'restorePreamble' in sim && !!sim.restorePreamble.transactionData;\n  }\n  _Api.isSimulationRestore = isSimulationRestore;\n  function isSimulationRaw(sim) {\n    return !sim._parsed;\n  }\n  _Api.isSimulationRaw = isSimulationRaw;\n})(Api || (exports.Api = Api = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9hcGkuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxHQUFHO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsVUFBVSxXQUFXLFdBQVciLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ycGMvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5BcGkgPSB2b2lkIDA7XG52YXIgQXBpO1xuKGZ1bmN0aW9uIChfQXBpKSB7XG4gIHZhciBHZXRUcmFuc2FjdGlvblN0YXR1cyA9IGZ1bmN0aW9uIChHZXRUcmFuc2FjdGlvblN0YXR1cykge1xuICAgIEdldFRyYW5zYWN0aW9uU3RhdHVzW1wiU1VDQ0VTU1wiXSA9IFwiU1VDQ0VTU1wiO1xuICAgIEdldFRyYW5zYWN0aW9uU3RhdHVzW1wiTk9UX0ZPVU5EXCJdID0gXCJOT1RfRk9VTkRcIjtcbiAgICBHZXRUcmFuc2FjdGlvblN0YXR1c1tcIkZBSUxFRFwiXSA9IFwiRkFJTEVEXCI7XG4gICAgcmV0dXJuIEdldFRyYW5zYWN0aW9uU3RhdHVzO1xuICB9KHt9KTtcbiAgX0FwaS5HZXRUcmFuc2FjdGlvblN0YXR1cyA9IEdldFRyYW5zYWN0aW9uU3RhdHVzO1xuICBmdW5jdGlvbiBpc1NpbXVsYXRpb25FcnJvcihzaW0pIHtcbiAgICByZXR1cm4gJ2Vycm9yJyBpbiBzaW07XG4gIH1cbiAgX0FwaS5pc1NpbXVsYXRpb25FcnJvciA9IGlzU2ltdWxhdGlvbkVycm9yO1xuICBmdW5jdGlvbiBpc1NpbXVsYXRpb25TdWNjZXNzKHNpbSkge1xuICAgIHJldHVybiAndHJhbnNhY3Rpb25EYXRhJyBpbiBzaW07XG4gIH1cbiAgX0FwaS5pc1NpbXVsYXRpb25TdWNjZXNzID0gaXNTaW11bGF0aW9uU3VjY2VzcztcbiAgZnVuY3Rpb24gaXNTaW11bGF0aW9uUmVzdG9yZShzaW0pIHtcbiAgICByZXR1cm4gaXNTaW11bGF0aW9uU3VjY2VzcyhzaW0pICYmICdyZXN0b3JlUHJlYW1ibGUnIGluIHNpbSAmJiAhIXNpbS5yZXN0b3JlUHJlYW1ibGUudHJhbnNhY3Rpb25EYXRhO1xuICB9XG4gIF9BcGkuaXNTaW11bGF0aW9uUmVzdG9yZSA9IGlzU2ltdWxhdGlvblJlc3RvcmU7XG4gIGZ1bmN0aW9uIGlzU2ltdWxhdGlvblJhdyhzaW0pIHtcbiAgICByZXR1cm4gIXNpbS5fcGFyc2VkO1xuICB9XG4gIF9BcGkuaXNTaW11bGF0aW9uUmF3ID0gaXNTaW11bGF0aW9uUmF3O1xufSkoQXBpIHx8IChleHBvcnRzLkFwaSA9IEFwaSA9IHt9KSk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js":
/*!***************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/axios.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.version = exports[\"default\"] = exports.AxiosClient = void 0;\nvar _httpClient = __webpack_require__(/*! ../http-client */ \"(ssr)/./node_modules/stellar-sdk/lib/http-client/index.js\");\nvar version = exports.version = \"13.3.0\";\nvar AxiosClient = exports.AxiosClient = (0, _httpClient.create)({\n  headers: {\n    'X-Client-Name': 'js-soroban-client',\n    'X-Client-Version': version\n  }\n});\nvar _default = exports[\"default\"] = AxiosClient;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9heGlvcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixlQUFlLEdBQUcsa0JBQWUsR0FBRyxtQkFBbUI7QUFDdkQsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCO0FBQzFDLGNBQWMsZUFBZTtBQUM3QixrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWUsa0JBQWUiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ycGMvYXhpb3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnZlcnNpb24gPSBleHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLkF4aW9zQ2xpZW50ID0gdm9pZCAwO1xudmFyIF9odHRwQ2xpZW50ID0gcmVxdWlyZShcIi4uL2h0dHAtY2xpZW50XCIpO1xudmFyIHZlcnNpb24gPSBleHBvcnRzLnZlcnNpb24gPSBcIjEzLjMuMFwiO1xudmFyIEF4aW9zQ2xpZW50ID0gZXhwb3J0cy5BeGlvc0NsaWVudCA9ICgwLCBfaHR0cENsaWVudC5jcmVhdGUpKHtcbiAgaGVhZGVyczoge1xuICAgICdYLUNsaWVudC1OYW1lJzogJ2pzLXNvcm9iYW4tY2xpZW50JyxcbiAgICAnWC1DbGllbnQtVmVyc2lvbic6IHZlcnNpb25cbiAgfVxufSk7XG52YXIgX2RlZmF1bHQgPSBleHBvcnRzLmRlZmF1bHQgPSBBeGlvc0NsaWVudDsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js":
/*!***************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/index.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Server: true,\n  BasicSleepStrategy: true,\n  LinearSleepStrategy: true,\n  Durability: true,\n  AxiosClient: true,\n  parseRawSimulation: true,\n  parseRawEvents: true\n};\nObject.defineProperty(exports, \"AxiosClient\", ({\n  enumerable: true,\n  get: function get() {\n    return _axios.default;\n  }\n}));\nObject.defineProperty(exports, \"BasicSleepStrategy\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.BasicSleepStrategy;\n  }\n}));\nObject.defineProperty(exports, \"Durability\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.Durability;\n  }\n}));\nObject.defineProperty(exports, \"LinearSleepStrategy\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.LinearSleepStrategy;\n  }\n}));\nObject.defineProperty(exports, \"Server\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.RpcServer;\n  }\n}));\nexports[\"default\"] = void 0;\nObject.defineProperty(exports, \"parseRawEvents\", ({\n  enumerable: true,\n  get: function get() {\n    return _parsers.parseRawEvents;\n  }\n}));\nObject.defineProperty(exports, \"parseRawSimulation\", ({\n  enumerable: true,\n  get: function get() {\n    return _parsers.parseRawSimulation;\n  }\n}));\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nObject.keys(_api).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _api[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _api[key];\n    }\n  });\n});\nvar _server = __webpack_require__(/*! ./server */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js\");\nvar _axios = _interopRequireDefault(__webpack_require__(/*! ./axios */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\"));\nvar _parsers = __webpack_require__(/*! ./parsers */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\");\nvar _transaction = __webpack_require__(/*! ./transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\");\nObject.keys(_transaction).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _transaction[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _transaction[key];\n    }\n  });\n});\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar _default = exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixzREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRiw4Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRix1REFBc0Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRiwwQ0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmLGtEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLHNEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLFdBQVcsbUJBQU8sQ0FBQyw4REFBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELGNBQWMsbUJBQU8sQ0FBQyxvRUFBVTtBQUNoQyxvQ0FBb0MsbUJBQU8sQ0FBQyxrRUFBUztBQUNyRCxlQUFlLG1CQUFPLENBQUMsc0VBQVc7QUFDbEMsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWU7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCxxQ0FBcUMsaUNBQWlDO0FBQ3RFLGVBQWUsa0JBQWUiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ycGMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX2V4cG9ydE5hbWVzID0ge1xuICBTZXJ2ZXI6IHRydWUsXG4gIEJhc2ljU2xlZXBTdHJhdGVneTogdHJ1ZSxcbiAgTGluZWFyU2xlZXBTdHJhdGVneTogdHJ1ZSxcbiAgRHVyYWJpbGl0eTogdHJ1ZSxcbiAgQXhpb3NDbGllbnQ6IHRydWUsXG4gIHBhcnNlUmF3U2ltdWxhdGlvbjogdHJ1ZSxcbiAgcGFyc2VSYXdFdmVudHM6IHRydWVcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBeGlvc0NsaWVudFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfYXhpb3MuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCYXNpY1NsZWVwU3RyYXRlZ3lcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX3NlcnZlci5CYXNpY1NsZWVwU3RyYXRlZ3k7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRHVyYWJpbGl0eVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfc2VydmVyLkR1cmFiaWxpdHk7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTGluZWFyU2xlZXBTdHJhdGVneVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfc2VydmVyLkxpbmVhclNsZWVwU3RyYXRlZ3k7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9zZXJ2ZXIuUnBjU2VydmVyO1xuICB9XG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmF3RXZlbnRzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9wYXJzZXJzLnBhcnNlUmF3RXZlbnRzO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmF3U2ltdWxhdGlvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfcGFyc2Vycy5wYXJzZVJhd1NpbXVsYXRpb247XG4gIH1cbn0pO1xudmFyIF9hcGkgPSByZXF1aXJlKFwiLi9hcGlcIik7XG5PYmplY3Qua2V5cyhfYXBpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfYXBpW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX2FwaVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc2VydmVyID0gcmVxdWlyZShcIi4vc2VydmVyXCIpO1xudmFyIF9heGlvcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vYXhpb3NcIikpO1xudmFyIF9wYXJzZXJzID0gcmVxdWlyZShcIi4vcGFyc2Vyc1wiKTtcbnZhciBfdHJhbnNhY3Rpb24gPSByZXF1aXJlKFwiLi90cmFuc2FjdGlvblwiKTtcbk9iamVjdC5rZXlzKF90cmFuc2FjdGlvbikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3RyYW5zYWN0aW9uW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX3RyYW5zYWN0aW9uW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChlKSB7IHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsgfVxudmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/jsonrpc.js":
/*!*****************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/jsonrpc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.postObject = postObject;\nvar _axios = _interopRequireDefault(__webpack_require__(/*! ./axios */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction hasOwnProperty(obj, prop) {\n  return obj.hasOwnProperty(prop);\n}\nfunction postObject(_x, _x2) {\n  return _postObject.apply(this, arguments);\n}\nfunction _postObject() {\n  _postObject = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(url, method) {\n    var param,\n      response,\n      _response$data,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          param = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n          _context.next = 3;\n          return _axios.default.post(url, {\n            jsonrpc: \"2.0\",\n            id: 1,\n            method: method,\n            params: param\n          });\n        case 3:\n          response = _context.sent;\n          if (!hasOwnProperty(response.data, \"error\")) {\n            _context.next = 8;\n            break;\n          }\n          throw response.data.error;\n        case 8:\n          return _context.abrupt(\"return\", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _postObject.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js":
/*!*****************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/parsers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.parseRawEvents = parseRawEvents;\nexports.parseRawLedgerEntries = parseRawLedgerEntries;\nexports.parseRawSendTransaction = parseRawSendTransaction;\nexports.parseRawSimulation = parseRawSimulation;\nexports.parseRawTransactions = parseRawTransactions;\nexports.parseTransactionInfo = parseTransactionInfo;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction parseRawSendTransaction(raw) {\n  var errorResultXdr = raw.errorResultXdr,\n    diagnosticEventsXdr = raw.diagnosticEventsXdr;\n  delete raw.errorResultXdr;\n  delete raw.diagnosticEventsXdr;\n  if (errorResultXdr) {\n    return _objectSpread(_objectSpread(_objectSpread({}, raw), diagnosticEventsXdr !== undefined && diagnosticEventsXdr.length > 0 && {\n      diagnosticEvents: diagnosticEventsXdr.map(function (evt) {\n        return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, 'base64');\n      })\n    }), {}, {\n      errorResult: _stellarBase.xdr.TransactionResult.fromXDR(errorResultXdr, 'base64')\n    });\n  }\n  return _objectSpread({}, raw);\n}\nfunction parseTransactionInfo(raw) {\n  var meta = _stellarBase.xdr.TransactionMeta.fromXDR(raw.resultMetaXdr, 'base64');\n  var info = {\n    ledger: raw.ledger,\n    createdAt: raw.createdAt,\n    applicationOrder: raw.applicationOrder,\n    feeBump: raw.feeBump,\n    envelopeXdr: _stellarBase.xdr.TransactionEnvelope.fromXDR(raw.envelopeXdr, 'base64'),\n    resultXdr: _stellarBase.xdr.TransactionResult.fromXDR(raw.resultXdr, 'base64'),\n    resultMetaXdr: meta\n  };\n  if (meta.switch() === 3 && meta.v3().sorobanMeta() !== null) {\n    var _meta$v3$sorobanMeta;\n    info.returnValue = (_meta$v3$sorobanMeta = meta.v3().sorobanMeta()) === null || _meta$v3$sorobanMeta === void 0 ? void 0 : _meta$v3$sorobanMeta.returnValue();\n  }\n  if ('diagnosticEventsXdr' in raw && raw.diagnosticEventsXdr) {\n    info.diagnosticEventsXdr = raw.diagnosticEventsXdr.map(function (diagnosticEvent) {\n      return _stellarBase.xdr.DiagnosticEvent.fromXDR(diagnosticEvent, 'base64');\n    });\n  }\n  return info;\n}\nfunction parseRawTransactions(r) {\n  return _objectSpread({\n    status: r.status,\n    txHash: r.txHash\n  }, parseTransactionInfo(r));\n}\nfunction parseRawEvents(raw) {\n  var _raw$events;\n  return {\n    latestLedger: raw.latestLedger,\n    cursor: raw.cursor,\n    events: ((_raw$events = raw.events) !== null && _raw$events !== void 0 ? _raw$events : []).map(function (evt) {\n      var clone = _objectSpread({}, evt);\n      delete clone.contractId;\n      return _objectSpread(_objectSpread(_objectSpread({}, clone), evt.contractId !== '' && {\n        contractId: new _stellarBase.Contract(evt.contractId)\n      }), {}, {\n        topic: evt.topic.map(function (topic) {\n          return _stellarBase.xdr.ScVal.fromXDR(topic, 'base64');\n        }),\n        value: _stellarBase.xdr.ScVal.fromXDR(evt.value, 'base64')\n      });\n    })\n  };\n}\nfunction parseRawLedgerEntries(raw) {\n  var _raw$entries;\n  return {\n    latestLedger: raw.latestLedger,\n    entries: ((_raw$entries = raw.entries) !== null && _raw$entries !== void 0 ? _raw$entries : []).map(function (rawEntry) {\n      if (!rawEntry.key || !rawEntry.xdr) {\n        throw new TypeError(\"invalid ledger entry: \".concat(JSON.stringify(rawEntry)));\n      }\n      return _objectSpread({\n        lastModifiedLedgerSeq: rawEntry.lastModifiedLedgerSeq,\n        key: _stellarBase.xdr.LedgerKey.fromXDR(rawEntry.key, 'base64'),\n        val: _stellarBase.xdr.LedgerEntryData.fromXDR(rawEntry.xdr, 'base64')\n      }, rawEntry.liveUntilLedgerSeq !== undefined && {\n        liveUntilLedgerSeq: rawEntry.liveUntilLedgerSeq\n      });\n    })\n  };\n}\nfunction parseSuccessful(sim, partial) {\n  var _sim$results$length, _sim$results, _sim$stateChanges$len, _sim$stateChanges, _sim$stateChanges2;\n  var success = _objectSpread(_objectSpread(_objectSpread({}, partial), {}, {\n    transactionData: new _stellarBase.SorobanDataBuilder(sim.transactionData),\n    minResourceFee: sim.minResourceFee\n  }, ((_sim$results$length = (_sim$results = sim.results) === null || _sim$results === void 0 ? void 0 : _sim$results.length) !== null && _sim$results$length !== void 0 ? _sim$results$length : 0 > 0) && {\n    result: sim.results.map(function (row) {\n      var _row$auth;\n      return {\n        auth: ((_row$auth = row.auth) !== null && _row$auth !== void 0 ? _row$auth : []).map(function (entry) {\n          return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(entry, 'base64');\n        }),\n        retval: row.xdr ? _stellarBase.xdr.ScVal.fromXDR(row.xdr, 'base64') : _stellarBase.xdr.ScVal.scvVoid()\n      };\n    })[0]\n  }), ((_sim$stateChanges$len = (_sim$stateChanges = sim.stateChanges) === null || _sim$stateChanges === void 0 ? void 0 : _sim$stateChanges.length) !== null && _sim$stateChanges$len !== void 0 ? _sim$stateChanges$len : 0 > 0) && {\n    stateChanges: (_sim$stateChanges2 = sim.stateChanges) === null || _sim$stateChanges2 === void 0 ? void 0 : _sim$stateChanges2.map(function (entryChange) {\n      return {\n        type: entryChange.type,\n        key: _stellarBase.xdr.LedgerKey.fromXDR(entryChange.key, 'base64'),\n        before: entryChange.before ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.before, 'base64') : null,\n        after: entryChange.after ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.after, 'base64') : null\n      };\n    })\n  });\n  if (!sim.restorePreamble || sim.restorePreamble.transactionData === '') {\n    return success;\n  }\n  return _objectSpread(_objectSpread({}, success), {}, {\n    restorePreamble: {\n      minResourceFee: sim.restorePreamble.minResourceFee,\n      transactionData: new _stellarBase.SorobanDataBuilder(sim.restorePreamble.transactionData)\n    }\n  });\n}\nfunction parseRawSimulation(sim) {\n  var _sim$events$map, _sim$events;\n  var looksRaw = _api.Api.isSimulationRaw(sim);\n  if (!looksRaw) {\n    return sim;\n  }\n  var base = {\n    _parsed: true,\n    id: sim.id,\n    latestLedger: sim.latestLedger,\n    events: (_sim$events$map = (_sim$events = sim.events) === null || _sim$events === void 0 ? void 0 : _sim$events.map(function (evt) {\n      return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, 'base64');\n    })) !== null && _sim$events$map !== void 0 ? _sim$events$map : []\n  };\n  if (typeof sim.error === 'string') {\n    return _objectSpread(_objectSpread({}, base), {}, {\n      error: sim.error\n    });\n  }\n  return parseSuccessful(sim, base);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9wYXJzZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLHNCQUFzQjtBQUN0Qiw2QkFBNkI7QUFDN0IsK0JBQStCO0FBQy9CLDBCQUEwQjtBQUMxQiw0QkFBNEI7QUFDNUIsNEJBQTRCO0FBQzVCLG1CQUFtQixtQkFBTyxDQUFDLHNGQUF1QjtBQUNsRCxXQUFXLG1CQUFPLENBQUMsOERBQU87QUFDMUIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MseUJBQXlCLHdCQUF3QixvQ0FBb0MseUNBQXlDLGtDQUFrQywwREFBMEQsMEJBQTBCO0FBQ3BQLDRCQUE0QixnQkFBZ0Isc0JBQXNCLE9BQU8sa0RBQWtELHNEQUFzRCw4QkFBOEIsbUpBQW1KLHFFQUFxRSxLQUFLO0FBQzVhLG9DQUFvQyxvRUFBb0UsMERBQTBEO0FBQ2xLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUssS0FBSztBQUNWO0FBQ0EsS0FBSztBQUNMO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0EseURBQXlEO0FBQ3pEO0FBQ0EsT0FBTyxLQUFLO0FBQ1o7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsY0FBYztBQUMxRTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxjQUFjO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx5Q0FBeUMsV0FBVztBQUNwRDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ycGMvcGFyc2Vycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucGFyc2VSYXdFdmVudHMgPSBwYXJzZVJhd0V2ZW50cztcbmV4cG9ydHMucGFyc2VSYXdMZWRnZXJFbnRyaWVzID0gcGFyc2VSYXdMZWRnZXJFbnRyaWVzO1xuZXhwb3J0cy5wYXJzZVJhd1NlbmRUcmFuc2FjdGlvbiA9IHBhcnNlUmF3U2VuZFRyYW5zYWN0aW9uO1xuZXhwb3J0cy5wYXJzZVJhd1NpbXVsYXRpb24gPSBwYXJzZVJhd1NpbXVsYXRpb247XG5leHBvcnRzLnBhcnNlUmF3VHJhbnNhY3Rpb25zID0gcGFyc2VSYXdUcmFuc2FjdGlvbnM7XG5leHBvcnRzLnBhcnNlVHJhbnNhY3Rpb25JbmZvID0gcGFyc2VUcmFuc2FjdGlvbkluZm87XG52YXIgX3N0ZWxsYXJCYXNlID0gcmVxdWlyZShcIkBzdGVsbGFyL3N0ZWxsYXItYmFzZVwiKTtcbnZhciBfYXBpID0gcmVxdWlyZShcIi4vYXBpXCIpO1xuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkoZSwgciwgdCkgeyByZXR1cm4gKHIgPSBfdG9Qcm9wZXJ0eUtleShyKSkgaW4gZSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCB7IHZhbHVlOiB0LCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pIDogZVtyXSA9IHQsIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBwYXJzZVJhd1NlbmRUcmFuc2FjdGlvbihyYXcpIHtcbiAgdmFyIGVycm9yUmVzdWx0WGRyID0gcmF3LmVycm9yUmVzdWx0WGRyLFxuICAgIGRpYWdub3N0aWNFdmVudHNYZHIgPSByYXcuZGlhZ25vc3RpY0V2ZW50c1hkcjtcbiAgZGVsZXRlIHJhdy5lcnJvclJlc3VsdFhkcjtcbiAgZGVsZXRlIHJhdy5kaWFnbm9zdGljRXZlbnRzWGRyO1xuICBpZiAoZXJyb3JSZXN1bHRYZHIpIHtcbiAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHJhdyksIGRpYWdub3N0aWNFdmVudHNYZHIgIT09IHVuZGVmaW5lZCAmJiBkaWFnbm9zdGljRXZlbnRzWGRyLmxlbmd0aCA+IDAgJiYge1xuICAgICAgZGlhZ25vc3RpY0V2ZW50czogZGlhZ25vc3RpY0V2ZW50c1hkci5tYXAoZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICByZXR1cm4gX3N0ZWxsYXJCYXNlLnhkci5EaWFnbm9zdGljRXZlbnQuZnJvbVhEUihldnQsICdiYXNlNjQnKTtcbiAgICAgIH0pXG4gICAgfSksIHt9LCB7XG4gICAgICBlcnJvclJlc3VsdDogX3N0ZWxsYXJCYXNlLnhkci5UcmFuc2FjdGlvblJlc3VsdC5mcm9tWERSKGVycm9yUmVzdWx0WGRyLCAnYmFzZTY0JylcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgcmF3KTtcbn1cbmZ1bmN0aW9uIHBhcnNlVHJhbnNhY3Rpb25JbmZvKHJhdykge1xuICB2YXIgbWV0YSA9IF9zdGVsbGFyQmFzZS54ZHIuVHJhbnNhY3Rpb25NZXRhLmZyb21YRFIocmF3LnJlc3VsdE1ldGFYZHIsICdiYXNlNjQnKTtcbiAgdmFyIGluZm8gPSB7XG4gICAgbGVkZ2VyOiByYXcubGVkZ2VyLFxuICAgIGNyZWF0ZWRBdDogcmF3LmNyZWF0ZWRBdCxcbiAgICBhcHBsaWNhdGlvbk9yZGVyOiByYXcuYXBwbGljYXRpb25PcmRlcixcbiAgICBmZWVCdW1wOiByYXcuZmVlQnVtcCxcbiAgICBlbnZlbG9wZVhkcjogX3N0ZWxsYXJCYXNlLnhkci5UcmFuc2FjdGlvbkVudmVsb3BlLmZyb21YRFIocmF3LmVudmVsb3BlWGRyLCAnYmFzZTY0JyksXG4gICAgcmVzdWx0WGRyOiBfc3RlbGxhckJhc2UueGRyLlRyYW5zYWN0aW9uUmVzdWx0LmZyb21YRFIocmF3LnJlc3VsdFhkciwgJ2Jhc2U2NCcpLFxuICAgIHJlc3VsdE1ldGFYZHI6IG1ldGFcbiAgfTtcbiAgaWYgKG1ldGEuc3dpdGNoKCkgPT09IDMgJiYgbWV0YS52MygpLnNvcm9iYW5NZXRhKCkgIT09IG51bGwpIHtcbiAgICB2YXIgX21ldGEkdjMkc29yb2Jhbk1ldGE7XG4gICAgaW5mby5yZXR1cm5WYWx1ZSA9IChfbWV0YSR2MyRzb3JvYmFuTWV0YSA9IG1ldGEudjMoKS5zb3JvYmFuTWV0YSgpKSA9PT0gbnVsbCB8fCBfbWV0YSR2MyRzb3JvYmFuTWV0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX21ldGEkdjMkc29yb2Jhbk1ldGEucmV0dXJuVmFsdWUoKTtcbiAgfVxuICBpZiAoJ2RpYWdub3N0aWNFdmVudHNYZHInIGluIHJhdyAmJiByYXcuZGlhZ25vc3RpY0V2ZW50c1hkcikge1xuICAgIGluZm8uZGlhZ25vc3RpY0V2ZW50c1hkciA9IHJhdy5kaWFnbm9zdGljRXZlbnRzWGRyLm1hcChmdW5jdGlvbiAoZGlhZ25vc3RpY0V2ZW50KSB7XG4gICAgICByZXR1cm4gX3N0ZWxsYXJCYXNlLnhkci5EaWFnbm9zdGljRXZlbnQuZnJvbVhEUihkaWFnbm9zdGljRXZlbnQsICdiYXNlNjQnKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gaW5mbztcbn1cbmZ1bmN0aW9uIHBhcnNlUmF3VHJhbnNhY3Rpb25zKHIpIHtcbiAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe1xuICAgIHN0YXR1czogci5zdGF0dXMsXG4gICAgdHhIYXNoOiByLnR4SGFzaFxuICB9LCBwYXJzZVRyYW5zYWN0aW9uSW5mbyhyKSk7XG59XG5mdW5jdGlvbiBwYXJzZVJhd0V2ZW50cyhyYXcpIHtcbiAgdmFyIF9yYXckZXZlbnRzO1xuICByZXR1cm4ge1xuICAgIGxhdGVzdExlZGdlcjogcmF3LmxhdGVzdExlZGdlcixcbiAgICBjdXJzb3I6IHJhdy5jdXJzb3IsXG4gICAgZXZlbnRzOiAoKF9yYXckZXZlbnRzID0gcmF3LmV2ZW50cykgIT09IG51bGwgJiYgX3JhdyRldmVudHMgIT09IHZvaWQgMCA/IF9yYXckZXZlbnRzIDogW10pLm1hcChmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICB2YXIgY2xvbmUgPSBfb2JqZWN0U3ByZWFkKHt9LCBldnQpO1xuICAgICAgZGVsZXRlIGNsb25lLmNvbnRyYWN0SWQ7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNsb25lKSwgZXZ0LmNvbnRyYWN0SWQgIT09ICcnICYmIHtcbiAgICAgICAgY29udHJhY3RJZDogbmV3IF9zdGVsbGFyQmFzZS5Db250cmFjdChldnQuY29udHJhY3RJZClcbiAgICAgIH0pLCB7fSwge1xuICAgICAgICB0b3BpYzogZXZ0LnRvcGljLm1hcChmdW5jdGlvbiAodG9waWMpIHtcbiAgICAgICAgICByZXR1cm4gX3N0ZWxsYXJCYXNlLnhkci5TY1ZhbC5mcm9tWERSKHRvcGljLCAnYmFzZTY0Jyk7XG4gICAgICAgIH0pLFxuICAgICAgICB2YWx1ZTogX3N0ZWxsYXJCYXNlLnhkci5TY1ZhbC5mcm9tWERSKGV2dC52YWx1ZSwgJ2Jhc2U2NCcpXG4gICAgICB9KTtcbiAgICB9KVxuICB9O1xufVxuZnVuY3Rpb24gcGFyc2VSYXdMZWRnZXJFbnRyaWVzKHJhdykge1xuICB2YXIgX3JhdyRlbnRyaWVzO1xuICByZXR1cm4ge1xuICAgIGxhdGVzdExlZGdlcjogcmF3LmxhdGVzdExlZGdlcixcbiAgICBlbnRyaWVzOiAoKF9yYXckZW50cmllcyA9IHJhdy5lbnRyaWVzKSAhPT0gbnVsbCAmJiBfcmF3JGVudHJpZXMgIT09IHZvaWQgMCA/IF9yYXckZW50cmllcyA6IFtdKS5tYXAoZnVuY3Rpb24gKHJhd0VudHJ5KSB7XG4gICAgICBpZiAoIXJhd0VudHJ5LmtleSB8fCAhcmF3RW50cnkueGRyKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIGxlZGdlciBlbnRyeTogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHJhd0VudHJ5KSkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe1xuICAgICAgICBsYXN0TW9kaWZpZWRMZWRnZXJTZXE6IHJhd0VudHJ5Lmxhc3RNb2RpZmllZExlZGdlclNlcSxcbiAgICAgICAga2V5OiBfc3RlbGxhckJhc2UueGRyLkxlZGdlcktleS5mcm9tWERSKHJhd0VudHJ5LmtleSwgJ2Jhc2U2NCcpLFxuICAgICAgICB2YWw6IF9zdGVsbGFyQmFzZS54ZHIuTGVkZ2VyRW50cnlEYXRhLmZyb21YRFIocmF3RW50cnkueGRyLCAnYmFzZTY0JylcbiAgICAgIH0sIHJhd0VudHJ5LmxpdmVVbnRpbExlZGdlclNlcSAhPT0gdW5kZWZpbmVkICYmIHtcbiAgICAgICAgbGl2ZVVudGlsTGVkZ2VyU2VxOiByYXdFbnRyeS5saXZlVW50aWxMZWRnZXJTZXFcbiAgICAgIH0pO1xuICAgIH0pXG4gIH07XG59XG5mdW5jdGlvbiBwYXJzZVN1Y2Nlc3NmdWwoc2ltLCBwYXJ0aWFsKSB7XG4gIHZhciBfc2ltJHJlc3VsdHMkbGVuZ3RoLCBfc2ltJHJlc3VsdHMsIF9zaW0kc3RhdGVDaGFuZ2VzJGxlbiwgX3NpbSRzdGF0ZUNoYW5nZXMsIF9zaW0kc3RhdGVDaGFuZ2VzMjtcbiAgdmFyIHN1Y2Nlc3MgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcGFydGlhbCksIHt9LCB7XG4gICAgdHJhbnNhY3Rpb25EYXRhOiBuZXcgX3N0ZWxsYXJCYXNlLlNvcm9iYW5EYXRhQnVpbGRlcihzaW0udHJhbnNhY3Rpb25EYXRhKSxcbiAgICBtaW5SZXNvdXJjZUZlZTogc2ltLm1pblJlc291cmNlRmVlXG4gIH0sICgoX3NpbSRyZXN1bHRzJGxlbmd0aCA9IChfc2ltJHJlc3VsdHMgPSBzaW0ucmVzdWx0cykgPT09IG51bGwgfHwgX3NpbSRyZXN1bHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfc2ltJHJlc3VsdHMubGVuZ3RoKSAhPT0gbnVsbCAmJiBfc2ltJHJlc3VsdHMkbGVuZ3RoICE9PSB2b2lkIDAgPyBfc2ltJHJlc3VsdHMkbGVuZ3RoIDogMCA+IDApICYmIHtcbiAgICByZXN1bHQ6IHNpbS5yZXN1bHRzLm1hcChmdW5jdGlvbiAocm93KSB7XG4gICAgICB2YXIgX3JvdyRhdXRoO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYXV0aDogKChfcm93JGF1dGggPSByb3cuYXV0aCkgIT09IG51bGwgJiYgX3JvdyRhdXRoICE9PSB2b2lkIDAgPyBfcm93JGF1dGggOiBbXSkubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgICAgICAgIHJldHVybiBfc3RlbGxhckJhc2UueGRyLlNvcm9iYW5BdXRob3JpemF0aW9uRW50cnkuZnJvbVhEUihlbnRyeSwgJ2Jhc2U2NCcpO1xuICAgICAgICB9KSxcbiAgICAgICAgcmV0dmFsOiByb3cueGRyID8gX3N0ZWxsYXJCYXNlLnhkci5TY1ZhbC5mcm9tWERSKHJvdy54ZHIsICdiYXNlNjQnKSA6IF9zdGVsbGFyQmFzZS54ZHIuU2NWYWwuc2N2Vm9pZCgpXG4gICAgICB9O1xuICAgIH0pWzBdXG4gIH0pLCAoKF9zaW0kc3RhdGVDaGFuZ2VzJGxlbiA9IChfc2ltJHN0YXRlQ2hhbmdlcyA9IHNpbS5zdGF0ZUNoYW5nZXMpID09PSBudWxsIHx8IF9zaW0kc3RhdGVDaGFuZ2VzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfc2ltJHN0YXRlQ2hhbmdlcy5sZW5ndGgpICE9PSBudWxsICYmIF9zaW0kc3RhdGVDaGFuZ2VzJGxlbiAhPT0gdm9pZCAwID8gX3NpbSRzdGF0ZUNoYW5nZXMkbGVuIDogMCA+IDApICYmIHtcbiAgICBzdGF0ZUNoYW5nZXM6IChfc2ltJHN0YXRlQ2hhbmdlczIgPSBzaW0uc3RhdGVDaGFuZ2VzKSA9PT0gbnVsbCB8fCBfc2ltJHN0YXRlQ2hhbmdlczIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9zaW0kc3RhdGVDaGFuZ2VzMi5tYXAoZnVuY3Rpb24gKGVudHJ5Q2hhbmdlKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBlbnRyeUNoYW5nZS50eXBlLFxuICAgICAgICBrZXk6IF9zdGVsbGFyQmFzZS54ZHIuTGVkZ2VyS2V5LmZyb21YRFIoZW50cnlDaGFuZ2Uua2V5LCAnYmFzZTY0JyksXG4gICAgICAgIGJlZm9yZTogZW50cnlDaGFuZ2UuYmVmb3JlID8gX3N0ZWxsYXJCYXNlLnhkci5MZWRnZXJFbnRyeS5mcm9tWERSKGVudHJ5Q2hhbmdlLmJlZm9yZSwgJ2Jhc2U2NCcpIDogbnVsbCxcbiAgICAgICAgYWZ0ZXI6IGVudHJ5Q2hhbmdlLmFmdGVyID8gX3N0ZWxsYXJCYXNlLnhkci5MZWRnZXJFbnRyeS5mcm9tWERSKGVudHJ5Q2hhbmdlLmFmdGVyLCAnYmFzZTY0JykgOiBudWxsXG4gICAgICB9O1xuICAgIH0pXG4gIH0pO1xuICBpZiAoIXNpbS5yZXN0b3JlUHJlYW1ibGUgfHwgc2ltLnJlc3RvcmVQcmVhbWJsZS50cmFuc2FjdGlvbkRhdGEgPT09ICcnKSB7XG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG4gIH1cbiAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgc3VjY2VzcyksIHt9LCB7XG4gICAgcmVzdG9yZVByZWFtYmxlOiB7XG4gICAgICBtaW5SZXNvdXJjZUZlZTogc2ltLnJlc3RvcmVQcmVhbWJsZS5taW5SZXNvdXJjZUZlZSxcbiAgICAgIHRyYW5zYWN0aW9uRGF0YTogbmV3IF9zdGVsbGFyQmFzZS5Tb3JvYmFuRGF0YUJ1aWxkZXIoc2ltLnJlc3RvcmVQcmVhbWJsZS50cmFuc2FjdGlvbkRhdGEpXG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIHBhcnNlUmF3U2ltdWxhdGlvbihzaW0pIHtcbiAgdmFyIF9zaW0kZXZlbnRzJG1hcCwgX3NpbSRldmVudHM7XG4gIHZhciBsb29rc1JhdyA9IF9hcGkuQXBpLmlzU2ltdWxhdGlvblJhdyhzaW0pO1xuICBpZiAoIWxvb2tzUmF3KSB7XG4gICAgcmV0dXJuIHNpbTtcbiAgfVxuICB2YXIgYmFzZSA9IHtcbiAgICBfcGFyc2VkOiB0cnVlLFxuICAgIGlkOiBzaW0uaWQsXG4gICAgbGF0ZXN0TGVkZ2VyOiBzaW0ubGF0ZXN0TGVkZ2VyLFxuICAgIGV2ZW50czogKF9zaW0kZXZlbnRzJG1hcCA9IChfc2ltJGV2ZW50cyA9IHNpbS5ldmVudHMpID09PSBudWxsIHx8IF9zaW0kZXZlbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfc2ltJGV2ZW50cy5tYXAoZnVuY3Rpb24gKGV2dCkge1xuICAgICAgcmV0dXJuIF9zdGVsbGFyQmFzZS54ZHIuRGlhZ25vc3RpY0V2ZW50LmZyb21YRFIoZXZ0LCAnYmFzZTY0Jyk7XG4gICAgfSkpICE9PSBudWxsICYmIF9zaW0kZXZlbnRzJG1hcCAhPT0gdm9pZCAwID8gX3NpbSRldmVudHMkbWFwIDogW11cbiAgfTtcbiAgaWYgKHR5cGVvZiBzaW0uZXJyb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgYmFzZSksIHt9LCB7XG4gICAgICBlcnJvcjogc2ltLmVycm9yXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHBhcnNlU3VjY2Vzc2Z1bChzaW0sIGJhc2UpO1xufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js":
/*!****************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/server.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SUBMIT_TRANSACTION_TIMEOUT = exports.RpcServer = exports.LinearSleepStrategy = exports.Durability = exports.BasicSleepStrategy = void 0;\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _axios = _interopRequireDefault(__webpack_require__(/*! ./axios */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\"));\nvar jsonrpc = _interopRequireWildcard(__webpack_require__(/*! ./jsonrpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/jsonrpc.js\"));\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _transaction = __webpack_require__(/*! ./transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\");\nvar _parsers = __webpack_require__(/*! ./parsers */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\");\nvar _utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/stellar-sdk/lib/utils.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1000;\nvar Durability = exports.Durability = function (Durability) {\n  Durability[\"Temporary\"] = \"temporary\";\n  Durability[\"Persistent\"] = \"persistent\";\n  return Durability;\n}({});\nvar DEFAULT_GET_TRANSACTION_TIMEOUT = 30;\nvar BasicSleepStrategy = exports.BasicSleepStrategy = function BasicSleepStrategy(_iter) {\n  return 1000;\n};\nvar LinearSleepStrategy = exports.LinearSleepStrategy = function LinearSleepStrategy(iter) {\n  return 1000 * iter;\n};\nfunction findCreatedAccountSequenceInTransactionMeta(meta) {\n  var _operations$flatMap$f;\n  var operations = [];\n  switch (meta.switch()) {\n    case 0:\n      operations = meta.operations();\n      break;\n    case 1:\n    case 2:\n    case 3:\n      operations = meta.value().operations();\n      break;\n    default:\n      throw new Error('Unexpected transaction meta switch value');\n  }\n  var sequenceNumber = (_operations$flatMap$f = operations.flatMap(function (op) {\n    return op.changes();\n  }).find(function (c) {\n    return c.switch() === _stellarBase.xdr.LedgerEntryChangeType.ledgerEntryCreated() && c.created().data().switch() === _stellarBase.xdr.LedgerEntryType.account();\n  })) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.created()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.data()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.account()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.seqNum()) === null || _operations$flatMap$f === void 0 ? void 0 : _operations$flatMap$f.toString();\n  if (sequenceNumber) {\n    return sequenceNumber;\n  }\n  throw new Error('No account created in transaction');\n}\nvar RpcServer = exports.RpcServer = function () {\n  function RpcServer(serverURL) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, RpcServer);\n    this.serverURL = (0, _urijs.default)(serverURL);\n    if (opts.headers && Object.keys(opts.headers).length !== 0) {\n      _axios.default.interceptors.request.use(function (config) {\n        config.headers = Object.assign(config.headers, opts.headers);\n        return config;\n      });\n    }\n    if (this.serverURL.protocol() !== 'https' && !opts.allowHttp) {\n      throw new Error(\"Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set\");\n    }\n  }\n  return _createClass(RpcServer, [{\n    key: \"getAccount\",\n    value: (function () {\n      var _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {\n        var ledgerKey, resp, accountEntry;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              ledgerKey = _stellarBase.xdr.LedgerKey.account(new _stellarBase.xdr.LedgerKeyAccount({\n                accountId: _stellarBase.Keypair.fromPublicKey(address).xdrPublicKey()\n              }));\n              _context.next = 3;\n              return this.getLedgerEntries(ledgerKey);\n            case 3:\n              resp = _context.sent;\n              if (!(resp.entries.length === 0)) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", Promise.reject({\n                code: 404,\n                message: \"Account not found: \".concat(address)\n              }));\n            case 6:\n              accountEntry = resp.entries[0].val.account();\n              return _context.abrupt(\"return\", new _stellarBase.Account(address, accountEntry.seqNum().toString()));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getAccount(_x) {\n        return _getAccount.apply(this, arguments);\n      }\n      return getAccount;\n    }())\n  }, {\n    key: \"getHealth\",\n    value: (function () {\n      var _getHealth = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getHealth'));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getHealth() {\n        return _getHealth.apply(this, arguments);\n      }\n      return getHealth;\n    }())\n  }, {\n    key: \"getContractData\",\n    value: (function () {\n      var _getContractData = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(contract, key) {\n        var durability,\n          scAddress,\n          xdrDurability,\n          contractKey,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              durability = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : Durability.Persistent;\n              if (!(typeof contract === 'string')) {\n                _context3.next = 5;\n                break;\n              }\n              scAddress = new _stellarBase.Contract(contract).address().toScAddress();\n              _context3.next = 14;\n              break;\n            case 5:\n              if (!(contract instanceof _stellarBase.Address)) {\n                _context3.next = 9;\n                break;\n              }\n              scAddress = contract.toScAddress();\n              _context3.next = 14;\n              break;\n            case 9:\n              if (!(contract instanceof _stellarBase.Contract)) {\n                _context3.next = 13;\n                break;\n              }\n              scAddress = contract.address().toScAddress();\n              _context3.next = 14;\n              break;\n            case 13:\n              throw new TypeError(\"unknown contract type: \".concat(contract));\n            case 14:\n              _context3.t0 = durability;\n              _context3.next = _context3.t0 === Durability.Temporary ? 17 : _context3.t0 === Durability.Persistent ? 19 : 21;\n              break;\n            case 17:\n              xdrDurability = _stellarBase.xdr.ContractDataDurability.temporary();\n              return _context3.abrupt(\"break\", 22);\n            case 19:\n              xdrDurability = _stellarBase.xdr.ContractDataDurability.persistent();\n              return _context3.abrupt(\"break\", 22);\n            case 21:\n              throw new TypeError(\"invalid durability: \".concat(durability));\n            case 22:\n              contractKey = _stellarBase.xdr.LedgerKey.contractData(new _stellarBase.xdr.LedgerKeyContractData({\n                key: key,\n                contract: scAddress,\n                durability: xdrDurability\n              }));\n              return _context3.abrupt(\"return\", this.getLedgerEntries(contractKey).then(function (r) {\n                if (r.entries.length === 0) {\n                  return Promise.reject({\n                    code: 404,\n                    message: \"Contract data not found. Contract: \".concat(_stellarBase.Address.fromScAddress(scAddress).toString(), \", Key: \").concat(key.toXDR('base64'), \", Durability: \").concat(durability)\n                  });\n                }\n                return r.entries[0];\n              }));\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getContractData(_x2, _x3) {\n        return _getContractData.apply(this, arguments);\n      }\n      return getContractData;\n    }())\n  }, {\n    key: \"getContractWasmByContractId\",\n    value: (function () {\n      var _getContractWasmByContractId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(contractId) {\n        var _response$entries$;\n        var contractLedgerKey, response, wasmHash;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              contractLedgerKey = new _stellarBase.Contract(contractId).getFootprint();\n              _context4.next = 3;\n              return this.getLedgerEntries(contractLedgerKey);\n            case 3:\n              response = _context4.sent;\n              if (!(!response.entries.length || !((_response$entries$ = response.entries[0]) !== null && _response$entries$ !== void 0 && _response$entries$.val))) {\n                _context4.next = 6;\n                break;\n              }\n              return _context4.abrupt(\"return\", Promise.reject({\n                code: 404,\n                message: \"Could not obtain contract hash from server\"\n              }));\n            case 6:\n              wasmHash = response.entries[0].val.contractData().val().instance().executable().wasmHash();\n              return _context4.abrupt(\"return\", this.getContractWasmByHash(wasmHash));\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getContractWasmByContractId(_x4) {\n        return _getContractWasmByContractId.apply(this, arguments);\n      }\n      return getContractWasmByContractId;\n    }())\n  }, {\n    key: \"getContractWasmByHash\",\n    value: (function () {\n      var _getContractWasmByHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(wasmHash) {\n        var _responseWasm$entries;\n        var format,\n          wasmHashBuffer,\n          ledgerKeyWasmHash,\n          responseWasm,\n          wasmBuffer,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              format = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : undefined;\n              wasmHashBuffer = typeof wasmHash === \"string\" ? Buffer.from(wasmHash, format) : wasmHash;\n              ledgerKeyWasmHash = _stellarBase.xdr.LedgerKey.contractCode(new _stellarBase.xdr.LedgerKeyContractCode({\n                hash: wasmHashBuffer\n              }));\n              _context5.next = 5;\n              return this.getLedgerEntries(ledgerKeyWasmHash);\n            case 5:\n              responseWasm = _context5.sent;\n              if (!(!responseWasm.entries.length || !((_responseWasm$entries = responseWasm.entries[0]) !== null && _responseWasm$entries !== void 0 && _responseWasm$entries.val))) {\n                _context5.next = 8;\n                break;\n              }\n              return _context5.abrupt(\"return\", Promise.reject({\n                code: 404,\n                message: \"Could not obtain contract wasm from server\"\n              }));\n            case 8:\n              wasmBuffer = responseWasm.entries[0].val.contractCode().code();\n              return _context5.abrupt(\"return\", wasmBuffer);\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getContractWasmByHash(_x5) {\n        return _getContractWasmByHash.apply(this, arguments);\n      }\n      return getContractWasmByHash;\n    }())\n  }, {\n    key: \"getLedgerEntries\",\n    value: (function () {\n      var _getLedgerEntries2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {\n        var _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", this._getLedgerEntries.apply(this, _args6).then(_parsers.parseRawLedgerEntries));\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getLedgerEntries() {\n        return _getLedgerEntries2.apply(this, arguments);\n      }\n      return getLedgerEntries;\n    }())\n  }, {\n    key: \"_getLedgerEntries\",\n    value: function () {\n      var _getLedgerEntries3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {\n        var _len,\n          keys,\n          _key,\n          _args7 = arguments;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              for (_len = _args7.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\n                keys[_key] = _args7[_key];\n              }\n              return _context7.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getLedgerEntries', {\n                keys: keys.map(function (k) {\n                  return k.toXDR('base64');\n                })\n              }));\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function _getLedgerEntries() {\n        return _getLedgerEntries3.apply(this, arguments);\n      }\n      return _getLedgerEntries;\n    }()\n  }, {\n    key: \"pollTransaction\",\n    value: (function () {\n      var _pollTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(hash, opts) {\n        var _opts$attempts, _opts$attempts2;\n        var maxAttempts, foundInfo, attempt, _opts$sleepStrategy;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              maxAttempts = ((_opts$attempts = opts === null || opts === void 0 ? void 0 : opts.attempts) !== null && _opts$attempts !== void 0 ? _opts$attempts : 0) < 1 ? DEFAULT_GET_TRANSACTION_TIMEOUT : (_opts$attempts2 = opts === null || opts === void 0 ? void 0 : opts.attempts) !== null && _opts$attempts2 !== void 0 ? _opts$attempts2 : DEFAULT_GET_TRANSACTION_TIMEOUT;\n              attempt = 1;\n            case 2:\n              if (!(attempt < maxAttempts)) {\n                _context8.next = 13;\n                break;\n              }\n              _context8.next = 5;\n              return this.getTransaction(hash);\n            case 5:\n              foundInfo = _context8.sent;\n              if (!(foundInfo.status !== _api.Api.GetTransactionStatus.NOT_FOUND)) {\n                _context8.next = 8;\n                break;\n              }\n              return _context8.abrupt(\"return\", foundInfo);\n            case 8:\n              _context8.next = 10;\n              return _utils.Utils.sleep(((_opts$sleepStrategy = opts === null || opts === void 0 ? void 0 : opts.sleepStrategy) !== null && _opts$sleepStrategy !== void 0 ? _opts$sleepStrategy : BasicSleepStrategy)(attempt));\n            case 10:\n              attempt++;\n              _context8.next = 2;\n              break;\n            case 13:\n              return _context8.abrupt(\"return\", foundInfo);\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function pollTransaction(_x6, _x7) {\n        return _pollTransaction.apply(this, arguments);\n      }\n      return pollTransaction;\n    }())\n  }, {\n    key: \"getTransaction\",\n    value: (function () {\n      var _getTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(hash) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", this._getTransaction(hash).then(function (raw) {\n                var foundInfo = {};\n                if (raw.status !== _api.Api.GetTransactionStatus.NOT_FOUND) {\n                  Object.assign(foundInfo, (0, _parsers.parseTransactionInfo)(raw));\n                }\n                var result = _objectSpread({\n                  status: raw.status,\n                  txHash: hash,\n                  latestLedger: raw.latestLedger,\n                  latestLedgerCloseTime: raw.latestLedgerCloseTime,\n                  oldestLedger: raw.oldestLedger,\n                  oldestLedgerCloseTime: raw.oldestLedgerCloseTime\n                }, foundInfo);\n                return result;\n              }));\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function getTransaction(_x8) {\n        return _getTransaction2.apply(this, arguments);\n      }\n      return getTransaction;\n    }())\n  }, {\n    key: \"_getTransaction\",\n    value: function () {\n      var _getTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(hash) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getTransaction', {\n                hash: hash\n              }));\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function _getTransaction(_x9) {\n        return _getTransaction3.apply(this, arguments);\n      }\n      return _getTransaction;\n    }()\n  }, {\n    key: \"getTransactions\",\n    value: (function () {\n      var _getTransactions2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee11(request) {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", this._getTransactions(request).then(function (raw) {\n                var result = {\n                  transactions: (raw.transactions || []).map(_parsers.parseRawTransactions),\n                  latestLedger: raw.latestLedger,\n                  latestLedgerCloseTimestamp: raw.latestLedgerCloseTimestamp,\n                  oldestLedger: raw.oldestLedger,\n                  oldestLedgerCloseTimestamp: raw.oldestLedgerCloseTimestamp,\n                  cursor: raw.cursor\n                };\n                return result;\n              }));\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function getTransactions(_x10) {\n        return _getTransactions2.apply(this, arguments);\n      }\n      return getTransactions;\n    }())\n  }, {\n    key: \"_getTransactions\",\n    value: function () {\n      var _getTransactions3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee12(request) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getTransactions', request));\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function _getTransactions(_x11) {\n        return _getTransactions3.apply(this, arguments);\n      }\n      return _getTransactions;\n    }()\n  }, {\n    key: \"getEvents\",\n    value: (function () {\n      var _getEvents2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee13(request) {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              return _context13.abrupt(\"return\", this._getEvents(request).then(_parsers.parseRawEvents));\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function getEvents(_x12) {\n        return _getEvents2.apply(this, arguments);\n      }\n      return getEvents;\n    }())\n  }, {\n    key: \"_getEvents\",\n    value: function () {\n      var _getEvents3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee14(request) {\n        var _request$filters;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              return _context14.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getEvents', _objectSpread(_objectSpread({\n                filters: (_request$filters = request.filters) !== null && _request$filters !== void 0 ? _request$filters : [],\n                pagination: _objectSpread(_objectSpread({}, request.cursor && {\n                  cursor: request.cursor\n                }), request.limit && {\n                  limit: request.limit\n                })\n              }, request.startLedger && {\n                startLedger: request.startLedger\n              }), request.endLedger && {\n                endLedger: request.endLedger\n              })));\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function _getEvents(_x13) {\n        return _getEvents3.apply(this, arguments);\n      }\n      return _getEvents;\n    }()\n  }, {\n    key: \"getNetwork\",\n    value: (function () {\n      var _getNetwork = _asyncToGenerator(_regeneratorRuntime().mark(function _callee15() {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              return _context15.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getNetwork'));\n            case 1:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function getNetwork() {\n        return _getNetwork.apply(this, arguments);\n      }\n      return getNetwork;\n    }())\n  }, {\n    key: \"getLatestLedger\",\n    value: (function () {\n      var _getLatestLedger = _asyncToGenerator(_regeneratorRuntime().mark(function _callee16() {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              return _context16.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getLatestLedger'));\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function getLatestLedger() {\n        return _getLatestLedger.apply(this, arguments);\n      }\n      return getLatestLedger;\n    }())\n  }, {\n    key: \"simulateTransaction\",\n    value: (function () {\n      var _simulateTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee17(tx, addlResources) {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              return _context17.abrupt(\"return\", this._simulateTransaction(tx, addlResources).then(_parsers.parseRawSimulation));\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n      function simulateTransaction(_x14, _x15) {\n        return _simulateTransaction2.apply(this, arguments);\n      }\n      return simulateTransaction;\n    }())\n  }, {\n    key: \"_simulateTransaction\",\n    value: function () {\n      var _simulateTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee18(transaction, addlResources) {\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              return _context18.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'simulateTransaction', _objectSpread({\n                transaction: transaction.toXDR()\n              }, addlResources !== undefined && {\n                resourceConfig: {\n                  instructionLeeway: addlResources.cpuInstructions\n                }\n              })));\n            case 1:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function _simulateTransaction(_x16, _x17) {\n        return _simulateTransaction3.apply(this, arguments);\n      }\n      return _simulateTransaction;\n    }()\n  }, {\n    key: \"prepareTransaction\",\n    value: (function () {\n      var _prepareTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee19(tx) {\n        var simResponse;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return this.simulateTransaction(tx);\n            case 2:\n              simResponse = _context19.sent;\n              if (!_api.Api.isSimulationError(simResponse)) {\n                _context19.next = 5;\n                break;\n              }\n              throw new Error(simResponse.error);\n            case 5:\n              return _context19.abrupt(\"return\", (0, _transaction.assembleTransaction)(tx, simResponse).build());\n            case 6:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function prepareTransaction(_x18) {\n        return _prepareTransaction.apply(this, arguments);\n      }\n      return prepareTransaction;\n    }())\n  }, {\n    key: \"sendTransaction\",\n    value: (function () {\n      var _sendTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee20(transaction) {\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              return _context20.abrupt(\"return\", this._sendTransaction(transaction).then(_parsers.parseRawSendTransaction));\n            case 1:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function sendTransaction(_x19) {\n        return _sendTransaction2.apply(this, arguments);\n      }\n      return sendTransaction;\n    }())\n  }, {\n    key: \"_sendTransaction\",\n    value: function () {\n      var _sendTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee21(transaction) {\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              return _context21.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'sendTransaction', {\n                transaction: transaction.toXDR()\n              }));\n            case 1:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function _sendTransaction(_x20) {\n        return _sendTransaction3.apply(this, arguments);\n      }\n      return _sendTransaction;\n    }()\n  }, {\n    key: \"requestAirdrop\",\n    value: (function () {\n      var _requestAirdrop = _asyncToGenerator(_regeneratorRuntime().mark(function _callee22(address, friendbotUrl) {\n        var account, response, meta, txMeta, sequence, _error$response, _error$response$detai;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              account = typeof address === 'string' ? address : address.accountId();\n              _context22.t0 = friendbotUrl;\n              if (_context22.t0) {\n                _context22.next = 6;\n                break;\n              }\n              _context22.next = 5;\n              return this.getNetwork();\n            case 5:\n              _context22.t0 = _context22.sent.friendbotUrl;\n            case 6:\n              friendbotUrl = _context22.t0;\n              if (friendbotUrl) {\n                _context22.next = 9;\n                break;\n              }\n              throw new Error('No friendbot URL configured for current network');\n            case 9:\n              _context22.prev = 9;\n              _context22.next = 12;\n              return _axios.default.post(\"\".concat(friendbotUrl, \"?addr=\").concat(encodeURIComponent(account)));\n            case 12:\n              response = _context22.sent;\n              if (response.data.result_meta_xdr) {\n                _context22.next = 22;\n                break;\n              }\n              _context22.next = 16;\n              return this.getTransaction(response.data.hash);\n            case 16:\n              txMeta = _context22.sent;\n              if (!(txMeta.status !== _api.Api.GetTransactionStatus.SUCCESS)) {\n                _context22.next = 19;\n                break;\n              }\n              throw new Error(\"Funding account \".concat(address, \" failed\"));\n            case 19:\n              meta = txMeta.resultMetaXdr;\n              _context22.next = 23;\n              break;\n            case 22:\n              meta = _stellarBase.xdr.TransactionMeta.fromXDR(response.data.result_meta_xdr, 'base64');\n            case 23:\n              sequence = findCreatedAccountSequenceInTransactionMeta(meta);\n              return _context22.abrupt(\"return\", new _stellarBase.Account(account, sequence));\n            case 27:\n              _context22.prev = 27;\n              _context22.t1 = _context22[\"catch\"](9);\n              if (!(((_error$response = _context22.t1.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400)) {\n                _context22.next = 32;\n                break;\n              }\n              if (!((_error$response$detai = _context22.t1.response.detail) !== null && _error$response$detai !== void 0 && _error$response$detai.includes('createAccountAlreadyExist'))) {\n                _context22.next = 32;\n                break;\n              }\n              return _context22.abrupt(\"return\", this.getAccount(account));\n            case 32:\n              throw _context22.t1;\n            case 33:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this, [[9, 27]]);\n      }));\n      function requestAirdrop(_x21, _x22) {\n        return _requestAirdrop.apply(this, arguments);\n      }\n      return requestAirdrop;\n    }())\n  }, {\n    key: \"getFeeStats\",\n    value: (function () {\n      var _getFeeStats = _asyncToGenerator(_regeneratorRuntime().mark(function _callee23() {\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              return _context23.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getFeeStats'));\n            case 1:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function getFeeStats() {\n        return _getFeeStats.apply(this, arguments);\n      }\n      return getFeeStats;\n    }())\n  }, {\n    key: \"getVersionInfo\",\n    value: (function () {\n      var _getVersionInfo = _asyncToGenerator(_regeneratorRuntime().mark(function _callee24() {\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              return _context24.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getVersionInfo'));\n            case 1:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function getVersionInfo() {\n        return _getVersionInfo.apply(this, arguments);\n      }\n      return getVersionInfo;\n    }())\n  }, {\n    key: \"getSACBalance\",\n    value: (function () {\n      var _getSACBalance = _asyncToGenerator(_regeneratorRuntime().mark(function _callee25(contractId, sac, networkPassphrase) {\n        var passphrase, sacId, key, ledgerKey, response, _response$entries$2, lastModifiedLedgerSeq, liveUntilLedgerSeq, val, entry;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              if (_stellarBase.StrKey.isValidContract(contractId)) {\n                _context25.next = 2;\n                break;\n              }\n              throw new TypeError(\"expected contract ID, got \".concat(contractId));\n            case 2:\n              if (!(networkPassphrase !== null && networkPassphrase !== void 0)) {\n                _context25.next = 6;\n                break;\n              }\n              _context25.t0 = networkPassphrase;\n              _context25.next = 9;\n              break;\n            case 6:\n              _context25.next = 8;\n              return this.getNetwork().then(function (n) {\n                return n.passphrase;\n              });\n            case 8:\n              _context25.t0 = _context25.sent;\n            case 9:\n              passphrase = _context25.t0;\n              sacId = sac.contractId(passphrase);\n              key = _stellarBase.xdr.ScVal.scvVec([(0, _stellarBase.nativeToScVal)(\"Balance\", {\n                type: \"symbol\"\n              }), (0, _stellarBase.nativeToScVal)(contractId, {\n                type: \"address\"\n              })]);\n              ledgerKey = _stellarBase.xdr.LedgerKey.contractData(new _stellarBase.xdr.LedgerKeyContractData({\n                contract: new _stellarBase.Address(sacId).toScAddress(),\n                durability: _stellarBase.xdr.ContractDataDurability.persistent(),\n                key: key\n              }));\n              _context25.next = 15;\n              return this.getLedgerEntries(ledgerKey);\n            case 15:\n              response = _context25.sent;\n              if (!(response.entries.length === 0)) {\n                _context25.next = 18;\n                break;\n              }\n              return _context25.abrupt(\"return\", {\n                latestLedger: response.latestLedger\n              });\n            case 18:\n              _response$entries$2 = response.entries[0], lastModifiedLedgerSeq = _response$entries$2.lastModifiedLedgerSeq, liveUntilLedgerSeq = _response$entries$2.liveUntilLedgerSeq, val = _response$entries$2.val;\n              if (!(val.switch().value !== _stellarBase.xdr.LedgerEntryType.contractData().value)) {\n                _context25.next = 21;\n                break;\n              }\n              return _context25.abrupt(\"return\", {\n                latestLedger: response.latestLedger\n              });\n            case 21:\n              entry = (0, _stellarBase.scValToNative)(val.contractData().val());\n              return _context25.abrupt(\"return\", {\n                latestLedger: response.latestLedger,\n                balanceEntry: {\n                  liveUntilLedgerSeq: liveUntilLedgerSeq,\n                  lastModifiedLedgerSeq: lastModifiedLedgerSeq,\n                  amount: entry.amount.toString(),\n                  authorized: entry.authorized,\n                  clawback: entry.clawback\n                }\n              });\n            case 23:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n      function getSACBalance(_x23, _x24, _x25) {\n        return _getSACBalance.apply(this, arguments);\n      }\n      return getSACBalance;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js":
/*!*********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/transaction.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.assembleTransaction = assembleTransaction;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _parsers = __webpack_require__(/*! ./parsers */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\");\nfunction isSorobanTransaction(tx) {\n  if (tx.operations.length !== 1) {\n    return false;\n  }\n  switch (tx.operations[0].type) {\n    case 'invokeHostFunction':\n    case 'extendFootprintTtl':\n    case 'restoreFootprint':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction assembleTransaction(raw, simulation) {\n  if ('innerTransaction' in raw) {\n    return assembleTransaction(raw.innerTransaction, simulation);\n  }\n  if (!isSorobanTransaction(raw)) {\n    throw new TypeError('unsupported transaction: must contain exactly one ' + 'invokeHostFunction, extendFootprintTtl, or restoreFootprint ' + 'operation');\n  }\n  var success = (0, _parsers.parseRawSimulation)(simulation);\n  if (!_api.Api.isSimulationSuccess(success)) {\n    throw new Error(\"simulation incorrect: \".concat(JSON.stringify(success)));\n  }\n  var classicFeeNum = parseInt(raw.fee) || 0;\n  var minResourceFeeNum = parseInt(success.minResourceFee) || 0;\n  var txnBuilder = _stellarBase.TransactionBuilder.cloneFrom(raw, {\n    fee: (classicFeeNum + minResourceFeeNum).toString(),\n    sorobanData: success.transactionData.build(),\n    networkPassphrase: raw.networkPassphrase\n  });\n  if (raw.operations[0].type === 'invokeHostFunction') {\n    var _invokeOp$auth;\n    txnBuilder.clearOperations();\n    var invokeOp = raw.operations[0];\n    var existingAuth = (_invokeOp$auth = invokeOp.auth) !== null && _invokeOp$auth !== void 0 ? _invokeOp$auth : [];\n    txnBuilder.addOperation(_stellarBase.Operation.invokeHostFunction({\n      source: invokeOp.source,\n      func: invokeOp.func,\n      auth: existingAuth.length > 0 ? existingAuth : success.result.auth\n    }));\n  }\n  return txnBuilder;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy90cmFuc2FjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwyQkFBMkI7QUFDM0IsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ2xELFdBQVcsbUJBQU8sQ0FBQyw4REFBTztBQUMxQixlQUFlLG1CQUFPLENBQUMsc0VBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ycGMvdHJhbnNhY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmFzc2VtYmxlVHJhbnNhY3Rpb24gPSBhc3NlbWJsZVRyYW5zYWN0aW9uO1xudmFyIF9zdGVsbGFyQmFzZSA9IHJlcXVpcmUoXCJAc3RlbGxhci9zdGVsbGFyLWJhc2VcIik7XG52YXIgX2FwaSA9IHJlcXVpcmUoXCIuL2FwaVwiKTtcbnZhciBfcGFyc2VycyA9IHJlcXVpcmUoXCIuL3BhcnNlcnNcIik7XG5mdW5jdGlvbiBpc1Nvcm9iYW5UcmFuc2FjdGlvbih0eCkge1xuICBpZiAodHgub3BlcmF0aW9ucy5sZW5ndGggIT09IDEpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3dpdGNoICh0eC5vcGVyYXRpb25zWzBdLnR5cGUpIHtcbiAgICBjYXNlICdpbnZva2VIb3N0RnVuY3Rpb24nOlxuICAgIGNhc2UgJ2V4dGVuZEZvb3RwcmludFR0bCc6XG4gICAgY2FzZSAncmVzdG9yZUZvb3RwcmludCc6XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBhc3NlbWJsZVRyYW5zYWN0aW9uKHJhdywgc2ltdWxhdGlvbikge1xuICBpZiAoJ2lubmVyVHJhbnNhY3Rpb24nIGluIHJhdykge1xuICAgIHJldHVybiBhc3NlbWJsZVRyYW5zYWN0aW9uKHJhdy5pbm5lclRyYW5zYWN0aW9uLCBzaW11bGF0aW9uKTtcbiAgfVxuICBpZiAoIWlzU29yb2JhblRyYW5zYWN0aW9uKHJhdykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd1bnN1cHBvcnRlZCB0cmFuc2FjdGlvbjogbXVzdCBjb250YWluIGV4YWN0bHkgb25lICcgKyAnaW52b2tlSG9zdEZ1bmN0aW9uLCBleHRlbmRGb290cHJpbnRUdGwsIG9yIHJlc3RvcmVGb290cHJpbnQgJyArICdvcGVyYXRpb24nKTtcbiAgfVxuICB2YXIgc3VjY2VzcyA9ICgwLCBfcGFyc2Vycy5wYXJzZVJhd1NpbXVsYXRpb24pKHNpbXVsYXRpb24pO1xuICBpZiAoIV9hcGkuQXBpLmlzU2ltdWxhdGlvblN1Y2Nlc3Moc3VjY2VzcykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJzaW11bGF0aW9uIGluY29ycmVjdDogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHN1Y2Nlc3MpKSk7XG4gIH1cbiAgdmFyIGNsYXNzaWNGZWVOdW0gPSBwYXJzZUludChyYXcuZmVlKSB8fCAwO1xuICB2YXIgbWluUmVzb3VyY2VGZWVOdW0gPSBwYXJzZUludChzdWNjZXNzLm1pblJlc291cmNlRmVlKSB8fCAwO1xuICB2YXIgdHhuQnVpbGRlciA9IF9zdGVsbGFyQmFzZS5UcmFuc2FjdGlvbkJ1aWxkZXIuY2xvbmVGcm9tKHJhdywge1xuICAgIGZlZTogKGNsYXNzaWNGZWVOdW0gKyBtaW5SZXNvdXJjZUZlZU51bSkudG9TdHJpbmcoKSxcbiAgICBzb3JvYmFuRGF0YTogc3VjY2Vzcy50cmFuc2FjdGlvbkRhdGEuYnVpbGQoKSxcbiAgICBuZXR3b3JrUGFzc3BocmFzZTogcmF3Lm5ldHdvcmtQYXNzcGhyYXNlXG4gIH0pO1xuICBpZiAocmF3Lm9wZXJhdGlvbnNbMF0udHlwZSA9PT0gJ2ludm9rZUhvc3RGdW5jdGlvbicpIHtcbiAgICB2YXIgX2ludm9rZU9wJGF1dGg7XG4gICAgdHhuQnVpbGRlci5jbGVhck9wZXJhdGlvbnMoKTtcbiAgICB2YXIgaW52b2tlT3AgPSByYXcub3BlcmF0aW9uc1swXTtcbiAgICB2YXIgZXhpc3RpbmdBdXRoID0gKF9pbnZva2VPcCRhdXRoID0gaW52b2tlT3AuYXV0aCkgIT09IG51bGwgJiYgX2ludm9rZU9wJGF1dGggIT09IHZvaWQgMCA/IF9pbnZva2VPcCRhdXRoIDogW107XG4gICAgdHhuQnVpbGRlci5hZGRPcGVyYXRpb24oX3N0ZWxsYXJCYXNlLk9wZXJhdGlvbi5pbnZva2VIb3N0RnVuY3Rpb24oe1xuICAgICAgc291cmNlOiBpbnZva2VPcC5zb3VyY2UsXG4gICAgICBmdW5jOiBpbnZva2VPcC5mdW5jLFxuICAgICAgYXV0aDogZXhpc3RpbmdBdXRoLmxlbmd0aCA+IDAgPyBleGlzdGluZ0F1dGggOiBzdWNjZXNzLnJlc3VsdC5hdXRoXG4gICAgfSkpO1xuICB9XG4gIHJldHVybiB0eG5CdWlsZGVyO1xufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/stellartoml/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.STELLAR_TOML_MAX_SIZE = exports.Resolver = exports.Api = void 0;\nvar _toml = _interopRequireDefault(__webpack_require__(/*! toml */ \"(ssr)/./node_modules/toml/index.js\"));\nvar _httpClient = __webpack_require__(/*! ../http-client */ \"(ssr)/./node_modules/stellar-sdk/lib/http-client/index.js\");\nvar _config = __webpack_require__(/*! ../config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar STELLAR_TOML_MAX_SIZE = exports.STELLAR_TOML_MAX_SIZE = 100 * 1024;\nvar CancelToken = _httpClient.httpClient.CancelToken;\nvar Resolver = exports.Resolver = function () {\n  function Resolver() {\n    _classCallCheck(this, Resolver);\n  }\n  return _createClass(Resolver, null, [{\n    key: \"resolve\",\n    value: (function () {\n      var _resolve = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(domain) {\n        var _opts$allowedRedirect;\n        var opts,\n          allowHttp,\n          timeout,\n          protocol,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              opts = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              allowHttp = typeof opts.allowHttp === \"undefined\" ? _config.Config.isAllowHttp() : opts.allowHttp;\n              timeout = typeof opts.timeout === \"undefined\" ? _config.Config.getTimeout() : opts.timeout;\n              protocol = allowHttp ? \"http\" : \"https\";\n              return _context.abrupt(\"return\", _httpClient.httpClient.get(\"\".concat(protocol, \"://\").concat(domain, \"/.well-known/stellar.toml\"), {\n                maxRedirects: (_opts$allowedRedirect = opts.allowedRedirects) !== null && _opts$allowedRedirect !== void 0 ? _opts$allowedRedirect : 0,\n                maxContentLength: STELLAR_TOML_MAX_SIZE,\n                cancelToken: timeout ? new CancelToken(function (cancel) {\n                  return setTimeout(function () {\n                    return cancel(\"timeout of \".concat(timeout, \"ms exceeded\"));\n                  }, timeout);\n                }) : undefined,\n                timeout: timeout\n              }).then(function (response) {\n                try {\n                  var tomlObject = _toml.default.parse(response.data);\n                  return Promise.resolve(tomlObject);\n                } catch (e) {\n                  return Promise.reject(new Error(\"stellar.toml is invalid - Parsing error on line \".concat(e.line, \", column \").concat(e.column, \": \").concat(e.message)));\n                }\n              }).catch(function (err) {\n                if (err.message.match(/^maxContentLength size/)) {\n                  throw new Error(\"stellar.toml file exceeds allowed size of \".concat(STELLAR_TOML_MAX_SIZE));\n                } else {\n                  throw err;\n                }\n              }));\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function resolve(_x) {\n        return _resolve.apply(this, arguments);\n      }\n      return resolve;\n    }())\n  }]);\n}();\nvar Api;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/stellar-sdk/lib/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Utils = void 0;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Utils = exports.Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n  return _createClass(Utils, null, [{\n    key: \"validateTimebounds\",\n    value: function validateTimebounds(transaction) {\n      var gracePeriod = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (!transaction.timeBounds) {\n        return false;\n      }\n      var now = Math.floor(Date.now() / 1000);\n      var _transaction$timeBoun = transaction.timeBounds,\n        minTime = _transaction$timeBoun.minTime,\n        maxTime = _transaction$timeBoun.maxTime;\n      return now >= Number.parseInt(minTime, 10) - gracePeriod && now <= Number.parseInt(maxTime, 10) + gracePeriod;\n    }\n  }, {\n    key: \"sleep\",\n    value: function sleep(ms) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n      });\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGFBQWE7QUFDYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsWUFBWSxhQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuVXRpbHMgPSB2b2lkIDA7XG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG52YXIgVXRpbHMgPSBleHBvcnRzLlV0aWxzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBVdGlscygpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVXRpbHMpO1xuICB9XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoVXRpbHMsIG51bGwsIFt7XG4gICAga2V5OiBcInZhbGlkYXRlVGltZWJvdW5kc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWxpZGF0ZVRpbWVib3VuZHModHJhbnNhY3Rpb24pIHtcbiAgICAgIHZhciBncmFjZVBlcmlvZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgICAgIGlmICghdHJhbnNhY3Rpb24udGltZUJvdW5kcykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICB2YXIgbm93ID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG4gICAgICB2YXIgX3RyYW5zYWN0aW9uJHRpbWVCb3VuID0gdHJhbnNhY3Rpb24udGltZUJvdW5kcyxcbiAgICAgICAgbWluVGltZSA9IF90cmFuc2FjdGlvbiR0aW1lQm91bi5taW5UaW1lLFxuICAgICAgICBtYXhUaW1lID0gX3RyYW5zYWN0aW9uJHRpbWVCb3VuLm1heFRpbWU7XG4gICAgICByZXR1cm4gbm93ID49IE51bWJlci5wYXJzZUludChtaW5UaW1lLCAxMCkgLSBncmFjZVBlcmlvZCAmJiBub3cgPD0gTnVtYmVyLnBhcnNlSW50KG1heFRpbWUsIDEwKSArIGdyYWNlUGVyaW9kO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzbGVlcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzbGVlcChtcykge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xufSgpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/webauth/errors.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.InvalidChallengeError = void 0;\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nvar InvalidChallengeError = exports.InvalidChallengeError = function (_Error) {\n  function InvalidChallengeError(message) {\n    var _this;\n    _classCallCheck(this, InvalidChallengeError);\n    var trueProto = (this instanceof InvalidChallengeError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, InvalidChallengeError, [message]);\n    _this.__proto__ = trueProto;\n    _this.constructor = InvalidChallengeError;\n    _this.name = \"InvalidChallengeError\";\n    return _this;\n  }\n  _inherits(InvalidChallengeError, _Error);\n  return _createClass(InvalidChallengeError);\n}(_wrapNativeSuper(Error));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3dlYmF1dGgvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDZCQUE2QjtBQUM3QixtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksMkJBQTJCLHFIQUFxSCxnREFBZ0QsZUFBZSw0Q0FBNEMsMkNBQTJDLGNBQWM7QUFDcFQsK0JBQStCLHVEQUF1RCx5REFBeUQsbURBQW1ELHVHQUF1RyxvQkFBb0IsK0JBQStCLHFCQUFxQixxQkFBcUIsc0VBQXNFLHdEQUF3RCxlQUFlLGtFQUFrRSxpQ0FBaUM7QUFDdG5CLCtCQUErQixrRkFBa0YsZ0JBQWdCLG9CQUFvQixvQ0FBb0M7QUFDekwsdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3TyxnQ0FBZ0MsTUFBTSxvRUFBb0UsWUFBWTtBQUN0SCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSiw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5Syw0QkFBNEIsNkJBQTZCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL1RhcnVuU2luZ2gvRG9jdW1lbnRzL3N0ZWxsZXIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi93ZWJhdXRoL2Vycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuSW52YWxpZENoYWxsZW5nZUVycm9yID0gdm9pZCAwO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIodCkgeyB2YXIgciA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgTWFwID8gbmV3IE1hcCgpIDogdm9pZCAwOyByZXR1cm4gX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIodCkgeyBpZiAobnVsbCA9PT0gdCB8fCAhX2lzTmF0aXZlRnVuY3Rpb24odCkpIHJldHVybiB0OyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiB0KSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IGlmICh2b2lkIDAgIT09IHIpIHsgaWYgKHIuaGFzKHQpKSByZXR1cm4gci5nZXQodCk7IHIuc2V0KHQsIFdyYXBwZXIpOyB9IGZ1bmN0aW9uIFdyYXBwZXIoKSB7IHJldHVybiBfY29uc3RydWN0KHQsIGFyZ3VtZW50cywgX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTsgfSByZXR1cm4gV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHQucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBXcmFwcGVyLCBlbnVtZXJhYmxlOiAhMSwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIF9zZXRQcm90b3R5cGVPZihXcmFwcGVyLCB0KTsgfSwgX3dyYXBOYXRpdmVTdXBlcih0KTsgfVxuZnVuY3Rpb24gX2NvbnN0cnVjdCh0LCBlLCByKSB7IGlmIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHJldHVybiBSZWZsZWN0LmNvbnN0cnVjdC5hcHBseShudWxsLCBhcmd1bWVudHMpOyB2YXIgbyA9IFtudWxsXTsgby5wdXNoLmFwcGx5KG8sIGUpOyB2YXIgcCA9IG5ldyAodC5iaW5kLmFwcGx5KHQsIG8pKSgpOyByZXR1cm4gciAmJiBfc2V0UHJvdG90eXBlT2YocCwgci5wcm90b3R5cGUpLCBwOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKHQpIHsgdHJ5IHsgcmV0dXJuIC0xICE9PSBGdW5jdGlvbi50b1N0cmluZy5jYWxsKHQpLmluZGV4T2YoXCJbbmF0aXZlIGNvZGVdXCIpOyB9IGNhdGNoIChuKSB7IHJldHVybiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIHQ7IH0gfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG52YXIgSW52YWxpZENoYWxsZW5nZUVycm9yID0gZXhwb3J0cy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IgPSBmdW5jdGlvbiAoX0Vycm9yKSB7XG4gIGZ1bmN0aW9uIEludmFsaWRDaGFsbGVuZ2VFcnJvcihtZXNzYWdlKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJbnZhbGlkQ2hhbGxlbmdlRXJyb3IpO1xuICAgIHZhciB0cnVlUHJvdG8gPSAodGhpcyBpbnN0YW5jZW9mIEludmFsaWRDaGFsbGVuZ2VFcnJvciA/IHRoaXMuY29uc3RydWN0b3IgOiB2b2lkIDApLnByb3RvdHlwZTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgSW52YWxpZENoYWxsZW5nZUVycm9yLCBbbWVzc2FnZV0pO1xuICAgIF90aGlzLl9fcHJvdG9fXyA9IHRydWVQcm90bztcbiAgICBfdGhpcy5jb25zdHJ1Y3RvciA9IEludmFsaWRDaGFsbGVuZ2VFcnJvcjtcbiAgICBfdGhpcy5uYW1lID0gXCJJbnZhbGlkQ2hhbGxlbmdlRXJyb3JcIjtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKEludmFsaWRDaGFsbGVuZ2VFcnJvciwgX0Vycm9yKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhJbnZhbGlkQ2hhbGxlbmdlRXJyb3IpO1xufShfd3JhcE5hdGl2ZVN1cGVyKEVycm9yKSk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/webauth/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/webauth/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  InvalidChallengeError: true\n};\nObject.defineProperty(exports, \"InvalidChallengeError\", ({\n  enumerable: true,\n  get: function get() {\n    return _errors.InvalidChallengeError;\n  }\n}));\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/utils.js\");\nObject.keys(_utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _utils[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _utils[key];\n    }\n  });\n});\nvar _errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3dlYmF1dGgvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EseURBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsYUFBYSxtQkFBTyxDQUFDLHNFQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLHdFQUFVIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvd2ViYXV0aC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7XG4gIEludmFsaWRDaGFsbGVuZ2VFcnJvcjogdHJ1ZVxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkludmFsaWRDaGFsbGVuZ2VFcnJvclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcjtcbiAgfVxufSk7XG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5PYmplY3Qua2V5cyhfdXRpbHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF91dGlsc1trZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF91dGlsc1trZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/webauth/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/webauth/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/webauth/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.buildChallengeTx = buildChallengeTx;\nexports.gatherTxSigners = gatherTxSigners;\nexports.readChallengeTx = readChallengeTx;\nexports.verifyChallengeTxSigners = verifyChallengeTxSigners;\nexports.verifyChallengeTxThreshold = verifyChallengeTxThreshold;\nexports.verifyTxSignedBy = verifyTxSignedBy;\nvar _randombytes = _interopRequireDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/stellar-sdk/lib/utils.js\");\nvar _errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toArray(r) { return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction buildChallengeTx(serverKeypair, clientAccountID, homeDomain) {\n  var timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 300;\n  var networkPassphrase = arguments.length > 4 ? arguments[4] : undefined;\n  var webAuthDomain = arguments.length > 5 ? arguments[5] : undefined;\n  var memo = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var clientDomain = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var clientSigningKey = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n  if (clientAccountID.startsWith(\"M\") && memo) {\n    throw Error(\"memo cannot be used if clientAccountID is a muxed account\");\n  }\n  var account = new _stellarBase.Account(serverKeypair.publicKey(), \"-1\");\n  var now = Math.floor(Date.now() / 1000);\n  var value = (0, _randombytes.default)(48).toString(\"base64\");\n  var builder = new _stellarBase.TransactionBuilder(account, {\n    fee: _stellarBase.BASE_FEE,\n    networkPassphrase: networkPassphrase,\n    timebounds: {\n      minTime: now,\n      maxTime: now + timeout\n    }\n  }).addOperation(_stellarBase.Operation.manageData({\n    name: \"\".concat(homeDomain, \" auth\"),\n    value: value,\n    source: clientAccountID\n  })).addOperation(_stellarBase.Operation.manageData({\n    name: \"web_auth_domain\",\n    value: webAuthDomain,\n    source: account.accountId()\n  }));\n  if (clientDomain) {\n    if (!clientSigningKey) {\n      throw Error(\"clientSigningKey is required if clientDomain is provided\");\n    }\n    builder.addOperation(_stellarBase.Operation.manageData({\n      name: \"client_domain\",\n      value: clientDomain,\n      source: clientSigningKey\n    }));\n  }\n  if (memo) {\n    builder.addMemo(_stellarBase.Memo.id(memo));\n  }\n  var transaction = builder.build();\n  transaction.sign(serverKeypair);\n  return transaction.toEnvelope().toXDR(\"base64\").toString();\n}\nfunction readChallengeTx(challengeTx, serverAccountID, networkPassphrase, homeDomains, webAuthDomain) {\n  var _transaction$timeBoun;\n  if (serverAccountID.startsWith(\"M\")) {\n    throw Error(\"Invalid serverAccountID: multiplexed accounts are not supported.\");\n  }\n  var transaction;\n  try {\n    transaction = new _stellarBase.Transaction(challengeTx, networkPassphrase);\n  } catch (_unused) {\n    try {\n      transaction = new _stellarBase.FeeBumpTransaction(challengeTx, networkPassphrase);\n    } catch (_unused2) {\n      throw new _errors.InvalidChallengeError(\"Invalid challenge: unable to deserialize challengeTx transaction string\");\n    }\n    throw new _errors.InvalidChallengeError(\"Invalid challenge: expected a Transaction but received a FeeBumpTransaction\");\n  }\n  var sequence = Number.parseInt(transaction.sequence, 10);\n  if (sequence !== 0) {\n    throw new _errors.InvalidChallengeError(\"The transaction sequence number should be zero\");\n  }\n  if (transaction.source !== serverAccountID) {\n    throw new _errors.InvalidChallengeError(\"The transaction source account is not equal to the server's account\");\n  }\n  if (transaction.operations.length < 1) {\n    throw new _errors.InvalidChallengeError(\"The transaction should contain at least one operation\");\n  }\n  var _transaction$operatio = _toArray(transaction.operations),\n    operation = _transaction$operatio[0],\n    subsequentOperations = _transaction$operatio.slice(1);\n  if (!operation.source) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation should contain a source account\");\n  }\n  var clientAccountID = operation.source;\n  var memo = null;\n  if (transaction.memo.type !== _stellarBase.MemoNone) {\n    if (clientAccountID.startsWith(\"M\")) {\n      throw new _errors.InvalidChallengeError(\"The transaction has a memo but the client account ID is a muxed account\");\n    }\n    if (transaction.memo.type !== _stellarBase.MemoID) {\n      throw new _errors.InvalidChallengeError(\"The transaction's memo must be of type `id`\");\n    }\n    memo = transaction.memo.value;\n  }\n  if (operation.type !== \"manageData\") {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation type should be 'manageData'\");\n  }\n  if (transaction.timeBounds && Number.parseInt((_transaction$timeBoun = transaction.timeBounds) === null || _transaction$timeBoun === void 0 ? void 0 : _transaction$timeBoun.maxTime, 10) === _stellarBase.TimeoutInfinite) {\n    throw new _errors.InvalidChallengeError(\"The transaction requires non-infinite timebounds\");\n  }\n  if (!_utils.Utils.validateTimebounds(transaction, 60 * 5)) {\n    throw new _errors.InvalidChallengeError(\"The transaction has expired\");\n  }\n  if (operation.value === undefined) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation values should not be null\");\n  }\n  if (!operation.value) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation value should not be null\");\n  }\n  if (Buffer.from(operation.value.toString(), \"base64\").length !== 48) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation value should be a 64 bytes base64 random string\");\n  }\n  if (!homeDomains) {\n    throw new _errors.InvalidChallengeError(\"Invalid homeDomains: a home domain must be provided for verification\");\n  }\n  var matchedHomeDomain;\n  if (typeof homeDomains === \"string\") {\n    if (\"\".concat(homeDomains, \" auth\") === operation.name) {\n      matchedHomeDomain = homeDomains;\n    }\n  } else if (Array.isArray(homeDomains)) {\n    matchedHomeDomain = homeDomains.find(function (domain) {\n      return \"\".concat(domain, \" auth\") === operation.name;\n    });\n  } else {\n    throw new _errors.InvalidChallengeError(\"Invalid homeDomains: homeDomains type is \".concat(_typeof(homeDomains), \" but should be a string or an array\"));\n  }\n  if (!matchedHomeDomain) {\n    throw new _errors.InvalidChallengeError(\"Invalid homeDomains: the transaction's operation key name does not match the expected home domain\");\n  }\n  var _iterator = _createForOfIteratorHelper(subsequentOperations),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var op = _step.value;\n      if (op.type !== \"manageData\") {\n        throw new _errors.InvalidChallengeError(\"The transaction has operations that are not of type 'manageData'\");\n      }\n      if (op.source !== serverAccountID && op.name !== \"client_domain\") {\n        throw new _errors.InvalidChallengeError(\"The transaction has operations that are unrecognized\");\n      }\n      if (op.name === \"web_auth_domain\") {\n        if (op.value === undefined) {\n          throw new _errors.InvalidChallengeError(\"'web_auth_domain' operation value should not be null\");\n        }\n        if (op.value.compare(Buffer.from(webAuthDomain))) {\n          throw new _errors.InvalidChallengeError(\"'web_auth_domain' operation value does not match \".concat(webAuthDomain));\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (!verifyTxSignedBy(transaction, serverAccountID)) {\n    throw new _errors.InvalidChallengeError(\"Transaction not signed by server: '\".concat(serverAccountID, \"'\"));\n  }\n  return {\n    tx: transaction,\n    clientAccountID: clientAccountID,\n    matchedHomeDomain: matchedHomeDomain,\n    memo: memo\n  };\n}\nfunction verifyChallengeTxThreshold(challengeTx, serverAccountID, networkPassphrase, threshold, signerSummary, homeDomains, webAuthDomain) {\n  var signers = signerSummary.map(function (signer) {\n    return signer.key;\n  });\n  var signersFound = verifyChallengeTxSigners(challengeTx, serverAccountID, networkPassphrase, signers, homeDomains, webAuthDomain);\n  var weight = 0;\n  var _loop = function _loop() {\n    var _signerSummary$find;\n    var signer = _signersFound[_i];\n    var sigWeight = ((_signerSummary$find = signerSummary.find(function (s) {\n      return s.key === signer;\n    })) === null || _signerSummary$find === void 0 ? void 0 : _signerSummary$find.weight) || 0;\n    weight += sigWeight;\n  };\n  for (var _i = 0, _signersFound = signersFound; _i < _signersFound.length; _i++) {\n    _loop();\n  }\n  if (weight < threshold) {\n    throw new _errors.InvalidChallengeError(\"signers with weight \".concat(weight, \" do not meet threshold \").concat(threshold, \"\\\"\"));\n  }\n  return signersFound;\n}\nfunction verifyChallengeTxSigners(challengeTx, serverAccountID, networkPassphrase, signers, homeDomains, webAuthDomain) {\n  var _readChallengeTx = readChallengeTx(challengeTx, serverAccountID, networkPassphrase, homeDomains, webAuthDomain),\n    tx = _readChallengeTx.tx;\n  var serverKP;\n  try {\n    serverKP = _stellarBase.Keypair.fromPublicKey(serverAccountID);\n  } catch (err) {\n    throw new Error(\"Couldn't infer keypair from the provided 'serverAccountID': \".concat(err.message));\n  }\n  var clientSigners = new Set();\n  var _iterator2 = _createForOfIteratorHelper(signers),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _signer = _step2.value;\n      if (_signer === serverKP.publicKey()) {\n        continue;\n      }\n      if (_signer.charAt(0) !== \"G\") {\n        continue;\n      }\n      clientSigners.add(_signer);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  if (clientSigners.size === 0) {\n    throw new _errors.InvalidChallengeError(\"No verifiable client signers provided, at least one G... address must be provided\");\n  }\n  var clientSigningKey;\n  var _iterator3 = _createForOfIteratorHelper(tx.operations),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var op = _step3.value;\n      if (op.type === \"manageData\" && op.name === \"client_domain\") {\n        if (clientSigningKey) {\n          throw new _errors.InvalidChallengeError(\"Found more than one client_domain operation\");\n        }\n        clientSigningKey = op.source;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var allSigners = [serverKP.publicKey()].concat(_toConsumableArray(Array.from(clientSigners)));\n  if (clientSigningKey) {\n    allSigners.push(clientSigningKey);\n  }\n  var signersFound = gatherTxSigners(tx, allSigners);\n  var serverSignatureFound = false;\n  var clientSigningKeySignatureFound = false;\n  for (var _i2 = 0, _signersFound2 = signersFound; _i2 < _signersFound2.length; _i2++) {\n    var signer = _signersFound2[_i2];\n    if (signer === serverKP.publicKey()) {\n      serverSignatureFound = true;\n    }\n    if (signer === clientSigningKey) {\n      clientSigningKeySignatureFound = true;\n    }\n  }\n  if (!serverSignatureFound) {\n    throw new _errors.InvalidChallengeError(\"Transaction not signed by server: '\".concat(serverKP.publicKey(), \"'\"));\n  }\n  if (clientSigningKey && !clientSigningKeySignatureFound) {\n    throw new _errors.InvalidChallengeError(\"Transaction not signed by the source account of the 'client_domain' \" + \"ManageData operation\");\n  }\n  if (signersFound.length === 1) {\n    throw new _errors.InvalidChallengeError(\"None of the given signers match the transaction signatures\");\n  }\n  if (signersFound.length !== tx.signatures.length) {\n    throw new _errors.InvalidChallengeError(\"Transaction has unrecognized signatures\");\n  }\n  signersFound.splice(signersFound.indexOf(serverKP.publicKey()), 1);\n  if (clientSigningKey) {\n    signersFound.splice(signersFound.indexOf(clientSigningKey), 1);\n  }\n  return signersFound;\n}\nfunction verifyTxSignedBy(transaction, accountID) {\n  return gatherTxSigners(transaction, [accountID]).length !== 0;\n}\nfunction gatherTxSigners(transaction, signers) {\n  var hashedSignatureBase = transaction.hash();\n  var txSignatures = _toConsumableArray(transaction.signatures);\n  var signersFound = new Set();\n  var _iterator4 = _createForOfIteratorHelper(signers),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var signer = _step4.value;\n      if (txSignatures.length === 0) {\n        break;\n      }\n      var keypair = void 0;\n      try {\n        keypair = _stellarBase.Keypair.fromPublicKey(signer);\n      } catch (err) {\n        throw new _errors.InvalidChallengeError(\"Signer is not a valid address: \".concat(err.message));\n      }\n      for (var i = 0; i < txSignatures.length; i++) {\n        var decSig = txSignatures[i];\n        if (!decSig.hint().equals(keypair.signatureHint())) {\n          continue;\n        }\n        if (keypair.verify(hashedSignatureBase, decSig.signature())) {\n          signersFound.add(signer);\n          txSignatures.splice(i, 1);\n          break;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return Array.from(signersFound);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3dlYmF1dGgvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysd0JBQXdCO0FBQ3hCLHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkIsZ0NBQWdDO0FBQ2hDLGtDQUFrQztBQUNsQyx3QkFBd0I7QUFDeEIsMENBQTBDLG1CQUFPLENBQUMsOERBQWE7QUFDL0QsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ2xELGFBQWEsbUJBQU8sQ0FBQywrREFBVTtBQUMvQixjQUFjLG1CQUFPLENBQUMsd0VBQVU7QUFDaEMscUNBQXFDLGlDQUFpQztBQUN0RSxpQ0FBaUM7QUFDakMsZ0NBQWdDO0FBQ2hDLGlDQUFpQztBQUNqQyw0Q0FBNEMsK0VBQStFLFVBQVUseUdBQXlHLGNBQWMsaUNBQWlDLFNBQVMsd0JBQXdCLDBCQUEwQixXQUFXLElBQUksNkJBQTZCLHFCQUFxQixVQUFVLFlBQVksZ0tBQWdLLHVCQUF1QixTQUFTLGtCQUFrQixnQkFBZ0Isb0JBQW9CLGtCQUFrQix1QkFBdUIscUJBQXFCLGdCQUFnQixvQkFBb0IsTUFBTSx1Q0FBdUMsVUFBVTtBQUM5ekIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsdUJBQXVCO0FBQ3ZCLDhCQUE4QjtBQUM5Qiw2Q0FBNkMsU0FBUywwREFBMEQsVUFBVSxnQ0FBZ0M7QUFDMUosbUNBQW1DLCtDQUErQyw4QkFBOEIsT0FBTyxrQkFBa0I7QUFDekksK0JBQStCO0FBQy9CLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDhCQUE4QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGlEQUFpRCwyQkFBMkI7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdDQUFnQztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdDQUFnQztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCw2QkFBNkI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdDQUFnQztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0Esc0JBQXNCLHlCQUF5QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9UYXJ1blNpbmdoL0RvY3VtZW50cy9zdGVsbGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvd2ViYXV0aC91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuYnVpbGRDaGFsbGVuZ2VUeCA9IGJ1aWxkQ2hhbGxlbmdlVHg7XG5leHBvcnRzLmdhdGhlclR4U2lnbmVycyA9IGdhdGhlclR4U2lnbmVycztcbmV4cG9ydHMucmVhZENoYWxsZW5nZVR4ID0gcmVhZENoYWxsZW5nZVR4O1xuZXhwb3J0cy52ZXJpZnlDaGFsbGVuZ2VUeFNpZ25lcnMgPSB2ZXJpZnlDaGFsbGVuZ2VUeFNpZ25lcnM7XG5leHBvcnRzLnZlcmlmeUNoYWxsZW5nZVR4VGhyZXNob2xkID0gdmVyaWZ5Q2hhbGxlbmdlVHhUaHJlc2hvbGQ7XG5leHBvcnRzLnZlcmlmeVR4U2lnbmVkQnkgPSB2ZXJpZnlUeFNpZ25lZEJ5O1xudmFyIF9yYW5kb21ieXRlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbnZhciBfc3RlbGxhckJhc2UgPSByZXF1aXJlKFwiQHN0ZWxsYXIvc3RlbGxhci1iYXNlXCIpO1xudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbnZhciBfZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChlKSB7IHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsgfVxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KHIpIHsgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhyKSB8fCBfaXRlcmFibGVUb0FycmF5KHIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsgfVxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKHIpIHsgaWYgKEFycmF5LmlzQXJyYXkocikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShyKTsgfVxuZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIociwgZSkgeyB2YXIgdCA9IFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIFN5bWJvbCAmJiByW1N5bWJvbC5pdGVyYXRvcl0gfHwgcltcIkBAaXRlcmF0b3JcIl07IGlmICghdCkgeyBpZiAoQXJyYXkuaXNBcnJheShyKSB8fCAodCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyKSkgfHwgZSAmJiByICYmIFwibnVtYmVyXCIgPT0gdHlwZW9mIHIubGVuZ3RoKSB7IHQgJiYgKHIgPSB0KTsgdmFyIF9uID0gMCwgRiA9IGZ1bmN0aW9uIEYoKSB7fTsgcmV0dXJuIHsgczogRiwgbjogZnVuY3Rpb24gbigpIHsgcmV0dXJuIF9uID49IHIubGVuZ3RoID8geyBkb25lOiAhMCB9IDogeyBkb25lOiAhMSwgdmFsdWU6IHJbX24rK10gfTsgfSwgZTogZnVuY3Rpb24gZShyKSB7IHRocm93IHI7IH0sIGY6IEYgfTsgfSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH0gdmFyIG8sIGEgPSAhMCwgdSA9ICExOyByZXR1cm4geyBzOiBmdW5jdGlvbiBzKCkgeyB0ID0gdC5jYWxsKHIpOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgciA9IHQubmV4dCgpOyByZXR1cm4gYSA9IHIuZG9uZSwgcjsgfSwgZTogZnVuY3Rpb24gZShyKSB7IHUgPSAhMCwgbyA9IHI7IH0sIGY6IGZ1bmN0aW9uIGYoKSB7IHRyeSB7IGEgfHwgbnVsbCA9PSB0LnJldHVybiB8fCB0LnJldHVybigpOyB9IGZpbmFsbHkgeyBpZiAodSkgdGhyb3cgbzsgfSB9IH07IH1cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbmZ1bmN0aW9uIF90b0FycmF5KHIpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhyKSB8fCBfaXRlcmFibGVUb0FycmF5KHIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBhKSB7IGlmIChyKSB7IGlmIChcInN0cmluZ1wiID09IHR5cGVvZiByKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkociwgYSk7IHZhciB0ID0ge30udG9TdHJpbmcuY2FsbChyKS5zbGljZSg4LCAtMSk7IHJldHVybiBcIk9iamVjdFwiID09PSB0ICYmIHIuY29uc3RydWN0b3IgJiYgKHQgPSByLmNvbnN0cnVjdG9yLm5hbWUpLCBcIk1hcFwiID09PSB0IHx8IFwiU2V0XCIgPT09IHQgPyBBcnJheS5mcm9tKHIpIDogXCJBcmd1bWVudHNcIiA9PT0gdCB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdCh0KSA/IF9hcnJheUxpa2VUb0FycmF5KHIsIGEpIDogdm9pZCAwOyB9IH1cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpIHsgKG51bGwgPT0gYSB8fCBhID4gci5sZW5ndGgpICYmIChhID0gci5sZW5ndGgpOyBmb3IgKHZhciBlID0gMCwgbiA9IEFycmF5KGEpOyBlIDwgYTsgZSsrKSBuW2VdID0gcltlXTsgcmV0dXJuIG47IH1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkocikgeyBpZiAoXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIG51bGwgIT0gcltTeW1ib2wuaXRlcmF0b3JdIHx8IG51bGwgIT0gcltcIkBAaXRlcmF0b3JcIl0pIHJldHVybiBBcnJheS5mcm9tKHIpOyB9XG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMocikgeyBpZiAoQXJyYXkuaXNBcnJheShyKSkgcmV0dXJuIHI7IH1cbmZ1bmN0aW9uIGJ1aWxkQ2hhbGxlbmdlVHgoc2VydmVyS2V5cGFpciwgY2xpZW50QWNjb3VudElELCBob21lRG9tYWluKSB7XG4gIHZhciB0aW1lb3V0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAzMDA7XG4gIHZhciBuZXR3b3JrUGFzc3BocmFzZSA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ID8gYXJndW1lbnRzWzRdIDogdW5kZWZpbmVkO1xuICB2YXIgd2ViQXV0aERvbWFpbiA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ID8gYXJndW1lbnRzWzVdIDogdW5kZWZpbmVkO1xuICB2YXIgbWVtbyA9IGFyZ3VtZW50cy5sZW5ndGggPiA2ICYmIGFyZ3VtZW50c1s2XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzZdIDogbnVsbDtcbiAgdmFyIGNsaWVudERvbWFpbiA9IGFyZ3VtZW50cy5sZW5ndGggPiA3ICYmIGFyZ3VtZW50c1s3XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzddIDogbnVsbDtcbiAgdmFyIGNsaWVudFNpZ25pbmdLZXkgPSBhcmd1bWVudHMubGVuZ3RoID4gOCAmJiBhcmd1bWVudHNbOF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s4XSA6IG51bGw7XG4gIGlmIChjbGllbnRBY2NvdW50SUQuc3RhcnRzV2l0aChcIk1cIikgJiYgbWVtbykge1xuICAgIHRocm93IEVycm9yKFwibWVtbyBjYW5ub3QgYmUgdXNlZCBpZiBjbGllbnRBY2NvdW50SUQgaXMgYSBtdXhlZCBhY2NvdW50XCIpO1xuICB9XG4gIHZhciBhY2NvdW50ID0gbmV3IF9zdGVsbGFyQmFzZS5BY2NvdW50KHNlcnZlcktleXBhaXIucHVibGljS2V5KCksIFwiLTFcIik7XG4gIHZhciBub3cgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbiAgdmFyIHZhbHVlID0gKDAsIF9yYW5kb21ieXRlcy5kZWZhdWx0KSg0OCkudG9TdHJpbmcoXCJiYXNlNjRcIik7XG4gIHZhciBidWlsZGVyID0gbmV3IF9zdGVsbGFyQmFzZS5UcmFuc2FjdGlvbkJ1aWxkZXIoYWNjb3VudCwge1xuICAgIGZlZTogX3N0ZWxsYXJCYXNlLkJBU0VfRkVFLFxuICAgIG5ldHdvcmtQYXNzcGhyYXNlOiBuZXR3b3JrUGFzc3BocmFzZSxcbiAgICB0aW1lYm91bmRzOiB7XG4gICAgICBtaW5UaW1lOiBub3csXG4gICAgICBtYXhUaW1lOiBub3cgKyB0aW1lb3V0XG4gICAgfVxuICB9KS5hZGRPcGVyYXRpb24oX3N0ZWxsYXJCYXNlLk9wZXJhdGlvbi5tYW5hZ2VEYXRhKHtcbiAgICBuYW1lOiBcIlwiLmNvbmNhdChob21lRG9tYWluLCBcIiBhdXRoXCIpLFxuICAgIHZhbHVlOiB2YWx1ZSxcbiAgICBzb3VyY2U6IGNsaWVudEFjY291bnRJRFxuICB9KSkuYWRkT3BlcmF0aW9uKF9zdGVsbGFyQmFzZS5PcGVyYXRpb24ubWFuYWdlRGF0YSh7XG4gICAgbmFtZTogXCJ3ZWJfYXV0aF9kb21haW5cIixcbiAgICB2YWx1ZTogd2ViQXV0aERvbWFpbixcbiAgICBzb3VyY2U6IGFjY291bnQuYWNjb3VudElkKClcbiAgfSkpO1xuICBpZiAoY2xpZW50RG9tYWluKSB7XG4gICAgaWYgKCFjbGllbnRTaWduaW5nS2V5KSB7XG4gICAgICB0aHJvdyBFcnJvcihcImNsaWVudFNpZ25pbmdLZXkgaXMgcmVxdWlyZWQgaWYgY2xpZW50RG9tYWluIGlzIHByb3ZpZGVkXCIpO1xuICAgIH1cbiAgICBidWlsZGVyLmFkZE9wZXJhdGlvbihfc3RlbGxhckJhc2UuT3BlcmF0aW9uLm1hbmFnZURhdGEoe1xuICAgICAgbmFtZTogXCJjbGllbnRfZG9tYWluXCIsXG4gICAgICB2YWx1ZTogY2xpZW50RG9tYWluLFxuICAgICAgc291cmNlOiBjbGllbnRTaWduaW5nS2V5XG4gICAgfSkpO1xuICB9XG4gIGlmIChtZW1vKSB7XG4gICAgYnVpbGRlci5hZGRNZW1vKF9zdGVsbGFyQmFzZS5NZW1vLmlkKG1lbW8pKTtcbiAgfVxuICB2YXIgdHJhbnNhY3Rpb24gPSBidWlsZGVyLmJ1aWxkKCk7XG4gIHRyYW5zYWN0aW9uLnNpZ24oc2VydmVyS2V5cGFpcik7XG4gIHJldHVybiB0cmFuc2FjdGlvbi50b0VudmVsb3BlKCkudG9YRFIoXCJiYXNlNjRcIikudG9TdHJpbmcoKTtcbn1cbmZ1bmN0aW9uIHJlYWRDaGFsbGVuZ2VUeChjaGFsbGVuZ2VUeCwgc2VydmVyQWNjb3VudElELCBuZXR3b3JrUGFzc3BocmFzZSwgaG9tZURvbWFpbnMsIHdlYkF1dGhEb21haW4pIHtcbiAgdmFyIF90cmFuc2FjdGlvbiR0aW1lQm91bjtcbiAgaWYgKHNlcnZlckFjY291bnRJRC5zdGFydHNXaXRoKFwiTVwiKSkge1xuICAgIHRocm93IEVycm9yKFwiSW52YWxpZCBzZXJ2ZXJBY2NvdW50SUQ6IG11bHRpcGxleGVkIGFjY291bnRzIGFyZSBub3Qgc3VwcG9ydGVkLlwiKTtcbiAgfVxuICB2YXIgdHJhbnNhY3Rpb247XG4gIHRyeSB7XG4gICAgdHJhbnNhY3Rpb24gPSBuZXcgX3N0ZWxsYXJCYXNlLlRyYW5zYWN0aW9uKGNoYWxsZW5nZVR4LCBuZXR3b3JrUGFzc3BocmFzZSk7XG4gIH0gY2F0Y2ggKF91bnVzZWQpIHtcbiAgICB0cnkge1xuICAgICAgdHJhbnNhY3Rpb24gPSBuZXcgX3N0ZWxsYXJCYXNlLkZlZUJ1bXBUcmFuc2FjdGlvbihjaGFsbGVuZ2VUeCwgbmV0d29ya1Bhc3NwaHJhc2UpO1xuICAgIH0gY2F0Y2ggKF91bnVzZWQyKSB7XG4gICAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJJbnZhbGlkIGNoYWxsZW5nZTogdW5hYmxlIHRvIGRlc2VyaWFsaXplIGNoYWxsZW5nZVR4IHRyYW5zYWN0aW9uIHN0cmluZ1wiKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiSW52YWxpZCBjaGFsbGVuZ2U6IGV4cGVjdGVkIGEgVHJhbnNhY3Rpb24gYnV0IHJlY2VpdmVkIGEgRmVlQnVtcFRyYW5zYWN0aW9uXCIpO1xuICB9XG4gIHZhciBzZXF1ZW5jZSA9IE51bWJlci5wYXJzZUludCh0cmFuc2FjdGlvbi5zZXF1ZW5jZSwgMTApO1xuICBpZiAoc2VxdWVuY2UgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJUaGUgdHJhbnNhY3Rpb24gc2VxdWVuY2UgbnVtYmVyIHNob3VsZCBiZSB6ZXJvXCIpO1xuICB9XG4gIGlmICh0cmFuc2FjdGlvbi5zb3VyY2UgIT09IHNlcnZlckFjY291bnRJRCkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRoZSB0cmFuc2FjdGlvbiBzb3VyY2UgYWNjb3VudCBpcyBub3QgZXF1YWwgdG8gdGhlIHNlcnZlcidzIGFjY291bnRcIik7XG4gIH1cbiAgaWYgKHRyYW5zYWN0aW9uLm9wZXJhdGlvbnMubGVuZ3RoIDwgMSkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRoZSB0cmFuc2FjdGlvbiBzaG91bGQgY29udGFpbiBhdCBsZWFzdCBvbmUgb3BlcmF0aW9uXCIpO1xuICB9XG4gIHZhciBfdHJhbnNhY3Rpb24kb3BlcmF0aW8gPSBfdG9BcnJheSh0cmFuc2FjdGlvbi5vcGVyYXRpb25zKSxcbiAgICBvcGVyYXRpb24gPSBfdHJhbnNhY3Rpb24kb3BlcmF0aW9bMF0sXG4gICAgc3Vic2VxdWVudE9wZXJhdGlvbnMgPSBfdHJhbnNhY3Rpb24kb3BlcmF0aW8uc2xpY2UoMSk7XG4gIGlmICghb3BlcmF0aW9uLnNvdXJjZSkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRoZSB0cmFuc2FjdGlvbidzIG9wZXJhdGlvbiBzaG91bGQgY29udGFpbiBhIHNvdXJjZSBhY2NvdW50XCIpO1xuICB9XG4gIHZhciBjbGllbnRBY2NvdW50SUQgPSBvcGVyYXRpb24uc291cmNlO1xuICB2YXIgbWVtbyA9IG51bGw7XG4gIGlmICh0cmFuc2FjdGlvbi5tZW1vLnR5cGUgIT09IF9zdGVsbGFyQmFzZS5NZW1vTm9uZSkge1xuICAgIGlmIChjbGllbnRBY2NvdW50SUQuc3RhcnRzV2l0aChcIk1cIikpIHtcbiAgICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRoZSB0cmFuc2FjdGlvbiBoYXMgYSBtZW1vIGJ1dCB0aGUgY2xpZW50IGFjY291bnQgSUQgaXMgYSBtdXhlZCBhY2NvdW50XCIpO1xuICAgIH1cbiAgICBpZiAodHJhbnNhY3Rpb24ubWVtby50eXBlICE9PSBfc3RlbGxhckJhc2UuTWVtb0lEKSB7XG4gICAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJUaGUgdHJhbnNhY3Rpb24ncyBtZW1vIG11c3QgYmUgb2YgdHlwZSBgaWRgXCIpO1xuICAgIH1cbiAgICBtZW1vID0gdHJhbnNhY3Rpb24ubWVtby52YWx1ZTtcbiAgfVxuICBpZiAob3BlcmF0aW9uLnR5cGUgIT09IFwibWFuYWdlRGF0YVwiKSB7XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiVGhlIHRyYW5zYWN0aW9uJ3Mgb3BlcmF0aW9uIHR5cGUgc2hvdWxkIGJlICdtYW5hZ2VEYXRhJ1wiKTtcbiAgfVxuICBpZiAodHJhbnNhY3Rpb24udGltZUJvdW5kcyAmJiBOdW1iZXIucGFyc2VJbnQoKF90cmFuc2FjdGlvbiR0aW1lQm91biA9IHRyYW5zYWN0aW9uLnRpbWVCb3VuZHMpID09PSBudWxsIHx8IF90cmFuc2FjdGlvbiR0aW1lQm91biA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RyYW5zYWN0aW9uJHRpbWVCb3VuLm1heFRpbWUsIDEwKSA9PT0gX3N0ZWxsYXJCYXNlLlRpbWVvdXRJbmZpbml0ZSkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRoZSB0cmFuc2FjdGlvbiByZXF1aXJlcyBub24taW5maW5pdGUgdGltZWJvdW5kc1wiKTtcbiAgfVxuICBpZiAoIV91dGlscy5VdGlscy52YWxpZGF0ZVRpbWVib3VuZHModHJhbnNhY3Rpb24sIDYwICogNSkpIHtcbiAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJUaGUgdHJhbnNhY3Rpb24gaGFzIGV4cGlyZWRcIik7XG4gIH1cbiAgaWYgKG9wZXJhdGlvbi52YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiVGhlIHRyYW5zYWN0aW9uJ3Mgb3BlcmF0aW9uIHZhbHVlcyBzaG91bGQgbm90IGJlIG51bGxcIik7XG4gIH1cbiAgaWYgKCFvcGVyYXRpb24udmFsdWUpIHtcbiAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJUaGUgdHJhbnNhY3Rpb24ncyBvcGVyYXRpb24gdmFsdWUgc2hvdWxkIG5vdCBiZSBudWxsXCIpO1xuICB9XG4gIGlmIChCdWZmZXIuZnJvbShvcGVyYXRpb24udmFsdWUudG9TdHJpbmcoKSwgXCJiYXNlNjRcIikubGVuZ3RoICE9PSA0OCkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRoZSB0cmFuc2FjdGlvbidzIG9wZXJhdGlvbiB2YWx1ZSBzaG91bGQgYmUgYSA2NCBieXRlcyBiYXNlNjQgcmFuZG9tIHN0cmluZ1wiKTtcbiAgfVxuICBpZiAoIWhvbWVEb21haW5zKSB7XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiSW52YWxpZCBob21lRG9tYWluczogYSBob21lIGRvbWFpbiBtdXN0IGJlIHByb3ZpZGVkIGZvciB2ZXJpZmljYXRpb25cIik7XG4gIH1cbiAgdmFyIG1hdGNoZWRIb21lRG9tYWluO1xuICBpZiAodHlwZW9mIGhvbWVEb21haW5zID09PSBcInN0cmluZ1wiKSB7XG4gICAgaWYgKFwiXCIuY29uY2F0KGhvbWVEb21haW5zLCBcIiBhdXRoXCIpID09PSBvcGVyYXRpb24ubmFtZSkge1xuICAgICAgbWF0Y2hlZEhvbWVEb21haW4gPSBob21lRG9tYWlucztcbiAgICB9XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShob21lRG9tYWlucykpIHtcbiAgICBtYXRjaGVkSG9tZURvbWFpbiA9IGhvbWVEb21haW5zLmZpbmQoZnVuY3Rpb24gKGRvbWFpbikge1xuICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KGRvbWFpbiwgXCIgYXV0aFwiKSA9PT0gb3BlcmF0aW9uLm5hbWU7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiSW52YWxpZCBob21lRG9tYWluczogaG9tZURvbWFpbnMgdHlwZSBpcyBcIi5jb25jYXQoX3R5cGVvZihob21lRG9tYWlucyksIFwiIGJ1dCBzaG91bGQgYmUgYSBzdHJpbmcgb3IgYW4gYXJyYXlcIikpO1xuICB9XG4gIGlmICghbWF0Y2hlZEhvbWVEb21haW4pIHtcbiAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJJbnZhbGlkIGhvbWVEb21haW5zOiB0aGUgdHJhbnNhY3Rpb24ncyBvcGVyYXRpb24ga2V5IG5hbWUgZG9lcyBub3QgbWF0Y2ggdGhlIGV4cGVjdGVkIGhvbWUgZG9tYWluXCIpO1xuICB9XG4gIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihzdWJzZXF1ZW50T3BlcmF0aW9ucyksXG4gICAgX3N0ZXA7XG4gIHRyeSB7XG4gICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHtcbiAgICAgIHZhciBvcCA9IF9zdGVwLnZhbHVlO1xuICAgICAgaWYgKG9wLnR5cGUgIT09IFwibWFuYWdlRGF0YVwiKSB7XG4gICAgICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRoZSB0cmFuc2FjdGlvbiBoYXMgb3BlcmF0aW9ucyB0aGF0IGFyZSBub3Qgb2YgdHlwZSAnbWFuYWdlRGF0YSdcIik7XG4gICAgICB9XG4gICAgICBpZiAob3Auc291cmNlICE9PSBzZXJ2ZXJBY2NvdW50SUQgJiYgb3AubmFtZSAhPT0gXCJjbGllbnRfZG9tYWluXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiVGhlIHRyYW5zYWN0aW9uIGhhcyBvcGVyYXRpb25zIHRoYXQgYXJlIHVucmVjb2duaXplZFwiKTtcbiAgICAgIH1cbiAgICAgIGlmIChvcC5uYW1lID09PSBcIndlYl9hdXRoX2RvbWFpblwiKSB7XG4gICAgICAgIGlmIChvcC52YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiJ3dlYl9hdXRoX2RvbWFpbicgb3BlcmF0aW9uIHZhbHVlIHNob3VsZCBub3QgYmUgbnVsbFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3AudmFsdWUuY29tcGFyZShCdWZmZXIuZnJvbSh3ZWJBdXRoRG9tYWluKSkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCInd2ViX2F1dGhfZG9tYWluJyBvcGVyYXRpb24gdmFsdWUgZG9lcyBub3QgbWF0Y2ggXCIuY29uY2F0KHdlYkF1dGhEb21haW4pKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2l0ZXJhdG9yLmUoZXJyKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBfaXRlcmF0b3IuZigpO1xuICB9XG4gIGlmICghdmVyaWZ5VHhTaWduZWRCeSh0cmFuc2FjdGlvbiwgc2VydmVyQWNjb3VudElEKSkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRyYW5zYWN0aW9uIG5vdCBzaWduZWQgYnkgc2VydmVyOiAnXCIuY29uY2F0KHNlcnZlckFjY291bnRJRCwgXCInXCIpKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHR4OiB0cmFuc2FjdGlvbixcbiAgICBjbGllbnRBY2NvdW50SUQ6IGNsaWVudEFjY291bnRJRCxcbiAgICBtYXRjaGVkSG9tZURvbWFpbjogbWF0Y2hlZEhvbWVEb21haW4sXG4gICAgbWVtbzogbWVtb1xuICB9O1xufVxuZnVuY3Rpb24gdmVyaWZ5Q2hhbGxlbmdlVHhUaHJlc2hvbGQoY2hhbGxlbmdlVHgsIHNlcnZlckFjY291bnRJRCwgbmV0d29ya1Bhc3NwaHJhc2UsIHRocmVzaG9sZCwgc2lnbmVyU3VtbWFyeSwgaG9tZURvbWFpbnMsIHdlYkF1dGhEb21haW4pIHtcbiAgdmFyIHNpZ25lcnMgPSBzaWduZXJTdW1tYXJ5Lm1hcChmdW5jdGlvbiAoc2lnbmVyKSB7XG4gICAgcmV0dXJuIHNpZ25lci5rZXk7XG4gIH0pO1xuICB2YXIgc2lnbmVyc0ZvdW5kID0gdmVyaWZ5Q2hhbGxlbmdlVHhTaWduZXJzKGNoYWxsZW5nZVR4LCBzZXJ2ZXJBY2NvdW50SUQsIG5ldHdvcmtQYXNzcGhyYXNlLCBzaWduZXJzLCBob21lRG9tYWlucywgd2ViQXV0aERvbWFpbik7XG4gIHZhciB3ZWlnaHQgPSAwO1xuICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcCgpIHtcbiAgICB2YXIgX3NpZ25lclN1bW1hcnkkZmluZDtcbiAgICB2YXIgc2lnbmVyID0gX3NpZ25lcnNGb3VuZFtfaV07XG4gICAgdmFyIHNpZ1dlaWdodCA9ICgoX3NpZ25lclN1bW1hcnkkZmluZCA9IHNpZ25lclN1bW1hcnkuZmluZChmdW5jdGlvbiAocykge1xuICAgICAgcmV0dXJuIHMua2V5ID09PSBzaWduZXI7XG4gICAgfSkpID09PSBudWxsIHx8IF9zaWduZXJTdW1tYXJ5JGZpbmQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9zaWduZXJTdW1tYXJ5JGZpbmQud2VpZ2h0KSB8fCAwO1xuICAgIHdlaWdodCArPSBzaWdXZWlnaHQ7XG4gIH07XG4gIGZvciAodmFyIF9pID0gMCwgX3NpZ25lcnNGb3VuZCA9IHNpZ25lcnNGb3VuZDsgX2kgPCBfc2lnbmVyc0ZvdW5kLmxlbmd0aDsgX2krKykge1xuICAgIF9sb29wKCk7XG4gIH1cbiAgaWYgKHdlaWdodCA8IHRocmVzaG9sZCkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcInNpZ25lcnMgd2l0aCB3ZWlnaHQgXCIuY29uY2F0KHdlaWdodCwgXCIgZG8gbm90IG1lZXQgdGhyZXNob2xkIFwiKS5jb25jYXQodGhyZXNob2xkLCBcIlxcXCJcIikpO1xuICB9XG4gIHJldHVybiBzaWduZXJzRm91bmQ7XG59XG5mdW5jdGlvbiB2ZXJpZnlDaGFsbGVuZ2VUeFNpZ25lcnMoY2hhbGxlbmdlVHgsIHNlcnZlckFjY291bnRJRCwgbmV0d29ya1Bhc3NwaHJhc2UsIHNpZ25lcnMsIGhvbWVEb21haW5zLCB3ZWJBdXRoRG9tYWluKSB7XG4gIHZhciBfcmVhZENoYWxsZW5nZVR4ID0gcmVhZENoYWxsZW5nZVR4KGNoYWxsZW5nZVR4LCBzZXJ2ZXJBY2NvdW50SUQsIG5ldHdvcmtQYXNzcGhyYXNlLCBob21lRG9tYWlucywgd2ViQXV0aERvbWFpbiksXG4gICAgdHggPSBfcmVhZENoYWxsZW5nZVR4LnR4O1xuICB2YXIgc2VydmVyS1A7XG4gIHRyeSB7XG4gICAgc2VydmVyS1AgPSBfc3RlbGxhckJhc2UuS2V5cGFpci5mcm9tUHVibGljS2V5KHNlcnZlckFjY291bnRJRCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGluZmVyIGtleXBhaXIgZnJvbSB0aGUgcHJvdmlkZWQgJ3NlcnZlckFjY291bnRJRCc6IFwiLmNvbmNhdChlcnIubWVzc2FnZSkpO1xuICB9XG4gIHZhciBjbGllbnRTaWduZXJzID0gbmV3IFNldCgpO1xuICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHNpZ25lcnMpLFxuICAgIF9zdGVwMjtcbiAgdHJ5IHtcbiAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykge1xuICAgICAgdmFyIF9zaWduZXIgPSBfc3RlcDIudmFsdWU7XG4gICAgICBpZiAoX3NpZ25lciA9PT0gc2VydmVyS1AucHVibGljS2V5KCkpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoX3NpZ25lci5jaGFyQXQoMCkgIT09IFwiR1wiKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgY2xpZW50U2lnbmVycy5hZGQoX3NpZ25lcik7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfaXRlcmF0b3IyLmUoZXJyKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBfaXRlcmF0b3IyLmYoKTtcbiAgfVxuICBpZiAoY2xpZW50U2lnbmVycy5zaXplID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiTm8gdmVyaWZpYWJsZSBjbGllbnQgc2lnbmVycyBwcm92aWRlZCwgYXQgbGVhc3Qgb25lIEcuLi4gYWRkcmVzcyBtdXN0IGJlIHByb3ZpZGVkXCIpO1xuICB9XG4gIHZhciBjbGllbnRTaWduaW5nS2V5O1xuICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHR4Lm9wZXJhdGlvbnMpLFxuICAgIF9zdGVwMztcbiAgdHJ5IHtcbiAgICBmb3IgKF9pdGVyYXRvcjMucygpOyAhKF9zdGVwMyA9IF9pdGVyYXRvcjMubigpKS5kb25lOykge1xuICAgICAgdmFyIG9wID0gX3N0ZXAzLnZhbHVlO1xuICAgICAgaWYgKG9wLnR5cGUgPT09IFwibWFuYWdlRGF0YVwiICYmIG9wLm5hbWUgPT09IFwiY2xpZW50X2RvbWFpblwiKSB7XG4gICAgICAgIGlmIChjbGllbnRTaWduaW5nS2V5KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiRm91bmQgbW9yZSB0aGFuIG9uZSBjbGllbnRfZG9tYWluIG9wZXJhdGlvblwiKTtcbiAgICAgICAgfVxuICAgICAgICBjbGllbnRTaWduaW5nS2V5ID0gb3Auc291cmNlO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2l0ZXJhdG9yMy5lKGVycik7XG4gIH0gZmluYWxseSB7XG4gICAgX2l0ZXJhdG9yMy5mKCk7XG4gIH1cbiAgdmFyIGFsbFNpZ25lcnMgPSBbc2VydmVyS1AucHVibGljS2V5KCldLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoQXJyYXkuZnJvbShjbGllbnRTaWduZXJzKSkpO1xuICBpZiAoY2xpZW50U2lnbmluZ0tleSkge1xuICAgIGFsbFNpZ25lcnMucHVzaChjbGllbnRTaWduaW5nS2V5KTtcbiAgfVxuICB2YXIgc2lnbmVyc0ZvdW5kID0gZ2F0aGVyVHhTaWduZXJzKHR4LCBhbGxTaWduZXJzKTtcbiAgdmFyIHNlcnZlclNpZ25hdHVyZUZvdW5kID0gZmFsc2U7XG4gIHZhciBjbGllbnRTaWduaW5nS2V5U2lnbmF0dXJlRm91bmQgPSBmYWxzZTtcbiAgZm9yICh2YXIgX2kyID0gMCwgX3NpZ25lcnNGb3VuZDIgPSBzaWduZXJzRm91bmQ7IF9pMiA8IF9zaWduZXJzRm91bmQyLmxlbmd0aDsgX2kyKyspIHtcbiAgICB2YXIgc2lnbmVyID0gX3NpZ25lcnNGb3VuZDJbX2kyXTtcbiAgICBpZiAoc2lnbmVyID09PSBzZXJ2ZXJLUC5wdWJsaWNLZXkoKSkge1xuICAgICAgc2VydmVyU2lnbmF0dXJlRm91bmQgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAoc2lnbmVyID09PSBjbGllbnRTaWduaW5nS2V5KSB7XG4gICAgICBjbGllbnRTaWduaW5nS2V5U2lnbmF0dXJlRm91bmQgPSB0cnVlO1xuICAgIH1cbiAgfVxuICBpZiAoIXNlcnZlclNpZ25hdHVyZUZvdW5kKSB7XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiVHJhbnNhY3Rpb24gbm90IHNpZ25lZCBieSBzZXJ2ZXI6ICdcIi5jb25jYXQoc2VydmVyS1AucHVibGljS2V5KCksIFwiJ1wiKSk7XG4gIH1cbiAgaWYgKGNsaWVudFNpZ25pbmdLZXkgJiYgIWNsaWVudFNpZ25pbmdLZXlTaWduYXR1cmVGb3VuZCkge1xuICAgIHRocm93IG5ldyBfZXJyb3JzLkludmFsaWRDaGFsbGVuZ2VFcnJvcihcIlRyYW5zYWN0aW9uIG5vdCBzaWduZWQgYnkgdGhlIHNvdXJjZSBhY2NvdW50IG9mIHRoZSAnY2xpZW50X2RvbWFpbicgXCIgKyBcIk1hbmFnZURhdGEgb3BlcmF0aW9uXCIpO1xuICB9XG4gIGlmIChzaWduZXJzRm91bmQubGVuZ3RoID09PSAxKSB7XG4gICAgdGhyb3cgbmV3IF9lcnJvcnMuSW52YWxpZENoYWxsZW5nZUVycm9yKFwiTm9uZSBvZiB0aGUgZ2l2ZW4gc2lnbmVycyBtYXRjaCB0aGUgdHJhbnNhY3Rpb24gc2lnbmF0dXJlc1wiKTtcbiAgfVxuICBpZiAoc2lnbmVyc0ZvdW5kLmxlbmd0aCAhPT0gdHguc2lnbmF0dXJlcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJUcmFuc2FjdGlvbiBoYXMgdW5yZWNvZ25pemVkIHNpZ25hdHVyZXNcIik7XG4gIH1cbiAgc2lnbmVyc0ZvdW5kLnNwbGljZShzaWduZXJzRm91bmQuaW5kZXhPZihzZXJ2ZXJLUC5wdWJsaWNLZXkoKSksIDEpO1xuICBpZiAoY2xpZW50U2lnbmluZ0tleSkge1xuICAgIHNpZ25lcnNGb3VuZC5zcGxpY2Uoc2lnbmVyc0ZvdW5kLmluZGV4T2YoY2xpZW50U2lnbmluZ0tleSksIDEpO1xuICB9XG4gIHJldHVybiBzaWduZXJzRm91bmQ7XG59XG5mdW5jdGlvbiB2ZXJpZnlUeFNpZ25lZEJ5KHRyYW5zYWN0aW9uLCBhY2NvdW50SUQpIHtcbiAgcmV0dXJuIGdhdGhlclR4U2lnbmVycyh0cmFuc2FjdGlvbiwgW2FjY291bnRJRF0pLmxlbmd0aCAhPT0gMDtcbn1cbmZ1bmN0aW9uIGdhdGhlclR4U2lnbmVycyh0cmFuc2FjdGlvbiwgc2lnbmVycykge1xuICB2YXIgaGFzaGVkU2lnbmF0dXJlQmFzZSA9IHRyYW5zYWN0aW9uLmhhc2goKTtcbiAgdmFyIHR4U2lnbmF0dXJlcyA9IF90b0NvbnN1bWFibGVBcnJheSh0cmFuc2FjdGlvbi5zaWduYXR1cmVzKTtcbiAgdmFyIHNpZ25lcnNGb3VuZCA9IG5ldyBTZXQoKTtcbiAgdmFyIF9pdGVyYXRvcjQgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihzaWduZXJzKSxcbiAgICBfc3RlcDQ7XG4gIHRyeSB7XG4gICAgZm9yIChfaXRlcmF0b3I0LnMoKTsgIShfc3RlcDQgPSBfaXRlcmF0b3I0Lm4oKSkuZG9uZTspIHtcbiAgICAgIHZhciBzaWduZXIgPSBfc3RlcDQudmFsdWU7XG4gICAgICBpZiAodHhTaWduYXR1cmVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHZhciBrZXlwYWlyID0gdm9pZCAwO1xuICAgICAgdHJ5IHtcbiAgICAgICAga2V5cGFpciA9IF9zdGVsbGFyQmFzZS5LZXlwYWlyLmZyb21QdWJsaWNLZXkoc2lnbmVyKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICB0aHJvdyBuZXcgX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3IoXCJTaWduZXIgaXMgbm90IGEgdmFsaWQgYWRkcmVzczogXCIuY29uY2F0KGVyci5tZXNzYWdlKSk7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHR4U2lnbmF0dXJlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgZGVjU2lnID0gdHhTaWduYXR1cmVzW2ldO1xuICAgICAgICBpZiAoIWRlY1NpZy5oaW50KCkuZXF1YWxzKGtleXBhaXIuc2lnbmF0dXJlSGludCgpKSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChrZXlwYWlyLnZlcmlmeShoYXNoZWRTaWduYXR1cmVCYXNlLCBkZWNTaWcuc2lnbmF0dXJlKCkpKSB7XG4gICAgICAgICAgc2lnbmVyc0ZvdW5kLmFkZChzaWduZXIpO1xuICAgICAgICAgIHR4U2lnbmF0dXJlcy5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9pdGVyYXRvcjQuZShlcnIpO1xuICB9IGZpbmFsbHkge1xuICAgIF9pdGVyYXRvcjQuZigpO1xuICB9XG4gIHJldHVybiBBcnJheS5mcm9tKHNpZ25lcnNGb3VuZCk7XG59Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/webauth/utils.js\n");

/***/ })

};
;